{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/components/filters/CustomSelect.vue?3141","webpack:///./src/views/Dataviz.vue?90ff","webpack:///./src/assets/img/logo-dailybread.png","webpack:///./src/assets/svg/cereals-icon.svg","webpack:///./src/assets/svg/line-icon.svg","webpack:///./src/assets/svg/fruit-icon.svg","webpack:///./src/views/Home.vue?92a5","webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/assets/svg/close-icon.svg","webpack:///./src/assets/svg/start-button.svg","webpack:///./src/assets/svg/chartview-shape-background.svg","webpack:///./src/App.vue?e0e7","webpack:///./src/App.vue","webpack:///./src/views/Home.vue?5bc2","webpack:///./src/views/Home.vue?c853","webpack:///./src/views/Dataviz.vue?2b84","webpack:///./src/components/Filter.vue?db55","webpack:///./src/components/filters/CustomSelect.vue?3d15","webpack:///src/components/filters/CustomSelect.vue","webpack:///./src/components/filters/CustomSelect.vue?3daa","webpack:///./src/components/filters/CustomSelect.vue?5146","webpack:///./src/components/filters/DateSelect.vue?861c","webpack:///src/components/filters/DateSelect.vue","webpack:///./src/components/filters/DateSelect.vue?7c72","webpack:///./src/components/filters/DateSelect.vue?280f","webpack:///src/components/Filter.vue","webpack:///./src/components/Filter.vue?8df8","webpack:///./src/components/Filter.vue?522c","webpack:///src/views/Dataviz.vue","webpack:///./src/views/Dataviz.vue?1aad","webpack:///./src/views/Dataviz.vue?afa4","webpack:///./src/views/ChartView.vue?aa92","webpack:///./src/components/charts/ChartViewBar.js","webpack:///./src/components/charts/ChartViewLine.js","webpack:///src/views/ChartView.vue","webpack:///./src/views/ChartView.vue?ec09","webpack:///./src/views/ChartView.vue?c018","webpack:///./src/router.js","webpack:///./src/http/index.js","webpack:///./src/store/modules/Params.js","webpack:///./src/store/modules/Selection.js","webpack:///./src/store/index.js","webpack:///./src/helpers/filters.js","webpack:///./src/helpers/directives.js","webpack:///./src/main.js","webpack:///./src/assets/svg/plus-icon.svg","webpack:///./src/views/ChartView.vue?48b0","webpack:///./src/assets/svg/chart-color-icon.svg","webpack:///./src/assets/svg/btn-start-active.svg","webpack:///./src/components/Filter.vue?dca7","webpack:///./src/assets/svg/vegetable-icon.svg","webpack:///./src/assets/svg/milk-icon.svg","webpack:///./src/assets/svg/logo-dailybread.svg","webpack:///./src/assets/svg/sugar-icon.svg","webpack:///./src/assets/svg/background-header.svg","webpack:///./src/assets/svg/background.svg","webpack:///./src/assets/svg/remove-icon.svg","webpack:///./src/assets/svg/select-arrow.svg","webpack:///./src/assets/svg/back-icon.svg","webpack:///./src/assets/svg/fish-icon.svg","webpack:///./src/assets/svg/meat-icon.svg","webpack:///./src/assets/svg/btn-start.svg","webpack:///./src/assets/svg sync nonrecursive \\.svg$","webpack:///./src/assets/svg/arrow.svg","webpack:///./src/assets/svg/bar-icon.svg","webpack:///./src/components/filters/DateSelect.vue?965c","webpack:///./src/assets/svg/coffee-icon.svg"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","app","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_CustomSelect_vue_vue_type_style_index_0_id_8fe89f8a_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_CustomSelect_vue_vue_type_style_index_0_id_8fe89f8a_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0___default","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Dataviz_vue_vue_type_style_index_0_id_d7b70788_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Dataviz_vue_vue_type_style_index_0_id_d7b70788_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0___default","__webpack_exports__","svg_baker_runtime_browser_symbol__WEBPACK_IMPORTED_MODULE_0__","svg_baker_runtime_browser_symbol__WEBPACK_IMPORTED_MODULE_0___default","svg_sprite_loader_runtime_browser_sprite_build__WEBPACK_IMPORTED_MODULE_1__","svg_sprite_loader_runtime_browser_sprite_build__WEBPACK_IMPORTED_MODULE_1___default","symbol","a","id","use","viewBox","content","add","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Home_vue_vue_type_style_index_0_id_6f12594a_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Home_vue_vue_type_style_index_0_id_6f12594a_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0___default","map","./af","./af.js","./ar","./ar-dz","./ar-dz.js","./ar-kw","./ar-kw.js","./ar-ly","./ar-ly.js","./ar-ma","./ar-ma.js","./ar-sa","./ar-sa.js","./ar-tn","./ar-tn.js","./ar.js","./az","./az.js","./be","./be.js","./bg","./bg.js","./bm","./bm.js","./bn","./bn.js","./bo","./bo.js","./br","./br.js","./bs","./bs.js","./ca","./ca.js","./cs","./cs.js","./cv","./cv.js","./cy","./cy.js","./da","./da.js","./de","./de-at","./de-at.js","./de-ch","./de-ch.js","./de.js","./dv","./dv.js","./el","./el.js","./en-SG","./en-SG.js","./en-au","./en-au.js","./en-ca","./en-ca.js","./en-gb","./en-gb.js","./en-ie","./en-ie.js","./en-il","./en-il.js","./en-nz","./en-nz.js","./eo","./eo.js","./es","./es-do","./es-do.js","./es-us","./es-us.js","./es.js","./et","./et.js","./eu","./eu.js","./fa","./fa.js","./fi","./fi.js","./fo","./fo.js","./fr","./fr-ca","./fr-ca.js","./fr-ch","./fr-ch.js","./fr.js","./fy","./fy.js","./ga","./ga.js","./gd","./gd.js","./gl","./gl.js","./gom-latn","./gom-latn.js","./gu","./gu.js","./he","./he.js","./hi","./hi.js","./hr","./hr.js","./hu","./hu.js","./hy-am","./hy-am.js","./id","./id.js","./is","./is.js","./it","./it-ch","./it-ch.js","./it.js","./ja","./ja.js","./jv","./jv.js","./ka","./ka.js","./kk","./kk.js","./km","./km.js","./kn","./kn.js","./ko","./ko.js","./ku","./ku.js","./ky","./ky.js","./lb","./lb.js","./lo","./lo.js","./lt","./lt.js","./lv","./lv.js","./me","./me.js","./mi","./mi.js","./mk","./mk.js","./ml","./ml.js","./mn","./mn.js","./mr","./mr.js","./ms","./ms-my","./ms-my.js","./ms.js","./mt","./mt.js","./my","./my.js","./nb","./nb.js","./ne","./ne.js","./nl","./nl-be","./nl-be.js","./nl.js","./nn","./nn.js","./pa-in","./pa-in.js","./pl","./pl.js","./pt","./pt-br","./pt-br.js","./pt.js","./ro","./ro.js","./ru","./ru.js","./sd","./sd.js","./se","./se.js","./si","./si.js","./sk","./sk.js","./sl","./sl.js","./sq","./sq.js","./sr","./sr-cyrl","./sr-cyrl.js","./sr.js","./ss","./ss.js","./sv","./sv.js","./sw","./sw.js","./ta","./ta.js","./te","./te.js","./tet","./tet.js","./tg","./tg.js","./th","./th.js","./tl-ph","./tl-ph.js","./tlh","./tlh.js","./tr","./tr.js","./tzl","./tzl.js","./tzm","./tzm-latn","./tzm-latn.js","./tzm.js","./ug-cn","./ug-cn.js","./uk","./uk.js","./ur","./ur.js","./uz","./uz-latn","./uz-latn.js","./uz.js","./vi","./vi.js","./x-pseudo","./x-pseudo.js","./yo","./yo.js","./zh-cn","./zh-cn.js","./zh-hk","./zh-hk.js","./zh-tw","./zh-tw.js","webpackContext","req","webpackContextResolve","e","Error","code","keys","resolve","Appvue_type_template_id_5b2ace06_render","_vm","this","_h","$createElement","_c","_self","attrs","staticRenderFns","script","component","componentNormalizer","App","Homevue_type_template_id_6f12594a_scoped_true_render","staticClass","_m","draggable","to","Homevue_type_template_id_6f12594a_scoped_true_staticRenderFns","src","alt","_v","Home_script","Home_component","Home","Datavizvue_type_template_id_d7b70788_scoped_true_render","class","dataviz--on-menu","mobileMenuOpen","on","close","$event","click","ref","_l","item","index","rerenderkey","$router","arrayGauge","quantity","unit","uindex","aliment_name","_s","_f","xlink:href","Datavizvue_type_template_id_d7b70788_scoped_true_staticRenderFns","Filtervue_type_template_id_8d63421c_render","$route","params","aliment","color","chartColors","model","callback","$$v","selectedCountry","expression","comparedCountries","removable","remove","onCustomSelectRemove","selectedCompareCountry1","_e","selectedCompareCountry2","directives","rawName","addCompareCountry","$emit","Filtervue_type_template_id_8d63421c_staticRenderFns","CustomSelectvue_type_template_id_8fe89f8a_scoped_true_render","is-active","focus","input","type","placeholder","domProps","onFocus","keyup","indexOf","_k","keyCode","onEnter","target","composing","$set","preventDefault","toggleInput","filteredList","country_code","onSelect","country_name","stopPropagation","$refs","change","$$selectedVal","Array","filter","options","selected","val","_value","multiple","onSelectMobile","style","fill","CustomSelectvue_type_template_id_8fe89f8a_scoped_true_staticRenderFns","CustomSelectvue_type_script_lang_js_","watch","props","required","Boolean","default","String","memory","computed","objectSpread","vuex_esm","_this","countryList","el","toLowerCase","includes","mounted","methods","find","onBlur","_this2","main","blur","filters_CustomSelectvue_type_script_lang_js_","CustomSelect_component","CustomSelect","DateSelectvue_type_template_id_115e400e_scoped_true_render","width","height","xmlns","cx","cy","checkIndex","stroke","stroke-width","onClick","mouseover","hover","mouseout","out","decades","selectedDecade","hoverSelect","DateSelectvue_type_template_id_115e400e_scoped_true_staticRenderFns","DateSelectvue_type_script_lang_js_","showDecade","setDecade","toConsumableArray","filters_DateSelectvue_type_script_lang_js_","DateSelect_component","DateSelect","Filtervue_type_script_lang_js_","components","colors","charts","country","set","setCountry","setCompareCountry","removeCompareCountry","components_Filtervue_type_script_lang_js_","Filter_component","Filter","Datavizvue_type_script_lang_js_","FilterComponent","currentData","food","aliment_name_fr","short_name","reduce","acc","curr","year","currentMaxValue","max","Math","getParams","addEventListener","percentage","round","floor","innerHeight","views_Datavizvue_type_script_lang_js_","Dataviz_component","Dataviz","ChartViewvue_type_template_id_6e2b8bfc_scoped_true_render","data-name","bgName","chart-container--bar","chartline","currentFoodData","chartType","tag","heightChart","chartData","for","checked","isArray","_i","$$a","$$el","$$c","$$i","concat","previousAliment","nextAliment","ChartViewvue_type_template_id_6e2b8bfc_scoped_true_staticRenderFns","ChartViewBar","extends","Bar","mixins","reactiveProp","Number","layout","padding","right","legend","display","responsive","maintainAspectRatio","drawBorder","scales","xAxes","categoryPercentage","barPercentage","barThickness","gridLines","ticks","fontColor","fontSize","fontFamily","yAxes","beginAtZero","fontStyle","Intl","NumberFormat","format","tooltips","custom","tooltip","displayColors","callbacks","label","tooltipItem","datasets","datasetIndex","renderChart","ChartViewLine","Line","alimentList","ChartViewvue_type_script_lang_js_","chart-view-bar","chart-view-line","split","join","toUpperCase","chartDataLine","chartDataBar","allCountriesFoodData","currentFood","labels","backgroundColor","borderWidth","borderColor","_this3","pointHoverBackgroundColor","al","pointHoverRadius","pointHitRadius","_this4","currentIndex","findIndex","_this5","views_ChartViewvue_type_script_lang_js_","ChartView_component","ChartView","Vue","VueRouter","routes","path","children","router","instance","axios","baseURL","Params","namespaced","state","countries","yearList","actions","_ref","commit","axiosClient","then","res","mutations","setCountryList","setYearList","getters","Selection","world","_ref2","decade","_ref3","_ref4","_ref5","_ref6","setFoodData","charAt","getWorldData","setWorldState","bool","_ref7","setCompareFoodData","_ref8","zaWarudo","Vuex","store","Store","stopProp","event","directive","binding","vnode","context","document","body","unbind","removeEventListener","require","config","productionTip","render","h","$mount","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_ChartView_vue_vue_type_style_index_0_id_6e2b8bfc_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_ChartView_vue_vue_type_style_index_0_id_6e2b8bfc_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0___default","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Filter_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Filter_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_0___default","./arrow.svg","./back-icon.svg","./background-header.svg","./background.svg","./bar-icon.svg","./btn-start-active.svg","./btn-start.svg","./cereals-icon.svg","./chart-color-icon.svg","./chartview-shape-background.svg","./close-icon.svg","./coffee-icon.svg","./fish-icon.svg","./fruit-icon.svg","./line-icon.svg","./logo-dailybread.svg","./meat-icon.svg","./milk-icon.svg","./plus-icon.svg","./remove-icon.svg","./select-arrow.svg","./start-button.svg","./sugar-icon.svg","./vegetable-icon.svg","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_DateSelect_vue_vue_type_style_index_0_id_115e400e_scoped_true_lang_scss___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_DateSelect_vue_vue_type_style_index_0_id_115e400e_scoped_true_lang_scss___WEBPACK_IMPORTED_MODULE_0___default"],"mappings":"aACA,SAAAA,EAAAC,GAQA,IAPA,IAMAC,EAAAC,EANAC,EAAAH,EAAA,GACAI,EAAAJ,EAAA,GACAK,EAAAL,EAAA,GAIAM,EAAA,EAAAC,EAAA,GACQD,EAAAH,EAAAK,OAAoBF,IAC5BJ,EAAAC,EAAAG,GACAG,EAAAP,IACAK,EAAAG,KAAAD,EAAAP,GAAA,IAEAO,EAAAP,GAAA,EAEA,IAAAD,KAAAG,EACAO,OAAAC,UAAAC,eAAAC,KAAAV,EAAAH,KACAc,EAAAd,GAAAG,EAAAH,IAGAe,KAAAhB,GAEA,MAAAO,EAAAC,OACAD,EAAAU,OAAAV,GAOA,OAHAW,EAAAR,KAAAS,MAAAD,EAAAb,GAAA,IAGAe,IAEA,SAAAA,IAEA,IADA,IAAAC,EACAf,EAAA,EAAiBA,EAAAY,EAAAV,OAA4BF,IAAA,CAG7C,IAFA,IAAAgB,EAAAJ,EAAAZ,GACAiB,GAAA,EACAC,EAAA,EAAkBA,EAAAF,EAAAd,OAA2BgB,IAAA,CAC7C,IAAAC,EAAAH,EAAAE,GACA,IAAAf,EAAAgB,KAAAF,GAAA,GAEAA,IACAL,EAAAQ,OAAApB,IAAA,GACAe,EAAAM,IAAAC,EAAAN,EAAA,KAGA,OAAAD,EAIA,IAAAQ,EAAA,GAKApB,EAAA,CACAqB,IAAA,GAGAZ,EAAA,GAGA,SAAAS,EAAA1B,GAGA,GAAA4B,EAAA5B,GACA,OAAA4B,EAAA5B,GAAA8B,QAGA,IAAAC,EAAAH,EAAA5B,GAAA,CACAK,EAAAL,EACAgC,GAAA,EACAF,QAAA,IAUA,OANAhB,EAAAd,GAAAa,KAAAkB,EAAAD,QAAAC,IAAAD,QAAAJ,GAGAK,EAAAC,GAAA,EAGAD,EAAAD,QAKAJ,EAAAO,EAAAnB,EAGAY,EAAAQ,EAAAN,EAGAF,EAAAS,EAAA,SAAAL,EAAAM,EAAAC,GACAX,EAAAY,EAAAR,EAAAM,IACA1B,OAAA6B,eAAAT,EAAAM,EAAA,CAA0CI,YAAA,EAAAC,IAAAJ,KAK1CX,EAAAgB,EAAA,SAAAZ,GACA,qBAAAa,eAAAC,aACAlC,OAAA6B,eAAAT,EAAAa,OAAAC,YAAA,CAAwDC,MAAA,WAExDnC,OAAA6B,eAAAT,EAAA,cAAiDe,OAAA,KAQjDnB,EAAAoB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAAnB,EAAAmB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,kBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAvC,OAAAwC,OAAA,MAGA,GAFAxB,EAAAgB,EAAAO,GACAvC,OAAA6B,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAAnB,EAAAS,EAAAc,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAvB,EAAA2B,EAAA,SAAAtB,GACA,IAAAM,EAAAN,KAAAiB,WACA,WAA2B,OAAAjB,EAAA,YAC3B,WAAiC,OAAAA,GAEjC,OADAL,EAAAS,EAAAE,EAAA,IAAAA,GACAA,GAIAX,EAAAY,EAAA,SAAAgB,EAAAC,GAAsD,OAAA7C,OAAAC,UAAAC,eAAAC,KAAAyC,EAAAC,IAGtD7B,EAAA8B,EAAA,GAEA,IAAAC,EAAAC,OAAA,gBAAAA,OAAA,oBACAC,EAAAF,EAAAhD,KAAA2C,KAAAK,GACAA,EAAAhD,KAAAX,EACA2D,IAAAG,QACA,QAAAvD,EAAA,EAAgBA,EAAAoD,EAAAlD,OAAuBF,IAAAP,EAAA2D,EAAApD,IACvC,IAAAU,EAAA4C,EAIA1C,EAAAR,KAAA,qBAEAU,kFCtJA,IAAA0C,EAAAnC,EAAA,QAAAoC,EAAApC,EAAA2B,EAAAQ,GAAyfC,EAAG,yFCA5f,IAAAC,EAAArC,EAAA,QAAAsC,EAAAtC,EAAA2B,EAAAU,GAAkeC,EAAG,0BCArejC,EAAAD,QAAiBJ,EAAA8B,EAAuB,iGCAxC9B,EAAAgB,EAAAuB,GAAA,IAAAC,EAAAxC,EAAA,QAAAyC,EAAAzC,EAAA2B,EAAAa,GAAAE,EAAA1C,EAAA,QAAA2C,EAAA3C,EAAA2B,EAAAe,GAEAE,EAAA,IAAiBH,EAAAI,EAAY,CAC7BC,GAAA,eACAC,IAAA,qBACAC,QAAA,YACAC,QAAA,6oIAEaN,EAAAE,EAAMK,IAAAN,GACJL,EAAA,kGCTfvC,EAAAgB,EAAAuB,GAAA,IAAAC,EAAAxC,EAAA,QAAAyC,EAAAzC,EAAA2B,EAAAa,GAAAE,EAAA1C,EAAA,QAAA2C,EAAA3C,EAAA2B,EAAAe,GAEAE,EAAA,IAAiBH,EAAAI,EAAY,CAC7BC,GAAA,YACAC,IAAA,kBACAC,QAAA,YACAC,QAAA,ujBAEaN,EAAAE,EAAMK,IAAAN,GACJL,EAAA,snBCTfvC,EAAAgB,EAAAuB,GAAA,IAAAC,EAAAxC,EAAA,QAAAyC,EAAAzC,EAAA2B,EAAAa,GAAAE,EAAA1C,EAAA,QAAA2C,EAAA3C,EAAA2B,EAAAe,GAEAE,EAAA,IAAiBH,EAAAI,EAAY,CAC7BC,GAAA,aACAC,IAAA,mBACAC,QAAA,YACAC,QAAA,ooEAEaN,EAAAE,EAAMK,IAAAN,GACJL,EAAA,kDCTf,IAAAY,EAAAnD,EAAA,QAAAoD,EAAApD,EAAA2B,EAAAwB,GAA+dC,EAAG,wBCAle,IAAAC,EAAA,CACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,aAAA,OACAC,UAAA,OACAC,aAAA,OACAC,UAAA,OACAC,aAAA,OACAC,UAAA,OACAC,aAAA,OACAC,UAAA,OACAC,aAAA,OACAC,UAAA,OACAC,aAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,aAAA,OACAC,UAAA,OACAC,aAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,UAAA,OACAC,aAAA,OACAC,UAAA,OACAC,aAAA,OACAC,UAAA,OACAC,aAAA,OACAC,UAAA,OACAC,aAAA,OACAC,UAAA,OACAC,aAAA,OACAC,UAAA,OACAC,aAAA,OACAC,UAAA,OACAC,aAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,aAAA,OACAC,UAAA,OACAC,aAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,aAAA,OACAC,UAAA,OACAC,aAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,aAAA,OACAC,gBAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,UAAA,OACAC,aAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,aAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,aAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OA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","file":"js/app.0986dae3.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CustomSelect.vue?vue&type=style&index=0&id=8fe89f8a&lang=scss&scoped=true&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CustomSelect.vue?vue&type=style&index=0&id=8fe89f8a&lang=scss&scoped=true&\"","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Dataviz.vue?vue&type=style&index=0&id=d7b70788&lang=scss&scoped=true&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Dataviz.vue?vue&type=style&index=0&id=d7b70788&lang=scss&scoped=true&\"","module.exports = __webpack_public_path__ + \"img/logo-dailybread.fc09ec71.png\";","import SpriteSymbol from \"svg-baker-runtime/browser-symbol\";\nimport sprite from \"svg-sprite-loader/runtime/browser-sprite.build\";\nvar symbol = new SpriteSymbol({\n  \"id\": \"cereals-icon\",\n  \"use\": \"cereals-icon-usage\",\n  \"viewBox\": \"0 0 80 80\",\n  \"content\": \"<symbol viewBox=\\\"0 0 80 80\\\" fill=\\\"none\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" id=\\\"cereals-icon\\\">\\n<mask id=\\\"cereals-icon_mask0\\\" mask-type=\\\"alpha\\\" maskUnits=\\\"userSpaceOnUse\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"80\\\" height=\\\"80\\\">\\n<rect width=\\\"80\\\" height=\\\"80\\\" fill=\\\"#C4C4C4\\\" />\\n</mask>\\n<g mask=\\\"url(#cereals-icon_mask0)\\\">\\n<path d=\\\"M48.263 20.1863C47.8994 17.6616 46.6666 10.184 54.9237 10.1358C55.5136 12.9689 56.9145 18.7627 48.263 20.1863Z\\\" fill=\\\"#252525\\\" stroke=\\\"#FCFCFC\\\" />\\n<path d=\\\"M49.1663 29.8403C48.5763 27.0071 46.6645 18.6038 55.3742 19.1727C56.2282 22.3658 58.1799 28.9104 49.1663 29.8403Z\\\" fill=\\\"#252525\\\" stroke=\\\"#FCFCFC\\\" />\\n<path d=\\\"M49.8714 38.6283C49.5078 36.1036 48.275 28.626 56.532 28.5777C57.1219 31.4109 58.5228 37.2047 49.8714 38.6283Z\\\" fill=\\\"#252525\\\" stroke=\\\"#FCFCFC\\\" />\\n<path d=\\\"M51.1774 47.257C50.708 44.6821 49.1644 37.0494 57.2842 37.3377C57.9898 40.2347 59.6242 46.1668 51.1774 47.257Z\\\" fill=\\\"#252525\\\" stroke=\\\"#FCFCFC\\\" />\\n<path d=\\\"M52.3278 56.6521C51.9642 54.1275 50.7314 46.6498 58.9885 46.6016C59.5784 49.4347 60.9793 55.2285 52.3278 56.6521Z\\\" fill=\\\"#252525\\\" stroke=\\\"#FCFCFC\\\" />\\n<path d=\\\"M42.8876 43.6067C43.2129 46.1366 44.0262 53.6714 51.995 51.5082C51.8052 48.6205 51.6045 42.6632 42.8876 43.6067Z\\\" fill=\\\"#252525\\\" stroke=\\\"#FCFCFC\\\" />\\n<path d=\\\"M41.1744 34.063C41.3641 36.9508 41.7708 45.5593 50.0107 42.6803C49.979 39.3751 50.1081 32.5469 41.1744 34.063Z\\\" fill=\\\"#252525\\\" stroke=\\\"#FCFCFC\\\" />\\n<path d=\\\"M39.5021 25.4069C39.8274 27.9367 40.6407 35.4716 48.6094 33.3084C48.4197 30.4207 48.219 24.4634 39.5021 25.4069Z\\\" fill=\\\"#252525\\\" stroke=\\\"#FCFCFC\\\" />\\n<path d=\\\"M38.7179 16.0392C38.9077 18.927 39.3144 27.5354 47.5542 24.6565C47.5225 21.3512 47.6516 14.5231 38.7179 16.0392Z\\\" fill=\\\"#252525\\\" stroke=\\\"#FCFCFC\\\" />\\n<path d=\\\"M37.0456 7.38303C37.3709 9.9129 38.1842 17.4478 46.153 15.2846C45.9632 12.3968 45.7625 6.43952 37.0456 7.38303Z\\\" fill=\\\"#252525\\\" stroke=\\\"#FCFCFC\\\" />\\n<path d=\\\"M52 52L53.6576 70.1335\\\" stroke=\\\"#252525\\\" stroke-width=\\\"2\\\" />\\n<path d=\\\"M69.8063 20.9343C70.4478 18.4656 72.204 11.0932 79.8367 14.2433C79.2846 17.0841 78.3349 22.9687 69.8063 20.9343Z\\\" fill=\\\"#252525\\\" stroke=\\\"#FCFCFC\\\" />\\n<path d=\\\"M66.9042 30.186C67.4563 27.3451 68.9445 18.8565 76.7559 22.7508C76.308 26.0257 75.5757 32.8157 66.9042 30.186Z\\\" fill=\\\"#252525\\\" stroke=\\\"#FCFCFC\\\" />\\n<path d=\\\"M64.1545 38.5625C64.796 36.0937 66.5522 28.7214 74.1849 31.8715C73.6327 34.7123 72.683 40.5968 64.1545 38.5625Z\\\" fill=\\\"#252525\\\" stroke=\\\"#FCFCFC\\\" />\\n<path d=\\\"M62.0205 47.0244C62.5838 44.4684 64.1135 36.8329 71.4894 40.2402C71.0193 43.1846 70.2313 49.287 62.0205 47.0244Z\\\" fill=\\\"#252525\\\" stroke=\\\"#FCFCFC\\\" />\\n<path d=\\\"M59.4466 56.133C60.088 53.6643 61.8443 46.292 69.477 49.4421C68.9248 52.2829 67.9751 58.1674 59.4466 56.133Z\\\" fill=\\\"#252525\\\" stroke=\\\"#FCFCFC\\\" />\\n<path d=\\\"M55.7885 40.4512C55.1096 42.9099 52.9444 50.1726 61.1296 51.2609C62.0718 48.5247 64.1916 42.9536 55.7885 40.4512Z\\\" fill=\\\"#252525\\\" stroke=\\\"#FCFCFC\\\" />\\n<path d=\\\"M57.9009 30.9879C56.9587 33.7242 54.0032 41.8196 62.7152 42.3528C63.9647 39.2927 66.7255 33.0462 57.9009 30.9879Z\\\" fill=\\\"#252525\\\" stroke=\\\"#FCFCFC\\\" />\\n<path d=\\\"M59.7079 22.3588C59.029 24.8175 56.8638 32.0802 65.049 33.1685C65.9912 30.4323 68.111 24.8612 59.7079 22.3588Z\\\" fill=\\\"#252525\\\" stroke=\\\"#FCFCFC\\\" />\\n<path d=\\\"M62.6091 13.4173C61.6668 16.1536 58.7113 24.249 67.4233 24.7821C68.6729 21.722 71.4337 15.4756 62.6091 13.4173Z\\\" fill=\\\"#252525\\\" stroke=\\\"#FCFCFC\\\" />\\n<path d=\\\"M64.4159 4.78813C63.7371 7.24685 61.5719 14.5096 69.757 15.5979C70.6993 12.8616 72.819 7.29056 64.4159 4.78813Z\\\" fill=\\\"#252525\\\" stroke=\\\"#FCFCFC\\\" />\\n<path d=\\\"M60 53L55.4568 69.0791\\\" stroke=\\\"#252525\\\" stroke-width=\\\"2\\\" />\\n<path d=\\\"M0 70.6436L64.1331 70.6436\\\" stroke=\\\"#252525\\\" stroke-width=\\\"3\\\" />\\n<path d=\\\"M2.10272 68.5409C11.7572 44.4984 37.0487 11.5835 60.979 68.5409L2.10272 68.5409Z\\\" fill=\\\"#FCFCFC\\\" stroke=\\\"#252525\\\" stroke-width=\\\"2\\\" />\\n<path d=\\\"M24.6204 55.2177H27.2241V58.0334H24.6204V55.2177Z\\\" fill=\\\"#252525\\\" />\\n<path d=\\\"M14.2054 58.0334H16.8091V60.8492H14.2054V58.0334Z\\\" fill=\\\"#252525\\\" />\\n<path d=\\\"M31.443 45.0242H34.0467V47.8399H31.443V45.0242Z\\\" fill=\\\"#252525\\\" />\\n<path d=\\\"M35.8924 56.786H38.4961V59.6017H35.8924V56.786Z\\\" fill=\\\"#252525\\\" />\\n<path d=\\\"M46.3074 61.0096H48.9111V63.8253H46.3074V61.0096Z\\\" fill=\\\"#252525\\\" />\\n</g>\\n</symbol>\"\n});\nvar result = sprite.add(symbol);\nexport default symbol","import SpriteSymbol from \"svg-baker-runtime/browser-symbol\";\nimport sprite from \"svg-sprite-loader/runtime/browser-sprite.build\";\nvar symbol = new SpriteSymbol({\n  \"id\": \"line-icon\",\n  \"use\": \"line-icon-usage\",\n  \"viewBox\": \"0 0 37 36\",\n  \"content\": \"<symbol viewBox=\\\"0 0 37 36\\\" fill=\\\"none\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" id=\\\"line-icon\\\">\\n<path d=\\\"M5 30H35\\\" stroke=\\\"black\\\" stroke-width=\\\"2\\\" />\\n<path d=\\\"M5.74249 31L5.74249 1\\\" stroke=\\\"black\\\" stroke-width=\\\"2\\\" />\\n<path d=\\\"M1 5L5.96241 1L11 5\\\" stroke=\\\"black\\\" stroke-width=\\\"2\\\" stroke-linejoin=\\\"round\\\" />\\n<path d=\\\"M31.9997 25L35.9997 29.9624L31.9997 35\\\" stroke=\\\"black\\\" stroke-width=\\\"2\\\" stroke-linejoin=\\\"round\\\" />\\n<path d=\\\"M29.4998 29.5C27.4998 18.0001 18.9998 5 5.99982 13.0002V29.5001L29.4998 29.5Z\\\" fill=\\\"#FCFCFC\\\" stroke=\\\"black\\\" stroke-width=\\\"2\\\" />\\n</symbol>\"\n});\nvar result = sprite.add(symbol);\nexport default symbol","import SpriteSymbol from \"svg-baker-runtime/browser-symbol\";\nimport sprite from \"svg-sprite-loader/runtime/browser-sprite.build\";\nvar symbol = new SpriteSymbol({\n  \"id\": \"fruit-icon\",\n  \"use\": \"fruit-icon-usage\",\n  \"viewBox\": \"0 0 80 80\",\n  \"content\": \"<symbol viewBox=\\\"0 0 80 80\\\" fill=\\\"none\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" id=\\\"fruit-icon\\\">\\n<mask id=\\\"fruit-icon_mask0\\\" mask-type=\\\"alpha\\\" maskUnits=\\\"userSpaceOnUse\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"80\\\" height=\\\"80\\\">\\n<rect width=\\\"80\\\" height=\\\"80\\\" fill=\\\"#C4C4C4\\\" />\\n</mask>\\n<g mask=\\\"url(#fruit-icon_mask0)\\\">\\n<path d=\\\"M38.1417 58.3852C46.168 61.3098 52.431 59.6038 54.5593 58.3852C82.2868 66.4278 79.1856 29.8703 67.3284 22.7418C62.768 20 60.9438 20 60.0317 20C52.735 20 51.823 21.8278 50.9109 22.7418C45.8032 19.8172 42.094 20 39.9658 20.9139C20.8119 27.3115 28.1087 54.7295 38.1417 58.3852Z\\\" fill=\\\"#252525\\\" stroke=\\\"#252525\\\" stroke-width=\\\"2\\\" />\\n<path d=\\\"M50.3838 12.2678C49.5139 13.0464 50.3838 19.0803 50.9274 22L52.0148 13.241C51.8335 12.5922 51.2536 11.4892 50.3838 12.2678Z\\\" fill=\\\"#252525\\\" stroke=\\\"#252525\\\" />\\n<mask id=\\\"fruit-icon_path-4-inside-1\\\" fill=\\\"white\\\">\\n<path d=\\\"M52.8119 60.8119C53.593 61.593 53.597 62.8647 52.7676 63.5941C50.1971 65.8547 47.2688 67.6802 44.0979 68.9936C40.3102 70.5626 36.2505 71.3701 32.1508 71.3701C28.051 71.3701 23.9913 70.5626 20.2036 68.9936C16.4159 67.4247 12.9744 65.1251 10.0754 62.2261C7.17639 59.3272 4.8768 55.8856 3.30788 52.0979C1.73896 48.3102 0.931452 44.2505 0.931452 40.1508C0.931453 36.051 1.73896 31.9914 3.30788 28.2037C4.62131 25.0327 6.44683 22.1044 8.7074 19.5339C9.43684 18.7045 10.7085 18.7085 11.4896 19.4896L32.1508 40.1508L52.8119 60.8119Z\\\" />\\n</mask>\\n<path d=\\\"M52.8119 60.8119C53.593 61.593 53.597 62.8647 52.7676 63.5941C50.1971 65.8547 47.2688 67.6802 44.0979 68.9936C40.3102 70.5626 36.2505 71.3701 32.1508 71.3701C28.051 71.3701 23.9913 70.5626 20.2036 68.9936C16.4159 67.4247 12.9744 65.1251 10.0754 62.2261C7.17639 59.3272 4.8768 55.8856 3.30788 52.0979C1.73896 48.3102 0.931452 44.2505 0.931452 40.1508C0.931453 36.051 1.73896 31.9914 3.30788 28.2037C4.62131 25.0327 6.44683 22.1044 8.7074 19.5339C9.43684 18.7045 10.7085 18.7085 11.4896 19.4896L32.1508 40.1508L52.8119 60.8119Z\\\" fill=\\\"#FCFCFC\\\" stroke=\\\"#252525\\\" stroke-width=\\\"4\\\" mask=\\\"url(#fruit-icon_path-4-inside-1)\\\" />\\n<path d=\\\"M31.0148 40.7885L3.01477 39M31.0148 40.7885L7.8681 59.9706M31.0148 40.7885V70\\\" stroke=\\\"#252525\\\" stroke-width=\\\"2\\\" />\\n</g>\\n</symbol>\"\n});\nvar result = sprite.add(symbol);\nexport default symbol","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=style&index=0&id=6f12594a&lang=scss&scoped=true&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=style&index=0&id=6f12594a&lang=scss&scoped=true&\"","var map = {\n\t\"./af\": \"2bfb\",\n\t\"./af.js\": \"2bfb\",\n\t\"./ar\": \"8e73\",\n\t\"./ar-dz\": \"a356\",\n\t\"./ar-dz.js\": \"a356\",\n\t\"./ar-kw\": \"423e\",\n\t\"./ar-kw.js\": \"423e\",\n\t\"./ar-ly\": \"1cfd\",\n\t\"./ar-ly.js\": \"1cfd\",\n\t\"./ar-ma\": \"0a84\",\n\t\"./ar-ma.js\": \"0a84\",\n\t\"./ar-sa\": \"8230\",\n\t\"./ar-sa.js\": \"8230\",\n\t\"./ar-tn\": \"6d83\",\n\t\"./ar-tn.js\": \"6d83\",\n\t\"./ar.js\": \"8e73\",\n\t\"./az\": \"485c\",\n\t\"./az.js\": \"485c\",\n\t\"./be\": \"1fc1\",\n\t\"./be.js\": \"1fc1\",\n\t\"./bg\": \"84aa\",\n\t\"./bg.js\": \"84aa\",\n\t\"./bm\": \"a7fa\",\n\t\"./bm.js\": \"a7fa\",\n\t\"./bn\": \"9043\",\n\t\"./bn.js\": \"9043\",\n\t\"./bo\": \"d26a\",\n\t\"./bo.js\": \"d26a\",\n\t\"./br\": \"6887\",\n\t\"./br.js\": \"6887\",\n\t\"./bs\": \"2554\",\n\t\"./bs.js\": \"2554\",\n\t\"./ca\": \"d716\",\n\t\"./ca.js\": \"d716\",\n\t\"./cs\": \"3c0d\",\n\t\"./cs.js\": \"3c0d\",\n\t\"./cv\": \"03ec\",\n\t\"./cv.js\": \"03ec\",\n\t\"./cy\": \"9797\",\n\t\"./cy.js\": \"9797\",\n\t\"./da\": \"0f14\",\n\t\"./da.js\": \"0f14\",\n\t\"./de\": \"b469\",\n\t\"./de-at\": \"b3eb\",\n\t\"./de-at.js\": \"b3eb\",\n\t\"./de-ch\": \"bb71\",\n\t\"./de-ch.js\": \"bb71\",\n\t\"./de.js\": \"b469\",\n\t\"./dv\": \"598a\",\n\t\"./dv.js\": \"598a\",\n\t\"./el\": \"8d47\",\n\t\"./el.js\": \"8d47\",\n\t\"./en-SG\": \"cdab\",\n\t\"./en-SG.js\": \"cdab\",\n\t\"./en-au\": \"0e6b\",\n\t\"./en-au.js\": \"0e6b\",\n\t\"./en-ca\": \"3886\",\n\t\"./en-ca.js\": \"3886\",\n\t\"./en-gb\": \"39a6\",\n\t\"./en-gb.js\": \"39a6\",\n\t\"./en-ie\": \"e1d3\",\n\t\"./en-ie.js\": \"e1d3\",\n\t\"./en-il\": \"7333\",\n\t\"./en-il.js\": \"7333\",\n\t\"./en-nz\": \"6f50\",\n\t\"./en-nz.js\": \"6f50\",\n\t\"./eo\": \"65db\",\n\t\"./eo.js\": \"65db\",\n\t\"./es\": \"898b\",\n\t\"./es-do\": \"0a3c\",\n\t\"./es-do.js\": \"0a3c\",\n\t\"./es-us\": \"55c9\",\n\t\"./es-us.js\": \"55c9\",\n\t\"./es.js\": \"898b\",\n\t\"./et\": \"ec18\",\n\t\"./et.js\": \"ec18\",\n\t\"./eu\": \"0ff2\",\n\t\"./eu.js\": \"0ff2\",\n\t\"./fa\": \"8df4\",\n\t\"./fa.js\": \"8df4\",\n\t\"./fi\": \"81e9\",\n\t\"./fi.js\": \"81e9\",\n\t\"./fo\": \"0721\",\n\t\"./fo.js\": \"0721\",\n\t\"./fr\": \"9f26\",\n\t\"./fr-ca\": \"d9f8\",\n\t\"./fr-ca.js\": \"d9f8\",\n\t\"./fr-ch\": \"0e49\",\n\t\"./fr-ch.js\": \"0e49\",\n\t\"./fr.js\": \"9f26\",\n\t\"./fy\": \"7118\",\n\t\"./fy.js\": \"7118\",\n\t\"./ga\": \"5120\",\n\t\"./ga.js\": \"5120\",\n\t\"./gd\": \"f6b4\",\n\t\"./gd.js\": \"f6b4\",\n\t\"./gl\": \"8840\",\n\t\"./gl.js\": \"8840\",\n\t\"./gom-latn\": \"0caa\",\n\t\"./gom-latn.js\": \"0caa\",\n\t\"./gu\": \"e0c5\",\n\t\"./gu.js\": \"e0c5\",\n\t\"./he\": \"c7aa\",\n\t\"./he.js\": \"c7aa\",\n\t\"./hi\": \"dc4d\",\n\t\"./hi.js\": \"dc4d\",\n\t\"./hr\": \"4ba9\",\n\t\"./hr.js\": \"4ba9\",\n\t\"./hu\": \"5b14\",\n\t\"./hu.js\": \"5b14\",\n\t\"./hy-am\": \"d6b6\",\n\t\"./hy-am.js\": \"d6b6\",\n\t\"./id\": \"5038\",\n\t\"./id.js\": \"5038\",\n\t\"./is\": \"0558\",\n\t\"./is.js\": \"0558\",\n\t\"./it\": \"6e98\",\n\t\"./it-ch\": \"6f12\",\n\t\"./it-ch.js\": \"6f12\",\n\t\"./it.js\": \"6e98\",\n\t\"./ja\": \"079e\",\n\t\"./ja.js\": \"079e\",\n\t\"./jv\": \"b540\",\n\t\"./jv.js\": \"b540\",\n\t\"./ka\": \"201b\",\n\t\"./ka.js\": \"201b\",\n\t\"./kk\": \"6d79\",\n\t\"./kk.js\": \"6d79\",\n\t\"./km\": \"e81d\",\n\t\"./km.js\": \"e81d\",\n\t\"./kn\": \"3e92\",\n\t\"./kn.js\": \"3e92\",\n\t\"./ko\": \"22f8\",\n\t\"./ko.js\": \"22f8\",\n\t\"./ku\": \"2421\",\n\t\"./ku.js\": \"2421\",\n\t\"./ky\": \"9609\",\n\t\"./ky.js\": \"9609\",\n\t\"./lb\": \"440c\",\n\t\"./lb.js\": \"440c\",\n\t\"./lo\": \"b29d\",\n\t\"./lo.js\": \"b29d\",\n\t\"./lt\": \"26f9\",\n\t\"./lt.js\": \"26f9\",\n\t\"./lv\": \"b97c\",\n\t\"./lv.js\": \"b97c\",\n\t\"./me\": \"293c\",\n\t\"./me.js\": \"293c\",\n\t\"./mi\": \"688b\",\n\t\"./mi.js\": \"688b\",\n\t\"./mk\": \"6909\",\n\t\"./mk.js\": \"6909\",\n\t\"./ml\": \"02fb\",\n\t\"./ml.js\": \"02fb\",\n\t\"./mn\": \"958b\",\n\t\"./mn.js\": \"958b\",\n\t\"./mr\": \"39bd\",\n\t\"./mr.js\": \"39bd\",\n\t\"./ms\": \"ebe4\",\n\t\"./ms-my\": \"6403\",\n\t\"./ms-my.js\": \"6403\",\n\t\"./ms.js\": \"ebe4\",\n\t\"./mt\": \"1b45\",\n\t\"./mt.js\": \"1b45\",\n\t\"./my\": \"8689\",\n\t\"./my.js\": \"8689\",\n\t\"./nb\": \"6ce3\",\n\t\"./nb.js\": \"6ce3\",\n\t\"./ne\": \"3a39\",\n\t\"./ne.js\": \"3a39\",\n\t\"./nl\": \"facd\",\n\t\"./nl-be\": \"db29\",\n\t\"./nl-be.js\": \"db29\",\n\t\"./nl.js\": \"facd\",\n\t\"./nn\": \"b84c\",\n\t\"./nn.js\": \"b84c\",\n\t\"./pa-in\": \"f3ff\",\n\t\"./pa-in.js\": \"f3ff\",\n\t\"./pl\": \"8d57\",\n\t\"./pl.js\": \"8d57\",\n\t\"./pt\": \"f260\",\n\t\"./pt-br\": \"d2d4\",\n\t\"./pt-br.js\": \"d2d4\",\n\t\"./pt.js\": \"f260\",\n\t\"./ro\": \"972c\",\n\t\"./ro.js\": \"972c\",\n\t\"./ru\": \"957c\",\n\t\"./ru.js\": \"957c\",\n\t\"./sd\": \"6784\",\n\t\"./sd.js\": \"6784\",\n\t\"./se\": \"ffff\",\n\t\"./se.js\": \"ffff\",\n\t\"./si\": \"eda5\",\n\t\"./si.js\": \"eda5\",\n\t\"./sk\": \"7be6\",\n\t\"./sk.js\": \"7be6\",\n\t\"./sl\": \"8155\",\n\t\"./sl.js\": \"8155\",\n\t\"./sq\": \"c8f3\",\n\t\"./sq.js\": \"c8f3\",\n\t\"./sr\": \"cf1e\",\n\t\"./sr-cyrl\": \"13e9\",\n\t\"./sr-cyrl.js\": \"13e9\",\n\t\"./sr.js\": \"cf1e\",\n\t\"./ss\": \"52bd\",\n\t\"./ss.js\": \"52bd\",\n\t\"./sv\": \"5fbd\",\n\t\"./sv.js\": \"5fbd\",\n\t\"./sw\": \"74dc\",\n\t\"./sw.js\": \"74dc\",\n\t\"./ta\": \"3de5\",\n\t\"./ta.js\": \"3de5\",\n\t\"./te\": \"5cbb\",\n\t\"./te.js\": \"5cbb\",\n\t\"./tet\": \"576c\",\n\t\"./tet.js\": \"576c\",\n\t\"./tg\": \"3b1b\",\n\t\"./tg.js\": \"3b1b\",\n\t\"./th\": \"10e8\",\n\t\"./th.js\": \"10e8\",\n\t\"./tl-ph\": \"0f38\",\n\t\"./tl-ph.js\": \"0f38\",\n\t\"./tlh\": \"cf75\",\n\t\"./tlh.js\": \"cf75\",\n\t\"./tr\": \"0e81\",\n\t\"./tr.js\": \"0e81\",\n\t\"./tzl\": \"cf51\",\n\t\"./tzl.js\": \"cf51\",\n\t\"./tzm\": \"c109\",\n\t\"./tzm-latn\": \"b53d\",\n\t\"./tzm-latn.js\": \"b53d\",\n\t\"./tzm.js\": \"c109\",\n\t\"./ug-cn\": \"6117\",\n\t\"./ug-cn.js\": \"6117\",\n\t\"./uk\": \"ada2\",\n\t\"./uk.js\": \"ada2\",\n\t\"./ur\": \"5294\",\n\t\"./ur.js\": \"5294\",\n\t\"./uz\": \"2e8c\",\n\t\"./uz-latn\": \"010e\",\n\t\"./uz-latn.js\": \"010e\",\n\t\"./uz.js\": \"2e8c\",\n\t\"./vi\": \"2921\",\n\t\"./vi.js\": \"2921\",\n\t\"./x-pseudo\": \"fd7e\",\n\t\"./x-pseudo.js\": \"fd7e\",\n\t\"./yo\": \"7f33\",\n\t\"./yo.js\": \"7f33\",\n\t\"./zh-cn\": \"5c3a\",\n\t\"./zh-cn.js\": \"5c3a\",\n\t\"./zh-hk\": \"49ab\",\n\t\"./zh-hk.js\": \"49ab\",\n\t\"./zh-tw\": \"90ea\",\n\t\"./zh-tw.js\": \"90ea\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"4678\";","import SpriteSymbol from \"svg-baker-runtime/browser-symbol\";\nimport sprite from \"svg-sprite-loader/runtime/browser-sprite.build\";\nvar symbol = new SpriteSymbol({\n  \"id\": \"close-icon\",\n  \"use\": \"close-icon-usage\",\n  \"viewBox\": \"0 0 31 31\",\n  \"content\": \"<symbol viewBox=\\\"0 0 31 31\\\" fill=\\\"none\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" id=\\\"close-icon\\\">\\n<mask id=\\\"close-icon_path-1-outside-1\\\" maskUnits=\\\"userSpaceOnUse\\\" x=\\\"0.264801\\\" y=\\\"0.264893\\\" width=\\\"31\\\" height=\\\"31\\\" fill=\\\"black\\\">\\n<rect fill=\\\"white\\\" x=\\\"0.264801\\\" y=\\\"0.264893\\\" width=\\\"31\\\" height=\\\"31\\\" />\\n<path fill-rule=\\\"evenodd\\\" clip-rule=\\\"evenodd\\\" d=\\\"M27.9683 5.56691L25.6663 3.26489L15.6165 13.3146L5.59853 3.29666L3.29651 5.59867L13.3145 15.6167L3.2648 25.6663L5.56682 27.9684L15.6165 17.9187L25.698 28.0001L28 25.6981L17.9185 15.6167L27.9683 5.56691Z\\\" />\\n</mask>\\n<path fill-rule=\\\"evenodd\\\" clip-rule=\\\"evenodd\\\" d=\\\"M27.9683 5.56691L25.6663 3.26489L15.6165 13.3146L5.59853 3.29666L3.29651 5.59867L13.3145 15.6167L3.2648 25.6663L5.56682 27.9684L15.6165 17.9187L25.698 28.0001L28 25.6981L17.9185 15.6167L27.9683 5.56691Z\\\" fill=\\\"#F2F2F2\\\" />\\n<path d=\\\"M25.6663 3.26489L27.0805 1.85068L25.6663 0.436466L24.252 1.85068L25.6663 3.26489ZM27.9683 5.56691L29.3825 6.98112L30.7967 5.56691L29.3825 4.1527L27.9683 5.56691ZM15.6165 13.3146L14.2023 14.7288L15.6165 16.1431L17.0307 14.7288L15.6165 13.3146ZM5.59853 3.29666L7.01274 1.88244L5.59853 0.46823L4.18432 1.88244L5.59853 3.29666ZM3.29651 5.59867L1.8823 4.18446L0.468086 5.59867L1.8823 7.01289L3.29651 5.59867ZM13.3145 15.6167L14.7287 17.0309L16.1429 15.6167L14.7287 14.2024L13.3145 15.6167ZM3.2648 25.6663L1.85059 24.2521L0.436373 25.6663L1.85059 27.0806L3.2648 25.6663ZM5.56682 27.9684L4.15261 29.3826L5.56682 30.7968L6.98103 29.3826L5.56682 27.9684ZM15.6165 17.9187L17.0307 16.5045L15.6165 15.0902L14.2023 16.5045L15.6165 17.9187ZM25.698 28.0001L24.2838 29.4143L25.698 30.8286L27.1122 29.4143L25.698 28.0001ZM28 25.6981L29.4142 27.1123L30.8284 25.6981L29.4142 24.2839L28 25.6981ZM17.9185 15.6167L16.5043 14.2024L15.0901 15.6167L16.5043 17.0309L17.9185 15.6167ZM24.252 4.67911L26.5541 6.98112L29.3825 4.1527L27.0805 1.85068L24.252 4.67911ZM17.0307 14.7288L27.0805 4.67911L24.252 1.85068L14.2023 11.9004L17.0307 14.7288ZM4.18432 4.71087L14.2023 14.7288L17.0307 11.9004L7.01274 1.88244L4.18432 4.71087ZM4.71073 7.01289L7.01274 4.71087L4.18432 1.88244L1.8823 4.18446L4.71073 7.01289ZM14.7287 14.2024L4.71073 4.18446L1.8823 7.01289L11.9003 17.0309L14.7287 14.2024ZM4.67901 27.0806L14.7287 17.0309L11.9003 14.2024L1.85059 24.2521L4.67901 27.0806ZM6.98103 26.5541L4.67901 24.2521L1.85059 27.0806L4.15261 29.3826L6.98103 26.5541ZM14.2023 16.5045L4.15261 26.5541L6.98103 29.3826L17.0307 19.3329L14.2023 16.5045ZM27.1122 26.5859L17.0307 16.5045L14.2023 19.3329L24.2838 29.4143L27.1122 26.5859ZM26.5858 24.2839L24.2838 26.5859L27.1122 29.4143L29.4142 27.1123L26.5858 24.2839ZM16.5043 17.0309L26.5858 27.1123L29.4142 24.2839L19.3327 14.2024L16.5043 17.0309ZM26.5541 4.1527L16.5043 14.2024L19.3327 17.0309L29.3825 6.98112L26.5541 4.1527Z\\\" fill=\\\"#333333\\\" mask=\\\"url(#close-icon_path-1-outside-1)\\\" />\\n</symbol>\"\n});\nvar result = sprite.add(symbol);\nexport default symbol","import SpriteSymbol from \"svg-baker-runtime/browser-symbol\";\nimport sprite from \"svg-sprite-loader/runtime/browser-sprite.build\";\nvar symbol = new SpriteSymbol({\n  \"id\": \"start-button\",\n  \"use\": \"start-button-usage\",\n  \"viewBox\": \"0 0 129 38\",\n  \"content\": \"<symbol viewBox=\\\"0 0 129 38\\\" fill=\\\"none\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" id=\\\"start-button\\\">\\n<g filter=\\\"url(#start-button_filter0_d)\\\">\\n<path d=\\\"M17.1753 5.91516L8.90799 19.9152C4.97145 26.5814 9.77699 35 17.5187 35H103.214C106.752 35 110.026 33.131 111.825 30.0848L120.092 16.0848C124.029 9.41865 119.223 1 111.481 1H25.786C22.2485 1 18.9741 2.86905 17.1753 5.91516Z\\\" fill=\\\"#FCFCFC\\\" />\\n<path d=\\\"M17.1753 5.91516L8.90799 19.9152C4.97145 26.5814 9.77699 35 17.5187 35H103.214C106.752 35 110.026 33.131 111.825 30.0848L120.092 16.0848C124.029 9.41865 119.223 1 111.481 1H25.786C22.2485 1 18.9741 2.86905 17.1753 5.91516Z\\\" stroke=\\\"#333333\\\" stroke-width=\\\"2\\\" />\\n</g>\\n<circle cx=\\\"90.912\\\" cy=\\\"18.912\\\" r=\\\"4.82713\\\" transform=\\\"rotate(15 90.912 18.912)\\\" fill=\\\"#6FE35C\\\" />\\n<path d=\\\"M32.2383 21.8848C32.1114 22.6953 32.502 23.4375 32.5801 23.5645L32.5899 23.584C32.7461 23.9062 32.9805 24.082 33.0977 24.1895C33.4004 24.4922 33.6641 24.6582 33.7129 24.6875L33.7715 24.7168C34.377 25.0195 34.9922 25.1953 35.6563 25.1953C36.3106 25.1953 36.9258 25.0391 37.502 24.7363C37.8047 24.5801 38.8301 23.9941 39.1426 23.0859C39.1817 22.959 39.2793 22.7148 39.3282 22.4121C39.3867 22.0898 39.377 21.7871 39.3477 21.5918V21.5527L39.2891 21.2891C39.2989 21.3574 39.2696 21.25 39.2696 21.2598L39.2598 21.2207C39.1719 20.8691 39.0059 20.5078 38.791 20.2051C38.5762 19.9023 38.0196 19.3555 37.6387 19.2285L37.6192 19.2188C37.6094 19.2188 36.8282 18.9551 36.1055 18.7402L35.6367 18.6035C35.4121 18.5352 35.1289 18.457 35.041 18.418C35.0508 18.4277 35.0606 18.4375 35.0606 18.4375L34.9336 18.3691L34.9629 18.3887C34.9727 18.3984 34.9727 18.3984 34.9825 18.3984C34.9532 18.3691 34.8164 18.291 34.7676 18.0664C34.6602 17.627 34.8164 17.2949 34.8457 17.2168C34.9141 17.1387 34.9141 17.1191 34.9532 17.0898C35.0117 17.0117 35.0899 16.9727 35.1387 16.9434C35.5977 16.7188 36.0957 16.7188 36.5547 16.9434C36.584 16.9531 36.7012 17.0605 36.7696 17.1777L37.0137 17.0508L38.6543 16.1426C38.293 15.4688 37.6973 15.1074 37.5899 15.0586L37.5606 15.0488C37.0332 14.7656 36.4571 14.6191 35.8418 14.6191C35.2266 14.6191 34.6602 14.7852 34.0938 15.0684L34.0352 15.0977C33.9864 15.127 33.7129 15.293 33.4688 15.5273C33.2832 15.6934 33.1856 15.8301 33.0293 16.0645L33.0098 16.0938C32.9512 16.1816 32.6387 16.7578 32.5801 17.6074C32.5703 17.666 32.5703 17.7246 32.5703 17.7832C32.5703 18.0176 32.6094 18.2715 32.668 18.5352C32.9414 19.6777 33.7617 20.1855 34.0352 20.3223C34.3086 20.459 34.6211 20.5566 35.0606 20.6738C35.2071 20.7129 35.3438 20.752 35.4903 20.8008C36.0078 20.957 36.545 21.1328 36.7891 21.2109C36.877 21.2793 36.9942 21.3965 37.043 21.4453C37.0723 21.4844 37.1016 21.5918 37.209 21.8555C37.209 21.9336 37.2188 22.0312 37.209 22.0801C37.1992 22.1582 37.1602 22.2461 37.1504 22.2754L37.1114 22.373C37.0332 22.4805 36.75 22.7148 36.5157 22.832C35.9688 23.1152 35.3731 23.1055 34.8262 22.8418C34.7871 22.8125 34.6992 22.7539 34.5918 22.6465C34.543 22.5977 34.4746 22.5391 34.4356 22.4707C34.4063 22.4219 34.3575 22.2852 34.3575 22.2168L32.2383 21.8848ZM43.0293 17.0703V21.5039C43.0293 22.373 43.4492 23.1445 43.5762 23.3496C43.8399 23.7695 44.3965 24.2578 44.875 24.5215L45.0313 24.6094C45.4512 24.8438 45.92 24.9023 46.3985 24.9023H47.5313V22.7539H46.3985C46.2617 22.7539 46.125 22.7246 45.9785 22.6758C45.7539 22.5195 45.5098 22.3242 45.4024 22.2168C45.295 22.0117 45.1778 21.7285 45.1778 21.5039V17.0703H48.5957V14.9219H45.1778V8.91602H43.0293V14.9219H41.3692V17.0703H43.0293ZM52.209 19.8926C52.209 19.502 52.502 18.7207 52.5801 18.4473C52.5899 18.4375 52.5899 18.4277 52.5899 18.4082C52.9024 18.0273 53.6153 17.4121 54.1035 17.0215C54.4746 16.8652 54.8653 16.7871 55.2657 16.7871C55.666 16.7871 56.0567 16.8652 56.4278 17.0215C57.0235 17.4219 57.6485 17.9199 57.7657 18.1055C58.0391 18.5254 58.3125 19.1797 58.3125 19.7266V20.0586C58.3125 20.6055 58.0196 21.2598 57.7657 21.6699C57.6387 21.875 57.0235 22.3633 56.4278 22.7637C56.0567 22.9199 55.666 22.998 55.2657 22.998C54.8653 22.998 54.4746 22.9199 54.1035 22.7637C53.6153 22.373 52.9024 21.7578 52.5899 21.377C52.5899 21.3574 52.5899 21.3477 52.5801 21.3379C52.502 21.0645 52.209 20.2832 52.209 19.8926ZM50.0508 19.9023C50.0508 20.5664 50.3242 21.3477 50.5586 22.0605C50.5684 22.1094 50.5879 22.1484 50.5977 22.1777C50.5977 22.168 50.5782 22.1289 50.5684 22.0801L50.7442 22.4902C51.291 23.3008 52.6094 24.375 52.8828 24.541L53.0977 24.668C53.7715 24.9902 54.4942 25.1465 55.2657 25.1465C56.0078 25.1465 56.7207 25.0391 57.3848 24.6875L57.5313 24.6094C57.7266 24.502 58.0098 24.2871 58.3125 24.0625V24.834H60.461V20.1465C60.461 20.0684 60.4707 19.9805 60.4707 19.9023V19.8926V19.8828C60.4707 19.8047 60.461 19.7168 60.461 19.6387V14.9219H58.3125V15.7227C58.0098 15.498 57.7266 15.2832 57.5313 15.1758L57.3848 15.0977C56.7207 14.7461 56.0078 14.6387 55.2657 14.6387C54.4942 14.6387 53.7715 14.7949 53.0977 15.1172L52.8828 15.2441C52.6289 15.4492 51.3008 16.4746 50.7442 17.2949L50.5684 17.7051C50.5782 17.6562 50.5977 17.6172 50.5977 17.6074C50.5879 17.6367 50.5684 17.6758 50.5586 17.7246C50.3242 18.4375 50.0508 19.2188 50.0508 19.8828V19.9023ZM63.1172 19.9023V24.8633H65.2657V19.7266C65.2657 19.1797 65.5586 18.5254 65.8125 18.1152C65.92 17.9395 66.5938 17.3828 67.1797 17.002C67.2871 16.9531 67.3555 16.8945 67.4336 16.8457L67.4727 16.875C67.5703 16.9531 67.668 16.9824 67.7754 17.0508C68.0196 17.2559 68.3516 17.5391 68.586 17.7734L70.5098 16.6992C70.0703 16.123 69.2012 15.4102 69.0157 15.293L68.8106 15.166C68.7813 15.1562 68.6934 15.0977 68.625 15.0586C68.3223 14.873 67.9219 14.6094 67.4043 14.6094C66.8575 14.6094 66.4668 14.8828 66.2617 15.0391L66.1739 15.1074L66.1934 15.0977L66.0469 15.1758C65.8516 15.2832 65.5684 15.498 65.2657 15.7227V14.9316H63.1172V19.6387C63.1172 19.7266 63.1075 19.8145 63.1075 19.9023H63.1172ZM73.459 17.0703V21.5039C73.459 22.373 73.8789 23.1445 74.0059 23.3496C74.2696 23.7695 74.8262 24.2578 75.3047 24.5215L75.461 24.6094C75.8809 24.8438 76.3496 24.9023 76.8282 24.9023H77.961V22.7539H76.8282C76.6914 22.7539 76.5547 22.7246 76.4082 22.6758C76.1836 22.5195 75.9395 22.3242 75.8321 22.2168C75.7246 22.0117 75.6075 21.7285 75.6075 21.5039V17.0703H79.0254V14.9219H75.6075V8.91602H73.459V14.9219H71.7989V17.0703H73.459Z\\\" fill=\\\"black\\\" />\\n<defs>\\n<filter id=\\\"start-button_filter0_d\\\" x=\\\"6.50195\\\" y=\\\"0\\\" width=\\\"117.996\\\" height=\\\"38\\\" filterUnits=\\\"userSpaceOnUse\\\" color-interpolation-filters=\\\"sRGB\\\">\\n<feFlood flood-opacity=\\\"0\\\" result=\\\"BackgroundImageFix\\\"></feFlood>\\n<feColorMatrix in=\\\"SourceAlpha\\\" type=\\\"matrix\\\" values=\\\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\\\"></feColorMatrix>\\n<feOffset dx=\\\"2\\\" dy=\\\"2\\\"></feOffset>\\n<feColorMatrix type=\\\"matrix\\\" values=\\\"0 0 0 0 0.2 0 0 0 0 0.2 0 0 0 0 0.2 0 0 0 1 0\\\"></feColorMatrix>\\n<feBlend mode=\\\"normal\\\" in2=\\\"BackgroundImageFix\\\" result=\\\"effect1_dropShadow\\\"></feBlend>\\n<feBlend mode=\\\"normal\\\" in=\\\"SourceGraphic\\\" in2=\\\"effect1_dropShadow\\\" result=\\\"shape\\\"></feBlend>\\n</filter>\\n</defs>\\n</symbol>\"\n});\nvar result = sprite.add(symbol);\nexport default symbol","import SpriteSymbol from \"svg-baker-runtime/browser-symbol\";\nimport sprite from \"svg-sprite-loader/runtime/browser-sprite.build\";\nvar symbol = new SpriteSymbol({\n  \"id\": \"chartview-shape-background\",\n  \"use\": \"chartview-shape-background-usage\",\n  \"viewBox\": \"0 0 1442 704\",\n  \"content\": \"<symbol viewBox=\\\"0 0 1442 704\\\" fill=\\\"none\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" id=\\\"chartview-shape-background\\\">\\n<path d=\\\"M0 163.128V602.128C67.3333 645.628 242.8 725.728 406 698.128C610 663.628 914 636.628 1086.5 661.628C1224.5 681.628 1381 669.962 1442 661.628V204.128C1332.5 150.128 1021.4 34.6284 653 4.62842C284.6 -25.3716 64.1667 97.7951 0 163.128Z\\\" fill=\\\"#FFFBF4\\\" />\\n</symbol>\"\n});\nvar result = sprite.add(symbol);\nexport default symbol","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('transition',{attrs:{\"name\":\"fade\",\"mode\":\"out-in\"}},[_c('router-view')],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=5b2ace06&\"\nvar script = {}\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',{staticClass:\"section home\"},[_c('div',{staticClass:\"home__center\"},[_vm._m(0),_vm._m(1),_c('router-link',{staticClass:\"start-button\",attrs:{\"draggable\":\"false\",\"to\":\"/dataviz\"}})],1)])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h1',{staticClass:\"home__logo\"},[_c('img',{attrs:{\"src\":require(\"@/assets/img/logo-dailybread.png\"),\"alt\":\"\",\"draggable\":\"false\"}})])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',{staticClass:\"home__text\"},[_vm._v(\"As humans, we sure are producing a lot of food to sustain our needs. \"),_c('br'),_vm._v(\"But have you ever wondered what it tells us about the world ?\")])}]\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./Home.vue?vue&type=template&id=6f12594a&scoped=true&\"\nvar script = {}\nimport style0 from \"./Home.vue?vue&type=style&index=0&id=6f12594a&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"6f12594a\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',{staticClass:\"section dataviz\",class:{ 'dataviz--on-menu' : _vm.mobileMenuOpen }},[_c('FilterComponent',{on:{\"close\":function($event){_vm.mobileMenuOpen=false}}}),_c('button',{staticClass:\"dataviz__mobile-menu-button\",on:{\"click\":function($event){_vm.mobileMenuOpen=true}}}),_c('p',{staticClass:\"instructions\"},[_vm._v(\"Chose a country and period to see where and when the different foods are the most produced !\")]),_c('div',{ref:\"datavizElement\",staticClass:\"dataviz-data\"},_vm._l((_vm.currentData),function(item,index){return _c('div',{key:index+_vm.rerenderkey,staticClass:\"dataviz-data__item\"},[_c('div',{staticClass:\"item-base\",on:{\"click\":function($event){return _vm.$router.push((\"/dataviz/\" + (item.short_name)))}}},[_c('div',{staticClass:\"item-gauge\"},[_vm._l((_vm.arrayGauge(item.quantity)),function(unit,uindex){return _c('span',{key:item.aliment_name + uindex + _vm.rerenderkey,class:(\"unit \" + (item.short_name))})}),_c('span',{class:(\"item-quantity \" + (item.short_name))},[_vm._v(_vm._s(_vm._f(\"formatInt\")(item.quantity))+\" kt\")])],2),_c('span',{attrs:{\"to\":(\"/dataviz/\" + (item.short_name))}},[_c('svg',[_c('use',{attrs:{\"xlink:href\":(\"#\" + (item.short_name) + \"-icon\")}})]),_c('span',{staticClass:\"item-name\"},[_vm._v(_vm._s(item.aliment_name))])])])])}),0),_c('transition',{attrs:{\"name\":\"fade\",\"mode\":\"out-in\"}},[_c('keep-alive',[_c('router-view')],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"dataviz-filters\"},[_c('router-link',{staticClass:\"back-button\",attrs:{\"to\":_vm.$route.params.aliment ? '/dataviz' : '/'}},[_c('svg',[_c('use',{attrs:{\"xlink:href\":\"#back-icon\"}})])]),_c('h4',{staticClass:\"dataviz-filters__title\"},[_vm._v(\"Choose a time and period\")]),_c('div',{staticClass:\"dataviz-filters__select-container\"},[_c('CustomSelect',{staticClass:\"custom-select\",attrs:{\"color\":_vm.chartColors[0]},model:{value:(_vm.selectedCountry),callback:function ($$v) {_vm.selectedCountry=$$v},expression:\"selectedCountry\"}}),[(_vm.$route.params.aliment && _vm.comparedCountries[0])?_c('CustomSelect',{staticClass:\"custom-select\",attrs:{\"removable\":true,\"color\":_vm.chartColors[1]},on:{\"remove\":function($event){return _vm.onCustomSelectRemove(0)}},model:{value:(_vm.selectedCompareCountry1),callback:function ($$v) {_vm.selectedCompareCountry1=$$v},expression:\"selectedCompareCountry1\"}}):_vm._e(),(_vm.$route.params.aliment && _vm.comparedCountries[1])?_c('CustomSelect',{staticClass:\"custom-select\",attrs:{\"removable\":true,\"color\":_vm.chartColors[2]},on:{\"remove\":function($event){return _vm.onCustomSelectRemove(1)}},model:{value:(_vm.selectedCompareCountry2),callback:function ($$v) {_vm.selectedCompareCountry2=$$v},expression:\"selectedCompareCountry2\"}}):_vm._e(),(_vm.comparedCountries.length < 2)?_c('button',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.$route.params.aliment),expression:\"$route.params.aliment\"}],staticClass:\"dataviz-filters__add\",on:{\"click\":_vm.addCompareCountry}},[_c('svg',[_c('use',{attrs:{\"xlink:href\":\"#plus-icon\"}})])]):_vm._e()]],2),_c('DateSelect',{staticClass:\"date-select\"}),_c('button',{staticClass:\"dataviz-filters__close\",on:{\"click\":function($event){return _vm.$emit('close')}}},[_c('svg',[_c('use',{attrs:{\"xlink:href\":\"#close-icon\"}})])])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{directives:[{name:\"click-outside\",rawName:\"v-click-outside\",value:(_vm.onBlur),expression:\"onBlur\"}],staticClass:\"custom-select\",class:{'is-active' : _vm.focus}},[(_vm.input)?_c('div',{staticClass:\"custom-select__box\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.input.country_name),expression:\"input.country_name\"}],attrs:{\"type\":\"text\",\"placeholder\":\"Select a country\"},domProps:{\"value\":(_vm.input.country_name)},on:{\"focus\":_vm.onFocus,\"keyup\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\")){ return null; }return _vm.onEnter($event)},\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.input, \"country_name\", $event.target.value)}}}),_c('span',{staticClass:\"arrow\",on:{\"click\":function($event){$event.preventDefault();return _vm.toggleInput($event)}}})]):_vm._e(),(_vm.filteredList.length)?_c('div',{staticClass:\"custom-select__list\"},_vm._l((_vm.filteredList),function(item){return _c('span',{key:'l' + item.country_code,staticClass:\"list-item\",on:{\"click\":function($event){return _vm.onSelect(item)}}},[_vm._v(_vm._s(item.country_name))])}),0):_c('div',{staticClass:\"custom-select__list\"},[_c('span',{staticClass:\"list-item\"},[_vm._v(\"\\n      Aucun pays trouvé\\n    \")])]),_c('div',{staticClass:\"custom-select__box custom-select__box--mobile\",on:{\"click\":function($event){$event.stopPropagation();return _vm.$refs['mobile-select'].click()}}},[_c('span',[_vm._v(_vm._s(_vm.input.country_name))]),_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.input.country_code),expression:\"input.country_code\"}],ref:\"mobile-select\",attrs:{\"name\":\"country\",\"id\":\"country\"},on:{\"change\":[function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.$set(_vm.input, \"country_code\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])},_vm.onSelectMobile]}},_vm._l((_vm.countryList),function(item,i){return _c('option',{key:'o' + item.country_code + i,domProps:{\"value\":item.country_code}},[_vm._v(\"\\n        \"+_vm._s(item.country_name)+\"\\n      \")])}),0)]),(_vm.removable)?_c('button',{staticClass:\"custom-select__remove\",on:{\"click\":function($event){return _vm.$emit('remove')}}},[_c('svg',[_c('use',{attrs:{\"xlink:href\":\"#remove-icon\"}})])]):_vm._e(),(_vm.$route.params.aliment)?_c('div',{staticClass:\"color-circle\"},[_c('svg',{style:({fill: _vm.color})},[_c('use',{attrs:{\"xlink:href\":\"#chart-color-icon\"}})])]):_vm._e()])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"custom-select\" :class=\"{'is-active' : focus}\"\n       v-click-outside=\"onBlur\">\n    <div class=\"custom-select__box\" v-if=\"input\">\n      <input v-model=\"input.country_name\"\n             type=\"text\"\n             @focus=\"onFocus\"\n             @keyup.enter=\"onEnter\"\n             placeholder=\"Select a country\">\n      <span class=\"arrow\" @click.prevent=\"toggleInput\"/>\n    </div>\n    \n    <div class=\"custom-select__list\" v-if=\"filteredList.length\">\n      <span v-for=\"item in filteredList\"\n            class=\"list-item\"\n            @click=\"onSelect(item)\"\n            :key=\"'l' + item.country_code\">{{ item.country_name }}</span>\n    </div>\n    <div class=\"custom-select__list\" v-else>\n      <span class=\"list-item\">\n        Aucun pays trouvé\n      </span>\n    </div>\n\n    <div class=\"custom-select__box custom-select__box--mobile\"\n         @click.stop=\"$refs['mobile-select'].click()\">\n      <span>{{ input.country_name }}</span>\n      <select v-model=\"input.country_code\"\n              name=\"country\" id=\"country\"\n              ref=\"mobile-select\"\n              @change=\"onSelectMobile\">\n        <option v-for=\"(item, i) in countryList\"\n                :value=\"item.country_code\"\n                :key=\"'o' + item.country_code + i\">\n          {{ item.country_name }}\n        </option>\n      </select>\n    </div>\n\n    <button v-if=\"removable\"\n            class=\"custom-select__remove\"\n            @click=\"$emit('remove')\">\n      <svg>\n        <use xlink:href=\"#remove-icon\"/>\n      </svg>\n    </button>\n\n    <div class=\"color-circle\" v-if=\"$route.params.aliment\">\n      <svg :style=\"{fill: color}\">\n        <use xlink:href=\"#chart-color-icon\"/>\n      </svg>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { setTimeout } from 'timers';\nimport { mapGetters } from 'vuex'\n\nexport default {\n  watch: {\n    value () {\n      this.input = this.value\n    },\n  },\n  props: {\n    value: {\n      type: Object,\n      required: false\n    },\n    removable: {\n      type: Boolean,\n      required: false,\n      default: false\n    },\n    color: {\n      type: String, \n      required: false,\n      default: ''\n    }\n  },\n  data: () => ({\n    input: {\n      country_name: '',\n      country_code: ''\n    },\n    memory: null,\n    focus: false,\n  }),\n\n  computed: {\n    ...mapGetters('Params', [\n      'countryList'\n    ]),\n\n    filteredList () {\n      return this.countryList.filter(el => el.country_name && el.country_name.toLowerCase().includes(this.input.country_name && this.input.country_name.toLowerCase()))\n    }\n  },\n\n  mounted () {\n    this.input = this.value\n  },\n\n  methods: {\n    toggleInput () {\n      this.focus = !this.focus\n    },\n    \n    onSelect (item) {\n      this.memory = null\n      this.focus = false\n      this.input = {...item}\n      this.$emit('input', this.input)\n    },\n\n    onSelectMobile (a) {\n      this.input = this.countryList.find(el => el.country_code === a.target.value)\n      this.$emit('input', this.input)\n    },\n\n    onFocus () {\n      this.memory = { ...this.input }\n      this.focus = true\n      this.input.country_name = \"\"\n    },\n\n    onBlur () {\n      setTimeout(() => {\n        if (this.memory) {\n          this.input = { ...this.memory }\n          this.memory = null\n        }\n        this.focus = false\n      }, 0)\n    },\n\n    onEnter (e) {\n      if (!this.filteredList.length) {\n        return\n      }\n      this.onSelect(this.filteredList[0])\n      e.target.blur()\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n@import '~@/assets/stylesheets/partials/variables';\n\n.custom-select {\n  position: relative;\n  z-index: 3;\n\n  &__box {\n    display: none;\n    position: relative;\n    background: white;\n    border: 2px solid #000000;\n    border-radius: 3px;\n\n    @media (min-width:$bp) {\n      display: block;\n    }\n    &--mobile {\n      position: relative;\n      display: block;\n      width: 30rem;\n      select {\n        position: absolute;\n        opacity: 0;\n        height: 100%;\n        width: 100%;\n        top: 0;\n        left: 0;\n      }\n      span {\n        pointer-events: none;\n        line-height: 5rem;\n        padding: 0 3rem;\n        font-size: 2.2rem;\n        font-family: 'rumeur';\n        white-space: nowrap;\n      }\n      @media (min-width:$bp) {\n        display: none;\n      }\n    }\n    .arrow {\n      position: absolute;\n      display: block;\n      top: 50%;\n      right: 3rem;\n      height: 1rem;\n      width: 1rem;\n      border-right: 2px solid #000000;\n      border-bottom: 2px solid #000000;\n      transform: translateY(-50%) rotateZ(45deg);\n      transition: transform 0.3s ease;\n      cursor: pointer;\n    }\n      \n    input {\n      line-height: 5rem;\n      border: none;\n      width: 100%;\n      padding: 0 5rem 0 3rem;\n      font-size: 2.2rem;\n      font-family: 'rumeur';\n      cursor: pointer;\n      &:focus {\n        cursor: text;\n      }\n    }\n  }\n\n  &.is-active {\n    .custom-select__list {\n      visibility: visible;\n      opacity: 1;\n      transform: scale3d(1, 1, 1);\n    }\n    .custom-select__box .arrow {\n      transform: translateY(-50%) rotateZ(-135deg);\n    }\n  }\n  \n  &__list {\n    display: none;\n    @media (min-width:$bp) {\n      display: block;\n    }\n    transition: all 0.1s ease;\n    opacity: 0;\n    visibility: hidden;\n    transform: scale3d(0.9, 0.9, 1);\n    position: absolute;\n    top: calc(100% - 2px);\n    left: 0;\n    display: block;\n    max-height: 60vh;\n    overflow-y: auto;\n    padding: 1rem 0;\n    min-width: 100%;\n    border: 2px solid #000000;\n    background-color: #ffffff;\n\n    .list-item {\n      display: block;\n      padding: 3rem;\n      cursor: pointer;\n      white-space: nowrap;\n      font-size: 2.2rem;\n      font-family: 'rumeur';\n      &:hover {\n        background-color: #C4C4C4;\n      }\n    }\n  }\n\n  &__remove {\n    position: absolute;\n    border: none;\n    background: transparent;\n    padding: 0;\n    top: -14px;\n    right: -14px;\n    cursor: pointer;\n    svg {\n      width: 30px;\n      height: 30px;\n    }\n  }\n\n  .color-circle {\n    position: absolute;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    bottom: -20px;\n    left: -20px;\n    width: 45px;\n    height: 45px;\n    border: 2px solid #000000;\n    border-radius: 45px;\n    background-color: #ffffff;\n    svg {\n      width: 25px;\n      height: 21px;\n    }\n  }\n}\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CustomSelect.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CustomSelect.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./CustomSelect.vue?vue&type=template&id=8fe89f8a&scoped=true&\"\nimport script from \"./CustomSelect.vue?vue&type=script&lang=js&\"\nexport * from \"./CustomSelect.vue?vue&type=script&lang=js&\"\nimport style0 from \"./CustomSelect.vue?vue&type=style&index=0&id=8fe89f8a&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"8fe89f8a\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('svg',{attrs:{\"width\":\"176\",\"height\":\"177\",\"viewBox\":\"0 0 176 177\",\"fill\":\"none\",\"xmlns\":\"http://www.w3.org/2000/svg\"}},[_c('circle',{attrs:{\"cx\":\"88\",\"cy\":\"89\",\"r\":\"65\",\"fill\":\"white\"}}),_c('path',{class:_vm.checkIndex(0),attrs:{\"d\":\"M137.901 160.266C122.851 170.804 104.851 176.307 86.4816 175.987C68.1119 175.666 50.3151 169.538 35.6421 158.481L48.7316 141.111C59.7363 149.404 73.0839 154 86.8612 154.24C100.639 154.481 114.138 150.353 125.426 142.45L137.901 160.266Z\",\"stroke\":\"black\",\"stroke-width\":\"2\"},on:{\"click\":function($event){return _vm.onClick(0)},\"mouseover\":function($event){return _vm.hover(0)},\"mouseout\":_vm.out}}),_c('path',{class:_vm.checkIndex(1),attrs:{\"d\":\"M171.199 63.5637C176.57 81.1335 176.242 99.9528 170.26 117.324C164.279 134.696 152.951 149.728 137.901 160.266L125.426 142.45C136.713 134.546 145.209 123.272 149.695 110.243C154.181 97.2146 154.428 83.1001 150.399 69.9228L171.199 63.5637Z\",\"stroke\":\"black\",\"stroke-width\":\"2\"},on:{\"click\":function($event){return _vm.onClick(1)},\"mouseover\":function($event){return _vm.hover(1)},\"mouseout\":_vm.out}}),_c('path',{class:_vm.checkIndex(2),attrs:{\"d\":\"M89.5184 2.01325C107.888 2.33389 125.685 8.4618 140.358 19.5187C155.031 30.5756 165.827 45.9939 171.199 63.5637L150.399 69.9227C146.37 56.7454 138.273 45.1817 127.268 36.889C116.264 28.5964 102.916 24.0004 89.1388 23.7599L89.5184 2.01325Z\",\"stroke\":\"black\",\"stroke-width\":\"2\"},on:{\"click\":function($event){return _vm.onClick(2)},\"mouseover\":function($event){return _vm.hover(2)},\"mouseout\":_vm.out}}),_c('path',{class:_vm.checkIndex(3),attrs:{\"d\":\"M5.73989 60.6756C11.7214 43.3039 23.0489 28.2719 38.0989 17.7338C53.1488 7.19569 71.1486 1.69261 89.5184 2.01325L89.1388 23.7599C75.3614 23.5195 61.8616 27.6468 50.5741 35.5503C39.2867 43.4539 30.7911 54.728 26.3049 67.7567L5.73989 60.6756Z\",\"stroke\":\"black\",\"stroke-width\":\"2\"},on:{\"click\":function($event){return _vm.onClick(3)},\"mouseover\":function($event){return _vm.hover(3)},\"mouseout\":_vm.out}}),_c('path',{class:_vm.checkIndex(4),attrs:{\"d\":\"M35.6421 158.481C20.9691 147.424 10.1731 132.006 4.80149 114.436C-0.57014 96.8665 -0.241648 78.0472 5.73988 60.6756L26.3049 67.7567C21.8188 80.7854 21.5724 94.8999 25.6011 108.077C29.6298 121.255 37.7268 132.818 48.7316 141.111L35.6421 158.481Z\",\"stroke\":\"black\",\"stroke-width\":\"2\"},on:{\"click\":function($event){return _vm.onClick(4)},\"mouseover\":function($event){return _vm.hover(4)},\"mouseout\":_vm.out}})]),(_vm.showDecade)?_c('span',[_vm._v(_vm._s(_vm.decades[_vm.selectedDecade][0])),_c('br'),_vm._v(\"•\"),_c('br'),_vm._v(_vm._s(_vm.decades[_vm.selectedDecade][_vm.decades[_vm.selectedDecade].length - 1]))]):(_vm.hoverSelect)?_c('span',[_vm._v(_vm._s(_vm.hoverSelect[0])),_c('br'),_vm._v(\"•\"),_c('br'),_vm._v(_vm._s(_vm.hoverSelect[_vm.hoverSelect.length - 1]))]):_vm._e()])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    \n  <div>\n    <svg width=\"176\" height=\"177\" viewBox=\"0 0 176 177\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <circle cx=\"88\" cy=\"89\" r=\"65\" fill=\"white\"/>\n      <path d=\"M137.901 160.266C122.851 170.804 104.851 176.307 86.4816 175.987C68.1119 175.666 50.3151 169.538 35.6421 158.481L48.7316 141.111C59.7363 149.404 73.0839 154 86.8612 154.24C100.639 154.481 114.138 150.353 125.426 142.45L137.901 160.266Z\" stroke=\"black\" stroke-width=\"2\" :class=\"checkIndex(0)\" @click=\"onClick(0)\" @mouseover=\"hover(0)\" @mouseout=\"out\"/>\n      <path d=\"M171.199 63.5637C176.57 81.1335 176.242 99.9528 170.26 117.324C164.279 134.696 152.951 149.728 137.901 160.266L125.426 142.45C136.713 134.546 145.209 123.272 149.695 110.243C154.181 97.2146 154.428 83.1001 150.399 69.9228L171.199 63.5637Z\" stroke=\"black\" stroke-width=\"2\" :class=\"checkIndex(1)\" @click=\"onClick(1)\" @mouseover=\"hover(1)\" @mouseout=\"out\"/>\n      <path d=\"M89.5184 2.01325C107.888 2.33389 125.685 8.4618 140.358 19.5187C155.031 30.5756 165.827 45.9939 171.199 63.5637L150.399 69.9227C146.37 56.7454 138.273 45.1817 127.268 36.889C116.264 28.5964 102.916 24.0004 89.1388 23.7599L89.5184 2.01325Z\" stroke=\"black\" stroke-width=\"2\" :class=\"checkIndex(2)\" @click=\"onClick(2)\" @mouseover=\"hover(2)\" @mouseout=\"out\"/>\n      <path d=\"M5.73989 60.6756C11.7214 43.3039 23.0489 28.2719 38.0989 17.7338C53.1488 7.19569 71.1486 1.69261 89.5184 2.01325L89.1388 23.7599C75.3614 23.5195 61.8616 27.6468 50.5741 35.5503C39.2867 43.4539 30.7911 54.728 26.3049 67.7567L5.73989 60.6756Z\" stroke=\"black\" stroke-width=\"2\" :class=\"checkIndex(3)\" @click=\"onClick(3)\" @mouseover=\"hover(3)\" @mouseout=\"out\"/>\n      <path d=\"M35.6421 158.481C20.9691 147.424 10.1731 132.006 4.80149 114.436C-0.57014 96.8665 -0.241648 78.0472 5.73988 60.6756L26.3049 67.7567C21.8188 80.7854 21.5724 94.8999 25.6011 108.077C29.6298 121.255 37.7268 132.818 48.7316 141.111L35.6421 158.481Z\" stroke=\"black\" stroke-width=\"2\" :class=\"checkIndex(4)\" @click=\"onClick(4)\" @mouseover=\"hover(4)\" @mouseout=\"out\"/>\n    </svg>\n    <span v-if=\"showDecade\">{{ decades[selectedDecade][0] }}<br>•<br>{{ decades[selectedDecade][decades[selectedDecade].length - 1] }}</span>\n    <span v-else-if=\"hoverSelect\">{{ hoverSelect[0] }}<br>•<br>{{ hoverSelect[hoverSelect.length - 1] }}</span>\n  </div>\n\n</template>\n\n<script>\n  import { mapGetters, mapState, mapActions } from 'vuex'\n\n  export default {\n    data: () => ({\n      index: 0,\n      hoverSelect: null\n    }),\n\n    computed: {\n      ...mapState('Selection', [\n        'selectedDecade'\n      ]),\n\n      ...mapGetters('Params', [\n        'decades'\n      ]),\n\n      showDecade () {\n        return this.decades && this.decades.length && (this.selectedDecade || this.selectedDecade === 0) && !this.hoverSelect\n      }\n    },\n\n    methods: {\n      ...mapActions('Selection', [\n        'setDecade'\n      ]),\n\n      checkIndex (i) {\n        return this.selectedDecade === i ? 'green' : ''\n      },\n\n      onClick(i) {\n        this.setDecade(i)\n      },\n\n      hover (i) {\n        this.hoverSelect = [...this.decades[i]]\n      },\n\n      out () {\n        this.hoverSelect = null\n      }\n    }\n  }\n</script>\n\n<style scoped lang=\"scss\">\ndiv {\n  position: relative;\n  svg {\n    transition: transform 1s ease;\n    path {\n      transition: fill 0.2s ease;\n      fill: #ffffff;\n      &:hover {\n        fill: #C2FFB8;\n        cursor: pointer;\n      }\n      &.green {\n        fill: #6FE35C;\n      }\n    }\n  }\n  span {\n    user-select: none;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    text-align: center;\n    font-size: 2.6rem;\n    line-height: 2.2rem;\n    font-weight: 600;\n  }\n}\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DateSelect.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DateSelect.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./DateSelect.vue?vue&type=template&id=115e400e&scoped=true&\"\nimport script from \"./DateSelect.vue?vue&type=script&lang=js&\"\nexport * from \"./DateSelect.vue?vue&type=script&lang=js&\"\nimport style0 from \"./DateSelect.vue?vue&type=style&index=0&id=115e400e&scoped=true&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"115e400e\",\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div class=\"dataviz-filters\">\n    <router-link class=\"back-button\" :to=\"$route.params.aliment ? '/dataviz' : '/'\">\n      <svg><use xlink:href=\"#back-icon\"/></svg>\n    </router-link>\n\n    <h4 class=\"dataviz-filters__title\">Choose a time and period</h4>\n    <div class=\"dataviz-filters__select-container\">\n      <CustomSelect class=\"custom-select\"\n                      :color=\"chartColors[0]\"\n                    v-model=\"selectedCountry\"/>\n      <template>\n        <CustomSelect class=\"custom-select\"\n                      v-if=\"$route.params.aliment && comparedCountries[0]\"\n                      v-model=\"selectedCompareCountry1\"\n                      :removable=\"true\"\n                      :color=\"chartColors[1]\"\n                      @remove=\"onCustomSelectRemove(0)\"/>\n        <CustomSelect class=\"custom-select\"\n                      v-if=\"$route.params.aliment && comparedCountries[1]\"\n                      v-model=\"selectedCompareCountry2\"\n                      :removable=\"true\"\n                      :color=\"chartColors[2]\"\n                      @remove=\"onCustomSelectRemove(1)\"/>\n        <button class=\"dataviz-filters__add\"\n                v-show=\"$route.params.aliment\"\n                v-if=\"comparedCountries.length < 2\"\n                @click=\"addCompareCountry\">\n          <svg>\n            <use xlink:href=\"#plus-icon\"/>\n          </svg>\n      </button>\n      </template>\n    </div>\n    \n    <DateSelect class=\"date-select\"/>\n    <button class=\"dataviz-filters__close\" @click=\"$emit('close')\">\n      <svg>\n        <use xlink:href=\"#close-icon\"/>\n      </svg>\n    </button>\n  </div>\n</template>\n\n<script>\n  import CustomSelect from './filters/CustomSelect.vue'\n  import DateSelect from './filters/DateSelect.vue'\n  import colors from '../assets/colors.json'\n\n  import { mapState, mapGetters, mapActions } from 'vuex'\n\n  export default {\n    components: {\n      CustomSelect,\n      DateSelect\n    },\n\n    computed: {\n      ...mapState('Selection', [\n        'country',\n        'selectedYear',\n        'comparedCountries'\n      ]),\n\n      ...mapState('Params', [\n        'yearList'\n      ]),\n\n      ...mapGetters('Params', [\n        'decades'\n      ]),\n\n      chartColors () {\n        return this.$route.params.aliment ? colors[this.$route.params.aliment].charts : [null, null, null]\n      },\n\n      /**\n       * select country v-model\n       */\n      selectedCountry: {\n        get () {\n          return this.country\n        },\n        set (country) {\n          this.setCountry(country)\n        }\n      },\n\n      selectedCompareCountry1: {\n        get () {\n          return this.comparedCountries[0].country\n        },\n        set (country) {\n          this.setCompareCountry({country, index: 0})\n        }\n      },\n\n      selectedCompareCountry2: {\n        get () {\n          return this.comparedCountries[1].country\n        },\n        set (country) {\n          this.setCompareCountry({country, index: 1})\n        }\n      },\n    },\n\n    methods: {\n      ...mapActions('Selection', [\n        'setCountry',\n        'addCompareCountry',\n        'removeCompareCountry',\n        'setCompareCountry',\n      ]),\n\n      onCustomSelectRemove (i) {\n        this.removeCompareCountry(i)\n      }\n    }\n  }\n</script>\n\n<style lang=\"scss\">\n@import '~@/assets/stylesheets/partials/variables';\n\n.dataviz-filters {\n  position: fixed;\n  z-index: 10;\n  height: 100vh;\n  width: 100vw;\n  display: none;\n  flex-direction: column;\n  padding: 8rem 4.5rem 9rem;\n  align-items: center;\n  background-color: rgba(#7AD7FF, 0.8);\n  @media (min-width: $bp) {\n    padding: 2rem 2.6rem;\n    background-color: transparent;\n    display: flex;\n    flex-direction: row;\n    align-items: flex-start;\n    justify-content: space-between;\n    height: unset;\n    width: 100vw;\n    top: 0;\n    .custom-select:not(:last-child) {\n      margin-right: 2.5rem;\n    }\n  }\n  &__title {\n    font-size: 2.2rem;\n    margin-bottom: 3.6rem;\n    text-align: center;\n    @media (min-width: $bp) {\n      display: none;\n    }\n  }\n\n  &__select-container {\n    display: flex;\n    align-items: center;\n    @media (min-width: $bp) {\n      margin-top: 7rem;\n    }\n  }\n  &__add {\n    margin-top: 1.5rem;\n    border: 2px solid #000000;\n    width: 37px;\n    height: 37px;\n    font-size: 2.5rem;\n    line-height: 1px;\n    border-radius: 4rem;\n    cursor: pointer;\n    @media (min-width: $bp) {\n      margin: 0;\n    }\n    svg {\n      height: 16px;\n      width: 16px;\n    }\n  }\n  .date-select {\n    margin-top: auto;\n    @media (min-width: $bp) {\n      margin: 0 0 0 auto;\n    }\n  }\n  &__close {\n    border: none;\n    background: none;\n    position: absolute;\n    cursor: pointer;\n    top: 2.5rem;\n    right: 2.5rem;\n    svg {\n      height: 24px;\n      width: 24px;\n    }\n    @media (min-width: $bp) {\n      display: none;\n    }\n  }\n\n  .back-button {\n    position: fixed;\n    top: 30px;\n    left: 26px;\n    svg {\n      height: 25px;\n      width: 30px;\n    } \n  }\n}\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Filter.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Filter.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Filter.vue?vue&type=template&id=8d63421c&\"\nimport script from \"./Filter.vue?vue&type=script&lang=js&\"\nexport * from \"./Filter.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Filter.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\n  <section class=\"section dataviz\" :class=\"{ 'dataviz--on-menu' : mobileMenuOpen }\">\n    <FilterComponent @close=\"mobileMenuOpen=false\"/>\n    <button class=\"dataviz__mobile-menu-button\" @click=\"mobileMenuOpen=true\"/>\n    <p class=\"instructions\">Chose a country and period to see where and when the different foods are the most produced !</p>\n    <div class=\"dataviz-data\" ref=\"datavizElement\">\n      <div class=\"dataviz-data__item\"\n           v-for=\"(item, index) in currentData\"\n           :key=\"index+rerenderkey\">\n        <div class=\"item-base\"\n             @click=\"$router.push(`/dataviz/${item.short_name}`)\">\n          <div class=\"item-gauge\">\n            <span :class=\"`unit ${item.short_name}`\" v-for=\"(unit, uindex) in arrayGauge(item.quantity)\"\n                  :key=\"item.aliment_name + uindex + rerenderkey\"></span>\n            <span :class=\"`item-quantity ${item.short_name}`\">{{ item.quantity | formatInt }} kt</span>\n          </div>\n          <span :to=\"`/dataviz/${item.short_name}`\">\n            <svg>\n              <use :xlink:href=\"`#${item.short_name}-icon`\"/>\n            </svg>\n            <span class=\"item-name\">{{ item.aliment_name }}</span>\n          </span>\n        </div>\n      </div>\n    </div>\n    <transition name=\"fade\" mode=\"out-in\">\n      <keep-alive>\n        <router-view/>\n      </keep-alive>\n    </transition>\n  </section>\n</template>\n\n<script>\nimport FilterComponent from '../components/Filter.vue'\n\nimport { mapState, mapActions, mapGetters } from 'vuex'\n\nexport default {\n  components: {\n    FilterComponent\n  },\n\n  data: () => ({\n    rerenderkey: 0,\n    mobileMenuOpen: false\n  }),\n\n  computed: {\n    ...mapState('Selection', [\n      'country',\n      'food',\n      'selectedDecade'\n    ]),\n\n    ...mapGetters('Params', [\n      'decades'\n    ]),\n\n    /**\n     * data de la liste des aliments formatées pour être affichée\n     */\n    currentData () {\n      if (!this.decades.length || !this.country || !this.food) {\n        return {}\n      }\n      return this.food.data.map(el => ({\n        aliment_name: el.aliment_name,\n        aliment_name_fr: el.aliment_name_fr,\n        short_name: el.short_name,\n        quantity: this.decades[this.selectedDecade].reduce((acc, curr) => acc += el.data.find(el => el.year===curr).quantity, 0)\n      }))\n    },\n\n    /**\n     * recherche de la plus grande quantité parmis les aliments affichés\n     */\n    currentMaxValue () {\n      const max = Math.max(...this.currentData.map(el => el.quantity))\n      return max > 100 ? max : 100\n    },\n  },\n\n  mounted () {\n    this.getParams()\n    this.setCountry({\n      country_name: 'World',\n      country_code: '000'\n    })\n    window.addEventListener('resize', () => {\n      this.rerenderkey++\n    })\n  },\n\n  methods: {\n    ...mapActions('Selection', [\n      'setCountry',\n    ]),\n\n    ...mapActions('Params', [\n      'getParams'\n    ]),\n    \n    arrayGauge (quantity) {\n      if (!quantity) {\n        return 0\n      }\n      const percentage = quantity/this.currentMaxValue\n      return Array(Math.round(percentage*Math.floor((window.innerHeight-450)/50)*2) || 1)\n    },\n  },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n@import '~@/assets/stylesheets/partials/variables';\n\n.dataviz {\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  background: #FFFBF4;\n  position: relative;\n  &::before {\n    content: '';\n    position: absolute;\n    background-image: url('~@/assets/svg/background-header.svg?external');\n    width: 2070px;\n    height: 440px;\n    top: -315px;\n    left: 50%;\n    transform: translateX(-50%);\n  }\n\n  .instructions {\n    padding: 18rem 0 0 2.4rem;\n    font-family: 'rumeur';\n    font-size: 2.2rem;\n    font-weight: 600;\n  }\n  \n  &__mobile-menu-button {\n    z-index: 10;\n    height: 13rem;\n    width: 13rem;\n    border-radius: 13rem;\n    border: none;\n    background-color: #7AD7FF;\n    position: fixed;\n    top: -3rem;\n    right: -3rem;\n    @media (min-width: $bp) {\n      display: none;\n    }\n  }\n\n  &--on-menu {\n    .dataviz-filters {\n      display: flex;\n    }\n    .dataviz__mobile-menu-button {\n      display: none;\n    }\n  }\n\n\n  &-data {\n    flex: 1;\n    display: flex;\n    align-items: stretch;\n    margin: auto;\n    overflow-x: auto; \n    max-width: 100vw;\n    padding-bottom: 2rem;\n\n    &__item {\n      margin: 0 5rem;\n      display: flex;\n      flex-direction: column;\n      justify-content: flex-end;\n      width: 10rem;\n      text-align: center;\n      .item {\n        &-base {\n          cursor: pointer;\n          margin-top: 2rem;\n          text-align: center;\n          display: flex;\n          padding: 1rem;\n          line-height: 2.3rem;\n          position: relative;\n          &:hover {\n            svg {\n              animation-name: popJump;\n              animation-duration: 0.5s;\n            }\n           .item-quantity {\n              opacity: 1;\n              transform: translateY(0);\n            }\n          }\n          .item-name {\n            margin: auto;\n          }\n          > span {\n            display: block;\n            height: 115px;\n            margin: auto;\n            position: relative;\n            text-decoration: none;\n            svg {\n              height: 8rem;\n              width: 8rem;\n            }\n            .item-name {\n              text-align: center;\n              color: #000000;\n            }\n          }\n        }\n\n        &-gauge {\n          position: absolute;\n          display: flex;\n          flex-direction: row;\n          flex-wrap: wrap-reverse;\n          width: 100%;\n          bottom: 100%;\n          padding-bottom: 2rem;\n          left: 0;\n          .unit {\n            height: 50px;\n            width: 50%;\n            display: flex;\n            &::after {\n              content: \"\";\n              height: 20px;\n              width: 20px;\n              border-radius: 20px;\n              margin: auto;\n            }\n\n            &.fruit {\n              &.unit::after {\n                background: $fruit;\n                border: 1px solid $borderFruit;\n              }\n            }\n\n            &.vegetable {\n              &.unit::after {\n                background: $vegetable;\n                border: 1px solid $borderVegetable;\n              }\n            }\n\n            &.fish {\n              &.unit::after {\n                background: $fish;\n                border: 1px solid $borderFish;\n              }\n            }\n\n            &.cereals {\n              &.unit::after {\n                background: $cereals;\n                border: 1px solid $borderCereals;\n              }\n            }\n\n            &.meat {\n              &.unit::after {\n                background: $meat;\n                border: 1px solid $borderMeat;\n              }\n            }\n\n            &.sugar {\n              &.unit::after {\n                background: $sugar;\n                border: 1px solid $borderSugar;\n              }\n            }\n\n            &.milk {\n              &.unit::after {\n                background: $milk;\n                border: 1px solid $borderMilk;\n              }\n            }\n\n            &.coffee {\n              &.unit::after {\n                background: $coffee;\n                border: 1px solid $borderCoffee;\n              }\n            }\n          }\n        }\n\n        &-quantity {\n          opacity: 0;\n          transform: translateY(-10px);\n          font-size: 1.4rem;\n          font-weight: 600;\n          font-size: 'rumeur';\n          border: 2px solid #000000;\n          background-color: #ffffff;\n          padding: 1.7rem 1rem;\n          border-radius: 5px;\n          position: absolute;\n          margin: 0 auto 1.5rem;\n          top: -70px;\n          right: 25%;\n          white-space: nowrap;\n          transition: all 0.3s ease;\n         &::before {\n            content: '';\n            position: absolute;\n            display : inline-block;\n            height : 0;\n            width : 0;\n            border-top : 21px solid red;\n            border-left : 21px solid transparent;\n            top: 100%;\n            right: 20px;\n          }\n          &::after {\n            content: '';\n            position: absolute;\n            display : inline-block;\n            height : 0;\n            width : 0;\n            border-top : 16px solid #ffffff;\n            border-left : 16px solid transparent;\n            top: 100%;\n            right: 22px;\n          } \n\n          &.fruit {\n            border-color: $fruit;\n            &::before {\n              border-top-color: $fruit;\n            }\n          }\n\n          &.vegetable {\n            border-color: $vegetable;\n            &::before {\n              border-top-color: $vegetable;\n            }\n          }\n\n          &.fish {\n            border-color: $fish;\n            &::before {\n              border-top-color: $fish;\n            }\n          }\n\n          &.cereals {\n            border-color: $cereals;\n            &::before {\n              border-top-color: $cereals;\n            }\n          }\n\n          &.meat {\n            border-color: $meat;\n            &::before {\n              border-top-color: $meat;\n            }\n          }\n\n          &.sugar {\n            border-color: $sugar;\n            &::before {\n              border-top-color: $sugar;\n            }\n          }\n\n          &.milk {\n            border-color: #000000;\n            &::before {\n              border-top-color: #000000;\n            }\n          }\n\n          &.coffee {\n            border-color: $coffee;\n            &::before {\n              border-top-color: $coffee;\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\n\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Dataviz.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Dataviz.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Dataviz.vue?vue&type=template&id=d7b70788&scoped=true&\"\nimport script from \"./Dataviz.vue?vue&type=script&lang=js&\"\nexport * from \"./Dataviz.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Dataviz.vue?vue&type=style&index=0&id=d7b70788&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"d7b70788\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"chart-view\",class:_vm.$route.params.aliment,attrs:{\"data-name\":_vm.bgName}},[(_vm.$route.params.aliment)?_c('div',{staticClass:\"chart-container\",class:{ 'chart-container--bar' : !_vm.chartline }},[_c('transition',{attrs:{\"name\":\"fade\",\"mode\":\"out-in\"}},[(_vm.currentFoodData.length && _vm.currentFoodData[0])?_c(_vm.chartType,{tag:\"component\",attrs:{\"height\":_vm.heightChart,\"chartData\":_vm.chartData}}):_vm._e()],1),_c('div',{staticClass:\"switch-container\"},[_c('svg',[_c('use',{attrs:{\"xlink:href\":\"#line-icon\"}})]),_c('label',{staticClass:\"switch\",attrs:{\"for\":\"switch-chart\"}},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.chartline),expression:\"chartline\"}],attrs:{\"id\":\"switch-chart\",\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.chartline)?_vm._i(_vm.chartline,null)>-1:(_vm.chartline)},on:{\"change\":function($event){var $$a=_vm.chartline,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.chartline=$$a.concat([$$v]))}else{$$i>-1&&(_vm.chartline=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.chartline=$$c}}}}),_c('span',{staticClass:\"toggle\"})]),_c('svg',[_c('use',{attrs:{\"xlink:href\":\"#bar-icon\"}})])]),_c('router-link',{staticClass:\"link link--left\",attrs:{\"to\":(\"/dataviz/\" + _vm.previousAliment)}},[_c('svg',[_c('use',{attrs:{\"xlink:href\":(\"#\" + _vm.previousAliment + \"-icon\")}})])]),_c('router-link',{staticClass:\"link link--right\",attrs:{\"to\":(\"/dataviz/\" + _vm.nextAliment)}},[_c('svg',[_c('use',{attrs:{\"xlink:href\":(\"#\" + _vm.nextAliment + \"-icon\")}})])])],1):_vm._e()])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { Bar, mixins } from 'vue-chartjs'\n\nexport default {\n  extends: Bar,\n  mixins: [mixins.reactiveProp],\n  props: {\n    chartData: {\n      type: Object,\n      required: true\n    },\n    height: {\n      type:Number,\n      required: false,\n      default: 350\n    }\n  },\n  data: () => ({\n    options: {\n      layout: {\n        padding: {\n          right: 50\n        }\n      },\n      legend: {\n        display: false,\n      },\n      responsive: true, \n      maintainAspectRatio: false,\n      drawBorder: false,\n      scales: {\n        xAxes: [{\n          categoryPercentage: 1,\n          barPercentage: 1,\n          barThickness: 70,\n          gridLines: {\n            color: \"rgba(0, 0, 0, 0)\",\n          },\n          ticks: {\n            fontColor: \"rgba(0,0,0, 0.8)\",\n            fontSize: 18,\n            fontFamily: 'Overpass'\n          }\n        }],\n        yAxes: [{\n          gridLines: {\n            color: \"rgba(0, 0, 0, 0)\",\n          },\n          ticks: {\n            beginAtZero: true,\n            fontColor: \"rgba(0,0,0, 0.8)\",\n            fontSize: 10,\n            fontStyle: 700,\n            fontFamily: 'Overpass',\n            callback: function(value) {\n              if (value !== 0) return new Intl.NumberFormat('fr-FR').format(value);\n            }\n          }\n        }]\n      },\n      tooltips: {\n        custom: function(tooltip) {\n          if (!tooltip) return;\n          // disable displaying the color box;\n          tooltip.displayColors = false;\n        },\n        callbacks: {\n          label: function (tooltipItem, data) {\n            return `${data.datasets[tooltipItem.datasetIndex].label}: ${new Intl.NumberFormat('fr-FR').format(tooltipItem.value)} kt`\n          }\n        }\n      }\n    }\n  }),\n  mounted () {\n    this.renderChart(this.chartData, this.options)\n  },\n  methods: {\n  }\n}","import { Line, mixins } from 'vue-chartjs'\n\nexport default {\n  extends: Line,\n  mixins: [mixins.reactiveProp],\n  props: {\n    chartData: {\n      type: Object,\n      required: true\n    },\n    height: {\n      type:Number,\n      required: false,\n      default: 350\n    }\n  },\n  data: () => ({\n    options: {\n      layout: {\n        padding: {\n          right: 140\n        }\n      },\n      legend: {\n        display: false,\n      },\n      responsive: true, \n      maintainAspectRatio: false,\n      drawBorder: false,\n      scales: {\n        xAxes: [{\n          categoryPercentage: 0.9,\n          barPercentage: 1,\n          gridLines: {\n            color: \"rgba(0, 0, 0, 0)\",\n          },\n          ticks: {\n            fontColor: \"rgba(0,0,0, 0.8)\",\n            fontSize: 18,\n            fontFamily: 'Overpass'\n          }\n        }],\n        yAxes: [{\n          gridLines: {\n            color: \"rgba(0, 0, 0, 0)\",\n          },\n          ticks: {\n            beginAtZero: true,\n            fontColor: \"rgba(0,0,0, 0.8)\",\n            fontSize: 10,\n            fontStyle: 700,\n            fontFamily: 'Overpass',\n            padding: 100,\n            callback: function(value) {\n              if (value !== 0) return new Intl.NumberFormat('fr-FR').format(value);\n            }\n          }\n        }]\n      },\n      tooltips: {\n        custom: function(tooltip) {\n          if (!tooltip) return;\n          // disable displaying the color box;\n          tooltip.displayColors = false;\n        },\n        callbacks: {\n          label: function (tooltipItem, data) {\n            return `${data.datasets[tooltipItem.datasetIndex].label}: ${new Intl.NumberFormat('fr-FR').format(tooltipItem.value)} kt`\n          }\n        }\n      }\n    }\n  }),\n  mounted () {\n    this.renderChart(this.chartData, this.options)\n  }\n}","<template>\n  <div class=\"chart-view\" :class=\"$route.params.aliment\" :data-name=\"bgName\">\n    <div class=\"chart-container\" :class=\"{ 'chart-container--bar' : !chartline }\" v-if=\"$route.params.aliment\">\n      <transition name=\"fade\" mode=\"out-in\">\n        <component :height=\"heightChart\" v-if=\"currentFoodData.length && currentFoodData[0]\" :is=\"chartType\" :chartData=\"chartData\"/>\n      </transition>\n      <div class=\"switch-container\">\n        <svg><use :xlink:href=\"`#line-icon`\"/></svg>\n        <label class=\"switch\" for=\"switch-chart\">\n          <input id=\"switch-chart\" type=\"checkbox\" v-model=\"chartline\">\n          <span class=\"toggle\"></span>\n        </label>\n        <svg><use :xlink:href=\"`#bar-icon`\"/></svg>\n      </div>\n      <router-link class=\"link link--left\" :to=\"`/dataviz/${previousAliment}`\">\n        <svg><use :xlink:href=\"`#${previousAliment}-icon`\"/></svg>\n      </router-link>\n      <router-link class=\"link link--right\" :to=\"`/dataviz/${nextAliment}`\">\n        <svg><use :xlink:href=\"`#${nextAliment}-icon`\"/></svg>\n      </router-link>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapState, mapGetters } from 'vuex'\nimport ChartViewBar from '../components/charts/ChartViewBar.js'\nimport ChartViewLine from '../components/charts/ChartViewLine.js'\nimport colors from '../assets/colors.json'\n\nconst alimentList = ['fruit', 'vegetable', 'meat', 'fish', 'sugar', 'cereals', 'coffee', 'milk']\n\nexport default {\n  components: {\n    'chart-view-bar': ChartViewBar,\n    'chart-view-line': ChartViewLine\n  },\n  data: () => ({\n    chartline: true\n  }),\n  computed: {\n    ...mapGetters('Params', [\n      'decades'\n    ]),   \n    ...mapState('Selection', [\n      'selectedDecade',\n    ]),\n    ...mapGetters('Selection', [\n        'allCountriesFoodData',\n      ]\n    ),\n\n    heightChart () {\n      return window.innerHeight-400\n    },\n\n    bgName () {\n      return this.$route.params.aliment ? this.$route.params.aliment.split('_').join(' ').toUpperCase() : ''\n    },\n\n    chartType () {\n      return this.chartline ? 'chart-view-line' : 'chart-view-bar'\n    },\n\n    chartData () {\n      return this.chartline ? this.chartDataLine : this.chartDataBar\n    },\n\n    currentFoodData () {\n      let data = this.allCountriesFoodData\n      return data.filter(el => el).map(el => {\n        if (!el || !this.decades.length) return\n        const currentFood = el.data.find(aliment => aliment.short_name === this.$route.params.aliment)\n        return {\n          country: el.name,\n          food: this.decades[this.selectedDecade].map(year => currentFood.data.find(el => el.year===year))\n        }\n      })\n    },\n\n    chartDataBar () {\n      return {\n        labels: [`${this.currentFoodData[0].food[0].year} - ${this.currentFoodData[0].food[this.currentFoodData[0].food.length -1].year}`],\n        datasets: this.currentFoodData.map((el, i) => ({\n            label: el.country,\n            backgroundColor: colors[this.$route.params.aliment].charts[i],\n            data: el.food.reduce((acc, curr) => {\n              acc[0] += curr.quantity\n              return acc\n            }, [0]),\n            borderWidth: 2,\n            borderColor: \"black\",\n          })\n        )\n      }\n    },\n\n    chartDataLine () {\n      return {\n        labels: this.currentFoodData[0].food.map(el => el.year),\n        datasets: this.currentFoodData.map((el, i) => ({\n            label: el.country,\n            borderColor: colors[this.$route.params.aliment].charts[i],\n            pointHoverBackgroundColor: colors[this.$route.params.aliment].charts[i],\n            borderWidth: 4,\n            backgroundColor: 'rgba(0,0,0,0)',\n            data: el.food.map(al => al.quantity),\n            pointHoverRadius: 5,\n            pointHitRadius: 20,\n          })\n        )\n      }\n    },\n\n    previousAliment () {\n      const currentIndex = alimentList.findIndex(el => el===this.$route.params.aliment)\n      return alimentList[currentIndex-1] || alimentList[alimentList.length-1]\n    },\n\n    nextAliment () {\n      const currentIndex = alimentList.findIndex(el => el===this.$route.params.aliment)\n      return alimentList[currentIndex+1] || alimentList[0]\n    }\n  },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n@import '~@/assets/stylesheets/partials/variables';\n\n.chart-view {\n  position: fixed;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n\n  &::before {\n    content: '';\n    background-image: url('~@/assets/svg/chartview-shape-background.svg?external');\n    background-size: 100vw 100vh;\n    background-repeat: no-repeat;\n    background-position: right 0 bottom 0rem;\n    width: 100vw;\n    height: 100vw;\n    bottom: 0;\n    position: absolute;\n  }\n\n  &:after {\n    content: attr(data-name);\n    position: absolute;\n    left: 50%;\n    transform: translate(-50%);\n    bottom: 10%;\n    font-size: 30rem;\n    font-weight: 800;\n    opacity: 0.05;\n    white-space: nowrap;\n  }\n\n  transition: background-color 0.3s ease;\n  &.fruit {\n    background: $fruit;\n  }\n\n  &.fish {\n    background: $fish;\n  }\n\n  &.vegetable {\n    background: $vegetable;\n  }\n\n  &.cereals {\n    background: $cereals;\n  }\n\n  &.meat {\n    background: $meat;\n  }\n\n  &.sugar {\n    background: $sugar;\n  }\n\n  &.milk {\n    background: $milk;\n  }\n\n  &.coffee {\n    background: $coffee;\n  }\n\n  .link {\n    position: fixed;\n    top: 45%;\n    display: flex;\n    align-items: center;\n    &:hover {\n      svg {\n        animation-name: popJump;\n        animation-duration: 0.5s;\n      }\n    }\n    svg {\n      height: 7rem;\n      width: 7rem;\n    }\n\n    &--left {\n      left: 1rem;\n      &::before {\n        content: '';\n        background-image: url('~@/assets/svg/arrow.svg?external');\n        background-size: 25px 25px;\n        height: 25px;\n        width: 25px;\n        margin-right: 0.3rem;\n      }\n    }\n    &--right {\n      right: 1rem;\n      &::after {\n        content: '';\n        background-image: url('~@/assets/svg/arrow.svg?external');\n        background-size: 25px 25px;\n        height: 25px;\n        width: 25px;\n        margin-left: 0.3rem;\n        transform: rotateZ(180deg);\n      }\n    }\n  }\n}\n\n.chart-container {\n  z-index: 2;\n  margin-top: auto;\n  margin-bottom: 8rem;\n  padding: 0 16rem 0 16rem;\n  position: relative;\n  &::before {\n    content: '';\n    height: 2px;\n    width: 100vw;\n    background-color: #000000;\n    position: absolute;\n    left: 0;\n    bottom: 9rem;\n  }\n  &::after {\n    content: '';\n    height: 105%;\n    width: 2px;\n    background-color: #000000;\n    position: absolute;\n    left: 22rem;\n    bottom: 0;\n  }\n  \n  > div:first-child {\n    position: relative;\n    &:before {\n      content: 'kilotons';\n      position: absolute;\n      left: 30px;\n      top: -50px;\n    }\n  }\n}\n\n.switch-container {\n  display: flex;\n  justify-content: center;\n  margin: 1.5rem auto 0;\n  align-items: flex-end;\n  svg {\n    height: 36px;\n    width: 36px;\n    margin: 0 1rem;\n  }\n    \n  .switch {\n    z-index: 2;\n    height: 3rem;\n    width: fit-content;\n    display: block;\n    font-family: 'rumeur';\n\n    .toggle {\n      display: inline-block;\n      height: 100%;\n      width: 7rem;\n      margin: 0 0.5rem;\n      background-color: #7AD7FF;\n      border: 2px solid #000000;\n      border-radius: 15px;\n      overflow: hidden;\n\n      &:after {\n        content: '';\n        display: block;\n        border-radius: 15px;\n        height: 100%;\n        width: 50%;\n        background-color: #ffffff;\n        margin-left: 50%;\n        transition: margin 0.3s ease;\n      } \n    }\n\n    input {\n      display: none;\n      &:checked + .toggle:after {\n        margin-left: 0;\n      }\n    }\n  }\n}\n\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ChartView.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ChartView.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ChartView.vue?vue&type=template&id=6e2b8bfc&scoped=true&\"\nimport script from \"./ChartView.vue?vue&type=script&lang=js&\"\nexport * from \"./ChartView.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ChartView.vue?vue&type=style&index=0&id=6e2b8bfc&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"6e2b8bfc\",\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\nimport VueRouter from 'vue-router'\n\n//components\nimport Home from './views/Home.vue'\nimport Dataviz from './views/Dataviz.vue'\nimport ChartView from './views/ChartView.vue'\n\nVue.use(VueRouter)\n\nconst routes = [\n  {\n    path: '/',\n    component: Home\n  },\n  {\n    path: '/dataviz',\n    component: Dataviz,\n    children: [{\n      path: ':aliment',\n      component: ChartView\n    }]\n  }\n]\n\nconst router = new VueRouter({\n  routes\n})\n\nexport default router","import axios from 'axios'\n\nconst instance = axios.create({\n  baseURL: 'https://dataviz-back.herokuapp.com/',\n});\n\nexport default instance","import axiosClient from '../../http'\n\nexport default {\n  namespaced: true,\n\n  state: {\n    countries: [],\n    yearList: []\n  },\n\n  actions: {\n    getParams({ commit }) {\n      axiosClient.get('/countries')\n      .then(res => {\n        commit('setCountryList', res.data)\n      })\n\n      axiosClient.get('/years')\n        .then(res => {\n          commit('setYearList', res.data)\n        })\n      \n    },\n  },\n\n  mutations: {\n    setCountryList: (state, countries) => {\n      state.countries = countries\n    },\n\n    setYearList: (state, yearList) => {\n      state.yearList = yearList\n    }\n  },\n\n  getters: {\n    decades (state) {\n      const decades = []\n      for(let i=0; i< state.yearList.length; i++) {\n        if (!decades.length || state.yearList[i].year - decades[decades.length - 1][0] >= 10) {\n          decades.push([])\n        }\n        decades[decades.length - 1].push(state.yearList[i].year)\n      }\n      return decades\n    },\n\n    countryList (state) {\n      return [\n        {\n          country_code: '000',\n          country_name: 'World'\n        },\n        ...state.countries\n      ]\n    }\n  }\n}","import axiosClient from '../../http'\n\nconst alimentList = ['fruit', 'vegetable', 'meat', 'fish', 'sugar', 'cereals', 'coffee', 'milk']\n\nexport default {\n  namespaced: true,\n\n  state: {\n    country: {\n      country_name: '',\n      country_code: '',\n    },\n    food: null,\n    world: {\n      state: false,\n      food: []\n    },\n    comparedCountries: [],\n    selectedDecade: 0\n  },\n\n  actions: {\n    setCountry({ commit }, country) {\n      if (country.country_code === '000') {\n        commit('setCountry', country)\n        axiosClient.get('/food', {\n          params: { world: true }\n        }).then(res => {\n          commit('setFoodData', {\n            name: 'World',\n            data: res.data\n          })\n        })\n      } else {\n        commit('setCountry', country)\n        axiosClient.get('/food', {\n          params: { country_code: country.country_code }\n        }).then(res => {\n          commit('setFoodData', res.data)\n        })\n      }\n    },\n\n    setDecade({ commit }, decade) {\n      commit('setDecade', decade)\n    },\n\n    addCompareCountry({ commit }) {\n      commit('addCompareCountry')\n    },\n\n    removeCompareCountry({ commit }, index) {\n      commit('removeCompareCountry', index)\n    },\n\n    setCompareCountry({ commit }, { country, index }) {\n      if (country.country_code === '000') {\n        commit('setCompareCountry', { country, index })\n        axiosClient.get('/food', {\n          params: { world: true }\n        }).then(res => {\n          commit('setCompareFoodData', {\n            data: {\n              name: 'World',\n              data: res.data\n            },\n            index\n          })\n        })\n      } else {\n        commit('setCompareCountry', { country, index })\n        axiosClient.get('/food', {\n          params: { country_code: country.country_code }\n        }).then(res => {\n          commit('setCompareFoodData', { data: res.data, index})\n        })\n      }\n    }\n  },\n\n  mutations: {\n    setCountry: (state, country) => {\n      state.country = country\n    },\n\n    setDecade: (state, decade) => {\n      state.selectedDecade = decade\n    },\n\n    setFoodData: (state, country) => {\n      state.food = {\n        name: country.name,\n        data: alimentList.map(aliment => country.data.find(el => el.short_name===aliment) || {\n          short_name: aliment,\n          aliment_name: aliment.split('_').map(el => el.charAt(0).toUpperCase() + el.slice(1)).join(' '),\n          data: [...Array(53).keys()].map(el => ({year:el+1960, quantity:0 }))\n        })\n      }\n    },\n\n    getWorldData: (state, food) => {\n      state.world.food = alimentList.map(aliment => food.find(el => el.short_name===aliment))\n    },\n\n    setWorldState: (state, bool) => {\n      state.world.state = bool\n    },\n\n    addCompareCountry: (state) => {\n      state.comparedCountries.push({\n        country: {\n          country_code: '',\n          country_name: ''\n        },\n        food: null\n      })\n    },\n\n    removeCompareCountry: (state, index) => {\n      state.comparedCountries.splice(index, 1)\n    },\n\n    setCompareCountry: (state, { country, index }) => {\n      state.comparedCountries[index].country = country\n    },\n\n    setCompareFoodData: (state, { data, index }) => {\n      state.comparedCountries[index].food = data\n    }\n  },\n  \n  getters: {\n    allCountriesFoodData: (state) => {\n      return [\n        state.food,\n        ...state.comparedCountries.map(el => el.food)\n      ]\n    },\n    zaWarudo: (state) => {\n      return [\n        state.food,\n        {\n          name: 'World',\n          data: state.world.food\n        }\n      ]\n    }\n  }\n}","import Vue from 'vue'\nimport Vuex from 'vuex'\n\nimport Params from './modules/Params.js'\nimport Selection from './modules/Selection.js'\n\nVue.use(Vuex)\n\nconst store = new Vuex.Store(\n  {\n    modules: {\n      Params,\n      Selection,\n    }\n  }\n)\n\nexport default store\n","import Vue from 'vue'\n\nVue.filter('formatInt', (value) => {\n  return new Intl.NumberFormat('fr-FR').format(value)\n})","import Vue from 'vue'\n\nconst stopProp = (event) => { \n  event.stopPropagation()\n}\n\nVue.directive('click-outside', {\n  bind (el, binding, vnode) {\n    vnode.context.event = event => vnode.context.$emit(binding.expression, event)\n    el.addEventListener('click', stopProp)\n    document.body.addEventListener('click', binding.value)\n  },   \n  unbind (el, binding) {\n    el.removeEventListener('click', stopProp)\n    document.body.removeEventListener('click', binding.value)\n  }\n})\n","import Vue from 'vue'\nimport App from './App.vue'\nimport router from './router.js'\nimport store from './store'\nimport './helpers/filters.js'\n\n//import style\nimport './assets/stylesheets/main.scss'\n\nimport './helpers/directives.js'\n\n//import svg for svg-sprite-loader\nconst r = require.context('./assets/svg', false, /\\.svg$/)\nr.keys().map(r)\n\nVue.config.productionTip = false\n\nnew Vue({\n  router,\n  store,\n  render: h => h(App),\n}).$mount('#app')\n","import SpriteSymbol from \"svg-baker-runtime/browser-symbol\";\nimport sprite from \"svg-sprite-loader/runtime/browser-sprite.build\";\nvar symbol = new SpriteSymbol({\n  \"id\": \"plus-icon\",\n  \"use\": \"plus-icon-usage\",\n  \"viewBox\": \"0 0 16 16\",\n  \"content\": \"<symbol viewBox=\\\"0 0 16 16\\\" fill=\\\"none\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" id=\\\"plus-icon\\\">\\n<path fill-rule=\\\"evenodd\\\" clip-rule=\\\"evenodd\\\" d=\\\"M15.2452 8.73427L15.2452 7.2452L8.74448 7.2452L8.74448 0.764996L7.25541 0.764997L7.25541 7.2452L0.754713 7.2452L0.754713 8.73427L7.25541 8.73427V15.2555H8.74449V8.73427L15.2452 8.73427Z\\\" fill=\\\"#333333\\\" />\\n</symbol>\"\n});\nvar result = sprite.add(symbol);\nexport default symbol","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ChartView.vue?vue&type=style&index=0&id=6e2b8bfc&lang=scss&scoped=true&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ChartView.vue?vue&type=style&index=0&id=6e2b8bfc&lang=scss&scoped=true&\"","import SpriteSymbol from \"svg-baker-runtime/browser-symbol\";\nimport sprite from \"svg-sprite-loader/runtime/browser-sprite.build\";\nvar symbol = new SpriteSymbol({\n  \"id\": \"chart-color-icon\",\n  \"use\": \"chart-color-icon-usage\",\n  \"viewBox\": \"0 0 37 31\",\n  \"content\": \"<symbol viewBox=\\\"0 0 37 31\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" id=\\\"chart-color-icon\\\">\\n<path fill-rule=\\\"evenodd\\\" clip-rule=\\\"evenodd\\\" d=\\\"M23.6407 5.15694C23.6609 5.13982 23.6597 5.14292 23.6384 5.15883C23.6392 5.15817 23.64 5.15754 23.6407 5.15694ZM20.1642 3.28824C20.1643 3.28811 20.164 3.29238 20.1631 3.30146C20.1636 3.2929 20.164 3.28837 20.1642 3.28824ZM17.5436 11.7316C16.4551 12.8726 15.3446 14.0011 14.205 15.0981C12.6243 16.6195 10.9695 18.0253 9.36616 19.3737C9.21112 19.5041 9.05665 19.6339 8.90276 19.7631C7.44681 20.9863 6.04246 22.1662 4.69422 23.4087C3.6789 24.3444 2.09731 24.2798 1.16162 23.2645C0.225941 22.2492 0.290496 20.6676 1.30581 19.7319C2.74359 18.4069 4.23717 17.1523 5.67985 15.9404C5.83655 15.8088 5.99265 15.6777 6.14802 15.547C7.75227 14.1979 9.29072 12.8884 10.7375 11.4957C13.2996 9.02965 15.6972 6.40748 18.1548 3.71973C18.6614 3.16576 19.1705 2.60901 19.6841 2.05026C19.9214 1.79205 20.1657 1.54729 20.4135 1.33789C20.6294 1.15537 20.9953 0.871474 21.4741 0.688295C21.9632 0.501137 23.076 0.256528 24.1045 1.05705C24.9551 1.71919 25.0993 2.63456 25.1346 2.91184C25.217 3.55921 25.0855 4.22377 25.0211 4.53836C24.9365 4.95175 24.8193 5.40099 24.723 5.76861C23.9823 8.59518 23.1234 11.5756 21.8197 14.4216C21.4758 15.1724 21.1143 15.9178 20.731 16.6549C21.1684 16.4464 21.5905 16.2409 22.0051 16.0275C23.3734 15.323 24.5084 14.6053 25.4257 13.688C25.5188 13.5949 25.6881 13.4331 25.9135 13.2817C26.0269 13.2056 26.2238 13.0847 26.4879 12.9881C26.7357 12.8975 27.2245 12.7611 27.8326 12.8742C28.5347 13.0049 29.108 13.415 29.4665 13.9465C29.7741 14.4025 29.8568 14.843 29.8844 15.0687C29.9379 15.5055 29.8659 15.8619 29.8428 15.9739C29.7437 16.4561 29.4998 17.0073 29.3629 17.3118C29.0124 18.0914 28.5118 19.0583 28.2506 19.5417C27.6425 20.6667 27.1256 21.7521 26.5805 22.8968C26.4106 23.2537 26.2378 23.6165 26.0588 23.9879C26.447 23.7791 26.8428 23.58 27.217 23.4207C27.4608 23.3169 27.6951 23.2182 27.9207 23.1232C29.6474 22.3958 30.8661 21.8824 31.9403 20.9424C32.9794 20.0332 34.5588 20.1385 35.468 21.1776C36.3772 22.2167 36.2719 23.7961 35.2328 24.7053C33.5044 26.2177 31.4886 27.0565 29.8327 27.7457C29.6064 27.8398 29.3868 27.9312 29.1756 28.0211C28.7064 28.2209 28.2454 28.486 27.6422 28.8329C27.3739 28.9872 27.0773 29.1578 26.7394 29.3459C25.8061 29.8656 24.5265 30.5313 23.1453 30.7523C22.6781 30.8271 22.0963 30.7994 21.514 30.5202C20.9385 30.2443 20.5668 29.8209 20.3437 29.4496C19.9538 28.8008 19.9067 28.1347 19.8951 27.8399C19.868 27.1521 19.9998 26.3997 20.116 25.8531C20.2437 25.2524 20.4083 24.6531 20.5502 24.1854C20.6622 23.8164 20.8323 23.2844 20.9878 22.9733C21.1754 22.5982 21.3682 22.2015 21.5657 21.7909C20.9671 22.0748 20.399 22.35 19.8486 22.64C19.2119 22.9754 18.5629 23.2891 17.9596 23.5806C17.8689 23.6244 17.7792 23.6678 17.6908 23.7106C16.9955 24.0473 16.3578 24.3618 15.7511 24.7004C15.7344 24.7097 15.7199 24.718 15.6738 24.7442C15.6357 24.7658 15.5848 24.7945 15.5285 24.8252C15.4272 24.8806 15.2561 24.9715 15.0627 25.0529C15.0597 25.0541 15.0559 25.0558 15.0513 25.0577C14.9465 25.1027 14.4286 25.325 13.7911 25.2968C13.4008 25.2795 12.5554 25.1446 11.9139 24.3615C11.2808 23.5885 11.3081 22.7448 11.3597 22.3708C11.479 21.5057 11.8715 20.871 12.1665 20.476C12.312 20.2813 12.4579 20.1138 12.5567 20.0018C12.5912 19.9626 12.6195 19.9307 12.6436 19.9035C12.7028 19.8367 12.7363 19.7988 12.7732 19.7543C14.5963 17.5496 16.027 15.0615 17.2739 12.3393C17.3661 12.1381 17.4559 11.9355 17.5436 11.7316ZM16.1674 23.4751C16.1674 23.4751 16.1681 23.4741 16.1695 23.4721C16.1682 23.4741 16.1675 23.4751 16.1674 23.4751Z\\\" />\\n</symbol>\"\n});\nvar result = sprite.add(symbol);\nexport default symbol","import SpriteSymbol from \"svg-baker-runtime/browser-symbol\";\nimport sprite from \"svg-sprite-loader/runtime/browser-sprite.build\";\nvar symbol = new SpriteSymbol({\n  \"id\": \"btn-start-active\",\n  \"use\": \"btn-start-active-usage\",\n  \"viewBox\": \"0 0 180 48\",\n  \"content\": \"<symbol viewBox=\\\"0 0 180 48\\\" fill=\\\"none\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" id=\\\"btn-start-active\\\">\\n<path d=\\\"M25.0932 5.79853L9.25831 31.7984C5.19976 38.4623 9.99649 47 17.799 47H146.366C149.855 47 153.092 45.1815 154.907 42.2016L170.742 16.2017C174.8 9.53781 170.004 1.00012 162.201 1.00012H33.6339C30.1448 1.00012 26.908 2.81864 25.0932 5.79853Z\\\" fill=\\\"#FCFCFC\\\" stroke=\\\"#333333\\\" stroke-width=\\\"2\\\" />\\n<circle cx=\\\"124.5\\\" cy=\\\"24.5\\\" r=\\\"8.5\\\" fill=\\\"#6FE35C\\\" />\\n<path d=\\\"M48.5859 29.2617C48.4336 30.2344 48.9023 31.125 48.9961 31.2773L49.0078 31.3008C49.1953 31.6875 49.4766 31.8984 49.6172 32.0273C49.9805 32.3906 50.2969 32.5898 50.3555 32.625L50.4258 32.6602C51.1523 33.0234 51.8906 33.2344 52.6875 33.2344C53.4727 33.2344 54.2109 33.0469 54.9023 32.6836C55.2656 32.4961 56.4961 31.793 56.8711 30.7031C56.918 30.5508 57.0352 30.2578 57.0938 29.8945C57.1641 29.5078 57.1523 29.1445 57.1172 28.9102V28.8633L57.0469 28.5469C57.0586 28.6289 57.0234 28.5 57.0234 28.5117L57.0117 28.4648C56.9062 28.043 56.707 27.6094 56.4492 27.2461C56.1914 26.8828 55.5234 26.2266 55.0664 26.0742L55.043 26.0625C55.0312 26.0625 54.0938 25.7461 53.2266 25.4883L52.6641 25.3242C52.3945 25.2422 52.0547 25.1484 51.9492 25.1016C51.9609 25.1133 51.9727 25.125 51.9727 25.125L51.8203 25.043L51.8555 25.0664C51.8672 25.0781 51.8672 25.0781 51.8789 25.0781C51.8438 25.043 51.6797 24.9492 51.6211 24.6797C51.4922 24.1523 51.6797 23.7539 51.7148 23.6602C51.7969 23.5664 51.7969 23.543 51.8438 23.5078C51.9141 23.4141 52.0078 23.3672 52.0664 23.332C52.6172 23.0625 53.2148 23.0625 53.7656 23.332C53.8008 23.3438 53.9414 23.4727 54.0234 23.6133L54.3164 23.4609L56.2852 22.3711C55.8516 21.5625 55.1367 21.1289 55.0078 21.0703L54.9727 21.0586C54.3398 20.7188 53.6484 20.543 52.9102 20.543C52.1719 20.543 51.4922 20.7422 50.8125 21.082L50.7422 21.1172C50.6836 21.1523 50.3555 21.3516 50.0625 21.6328C49.8398 21.832 49.7227 21.9961 49.5352 22.2773L49.5117 22.3125C49.4414 22.418 49.0664 23.1094 48.9961 24.1289C48.9844 24.1992 48.9844 24.2695 48.9844 24.3398C48.9844 24.6211 49.0312 24.9258 49.1016 25.2422C49.4297 26.6133 50.4141 27.2227 50.7422 27.3867C51.0703 27.5508 51.4453 27.668 51.9727 27.8086C52.1484 27.8555 52.3125 27.9023 52.4883 27.9609C53.1094 28.1484 53.7539 28.3594 54.0469 28.4531C54.1523 28.5352 54.293 28.6758 54.3516 28.7344C54.3867 28.7812 54.4219 28.9102 54.5508 29.2266C54.5508 29.3203 54.5625 29.4375 54.5508 29.4961C54.5391 29.5898 54.4922 29.6953 54.4805 29.7305L54.4336 29.8477C54.3398 29.9766 54 30.2578 53.7188 30.3984C53.0625 30.7383 52.3477 30.7266 51.6914 30.4102C51.6445 30.375 51.5391 30.3047 51.4102 30.1758C51.3516 30.1172 51.2695 30.0469 51.2227 29.9648C51.1875 29.9062 51.1289 29.7422 51.1289 29.6602L48.5859 29.2617ZM61.5352 23.4844V28.8047C61.5352 29.8477 62.0391 30.7734 62.1914 31.0195C62.5078 31.5234 63.1758 32.1094 63.75 32.4258L63.9375 32.5312C64.4414 32.8125 65.0039 32.8828 65.5781 32.8828H66.9375V30.3047H65.5781C65.4141 30.3047 65.25 30.2695 65.0742 30.2109C64.8047 30.0234 64.5117 29.7891 64.3828 29.6602C64.2539 29.4141 64.1133 29.0742 64.1133 28.8047V23.4844H68.2148V20.9062H64.1133V13.6992H61.5352V20.9062H59.543V23.4844H61.5352ZM72.5508 26.8711C72.5508 26.4023 72.9023 25.4648 72.9961 25.1367C73.0078 25.125 73.0078 25.1133 73.0078 25.0898C73.3828 24.6328 74.2383 23.8945 74.8242 23.4258C75.2695 23.2383 75.7383 23.1445 76.2188 23.1445C76.6992 23.1445 77.168 23.2383 77.6133 23.4258C78.3281 23.9062 79.0781 24.5039 79.2188 24.7266C79.5469 25.2305 79.875 26.0156 79.875 26.6719V27.0703C79.875 27.7266 79.5234 28.5117 79.2188 29.0039C79.0664 29.25 78.3281 29.8359 77.6133 30.3164C77.168 30.5039 76.6992 30.5977 76.2188 30.5977C75.7383 30.5977 75.2695 30.5039 74.8242 30.3164C74.2383 29.8477 73.3828 29.1094 73.0078 28.6523C73.0078 28.6289 73.0078 28.6172 72.9961 28.6055C72.9023 28.2773 72.5508 27.3398 72.5508 26.8711ZM69.9609 26.8828C69.9609 27.6797 70.2891 28.6172 70.5703 29.4727C70.582 29.5312 70.6055 29.5781 70.6172 29.6133C70.6172 29.6016 70.5938 29.5547 70.582 29.4961L70.793 29.9883C71.4492 30.9609 73.0312 32.25 73.3594 32.4492L73.6172 32.6016C74.4258 32.9883 75.293 33.1758 76.2188 33.1758C77.1094 33.1758 77.9648 33.0469 78.7617 32.625L78.9375 32.5312C79.1719 32.4023 79.5117 32.1445 79.875 31.875V32.8008H82.4531V27.1758C82.4531 27.082 82.4648 26.9766 82.4648 26.8828V26.8711V26.8594C82.4648 26.7656 82.4531 26.6602 82.4531 26.5664V20.9062H79.875V21.8672C79.5117 21.5977 79.1719 21.3398 78.9375 21.2109L78.7617 21.1172C77.9648 20.6953 77.1094 20.5664 76.2188 20.5664C75.293 20.5664 74.4258 20.7539 73.6172 21.1406L73.3594 21.293C73.0547 21.5391 71.4609 22.7695 70.793 23.7539L70.582 24.2461C70.5938 24.1875 70.6172 24.1406 70.6172 24.1289C70.6055 24.1641 70.582 24.2109 70.5703 24.2695C70.2891 25.125 69.9609 26.0625 69.9609 26.8594V26.8828ZM85.6406 26.8828V32.8359H88.2188V26.6719C88.2188 26.0156 88.5703 25.2305 88.875 24.7383C89.0039 24.5273 89.8125 23.8594 90.5156 23.4023C90.6445 23.3438 90.7266 23.2734 90.8203 23.2148L90.8672 23.25C90.9844 23.3438 91.1016 23.3789 91.2305 23.4609C91.5234 23.707 91.9219 24.0469 92.2031 24.3281L94.5117 23.0391C93.9844 22.3477 92.9414 21.4922 92.7188 21.3516L92.4727 21.1992C92.4375 21.1875 92.332 21.1172 92.25 21.0703C91.8867 20.8477 91.4062 20.5312 90.7852 20.5312C90.1289 20.5312 89.6602 20.8594 89.4141 21.0469L89.3086 21.1289L89.332 21.1172L89.1562 21.2109C88.9219 21.3398 88.582 21.5977 88.2188 21.8672V20.918H85.6406V26.5664C85.6406 26.6719 85.6289 26.7773 85.6289 26.8828H85.6406ZM98.0508 23.4844V28.8047C98.0508 29.8477 98.5547 30.7734 98.707 31.0195C99.0234 31.5234 99.6914 32.1094 100.266 32.4258L100.453 32.5312C100.957 32.8125 101.52 32.8828 102.094 32.8828H103.453V30.3047H102.094C101.93 30.3047 101.766 30.2695 101.59 30.2109C101.32 30.0234 101.027 29.7891 100.898 29.6602C100.77 29.4141 100.629 29.0742 100.629 28.8047V23.4844H104.73V20.9062H100.629V13.6992H98.0508V20.9062H96.0586V23.4844H98.0508Z\\\" fill=\\\"black\\\" />\\n</symbol>\"\n});\nvar result = sprite.add(symbol);\nexport default symbol","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Filter.vue?vue&type=style&index=0&lang=scss&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Filter.vue?vue&type=style&index=0&lang=scss&\"","import SpriteSymbol from \"svg-baker-runtime/browser-symbol\";\nimport sprite from \"svg-sprite-loader/runtime/browser-sprite.build\";\nvar symbol = new SpriteSymbol({\n  \"id\": \"vegetable-icon\",\n  \"use\": \"vegetable-icon-usage\",\n  \"viewBox\": \"0 0 80 80\",\n  \"content\": \"<symbol viewBox=\\\"0 0 80 80\\\" fill=\\\"none\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" id=\\\"vegetable-icon\\\">\\n<mask id=\\\"vegetable-icon_mask0\\\" mask-type=\\\"alpha\\\" maskUnits=\\\"userSpaceOnUse\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"80\\\" height=\\\"80\\\">\\n<rect width=\\\"80\\\" height=\\\"80\\\" fill=\\\"#C4C4C4\\\" />\\n</mask>\\n<g mask=\\\"url(#vegetable-icon_mask0)\\\">\\n<path d=\\\"M40.1974 20.2186C27.8356 30.2244 36.5292 49.7187 44.1433 58.0569C45.0391 59.0991 49.1663 61.5225 54.0036 60.5219L59.0089 58.9911C59.6807 58.9911 62.8501 60.0216 65 60.5219C67.1499 61.0222 70.6541 57.7403 71.7738 56.4896C76.3104 50.1555 79.945 39.6632 79.164 31.4751C78.5571 25.1119 74.2084 20.1402 72.4457 19.5933C69.5953 18.7089 64.8315 21.0524 63.0399 22.7201C62.592 21.8863 61.0244 19.8434 58.3371 18.3425C55.6497 16.8416 52.2905 20.6355 50.9469 22.7201C45.5722 17.7172 41.5411 18.9679 40.1974 20.2186Z\\\" fill=\\\"#252525\\\" stroke=\\\"#252525\\\" />\\n<path d=\\\"M12.1285 35.779C8.14876 34.0894 0.359805 29.9499 1.04205 26.9087C1.72429 23.8674 8.71729 31.5551 12.1285 35.779C10.7072 32.8222 8.20562 26.4018 9.5701 24.3742C10.9346 22.3467 11.8442 31.1326 12.1285 35.779C12.6971 30.7102 14.1753 20.8261 15.5397 21.8398C16.9042 22.8536 13.8341 31.555 12.1285 35.779C14.1184 31.1326 18.2687 22.3467 18.951 24.3742C19.6332 26.4018 14.6869 32.8222 12.1285 35.779Z\\\" fill=\\\"#252525\\\" />\\n<path d=\\\"M12.1285 35.779C8.14875 34.0894 0.359805 29.9499 1.04205 26.9087C1.72429 23.8674 8.71729 31.5551 12.1285 35.779ZM12.1285 35.779C12.697 30.7102 14.1753 20.8261 15.5397 21.8398C16.9042 22.8536 13.8341 31.555 12.1285 35.779ZM12.1285 35.779C11.8442 31.1326 10.9346 22.3467 9.57011 24.3742C8.20562 26.4018 10.7072 32.8222 12.1285 35.779ZM12.1285 35.779C14.1184 31.1326 18.2687 22.3467 18.951 24.3742C19.6332 26.4018 14.6869 32.8222 12.1285 35.779Z\\\" stroke=\\\"#252525\\\" />\\n<path d=\\\"M9.4823 40.8209C3.87767 50.4288 40.8542 64.9272 64.2068 73.2675C34.5823 33.2344 28.1644 29.1446 24.4947 29.8118C21.8259 29.4782 15.0869 31.213 9.4823 40.8209Z\\\" fill=\\\"#FCFCFC\\\" stroke=\\\"#252525\\\" stroke-width=\\\"2\\\" stroke-linejoin=\\\"round\\\" />\\n<path d=\\\"M17.0132 50.7915C20.0157 48.7898 26.2208 44.5863 27.0215 43.7857\\\" stroke=\\\"#252525\\\" stroke-width=\\\"2\\\" />\\n<path d=\\\"M30.0238 59.7989C31.0246 59.1317 33.4266 57.3969 35.0279 55.7956M41.0329 64.803C42.0337 64.4694 44.4357 63.2017 46.037 60.7997\\\" stroke=\\\"#252525\\\" stroke-width=\\\"2\\\" />\\n</g>\\n</symbol>\"\n});\nvar result = sprite.add(symbol);\nexport default symbol","import SpriteSymbol from \"svg-baker-runtime/browser-symbol\";\nimport sprite from \"svg-sprite-loader/runtime/browser-sprite.build\";\nvar symbol = new SpriteSymbol({\n  \"id\": \"milk-icon\",\n  \"use\": \"milk-icon-usage\",\n  \"viewBox\": \"0 0 80 80\",\n  \"content\": \"<symbol viewBox=\\\"0 0 80 80\\\" fill=\\\"none\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" id=\\\"milk-icon\\\">\\n<mask id=\\\"milk-icon_mask0\\\" mask-type=\\\"alpha\\\" maskUnits=\\\"userSpaceOnUse\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"80\\\" height=\\\"80\\\">\\n<rect width=\\\"80\\\" height=\\\"80\\\" fill=\\\"#C4C4C4\\\" />\\n</mask>\\n<g mask=\\\"url(#milk-icon_mask0)\\\">\\n<path d=\\\"M22.1021 32.8882V75.5C22.1021 77.1568 23.4452 78.5 25.1021 78.5H53.8979C55.5548 78.5 56.8979 77.1568 56.8979 75.5V32.7881C56.8979 32.3387 56.797 31.8951 56.6025 31.4899L50.8669 19.5406C50.6724 19.1355 50.5714 18.6918 50.5714 18.2424V12.0714V6.79932V4C50.5714 2.34315 49.2283 1 47.5714 1H30.9014C29.2445 1 27.9014 2.34315 27.9014 4V5.68093C27.9014 6.39702 28.1858 7.08378 28.6922 7.59013C29.1985 8.09648 29.483 8.78324 29.483 9.49933V18.1424C29.483 18.6556 29.3513 19.1603 29.1005 19.6082L22.4845 31.4224C22.2337 31.8703 22.1021 32.375 22.1021 32.8882Z\\\" fill=\\\"#252525\\\" stroke=\\\"#252525\\\" stroke-width=\\\"2\\\" stroke-linejoin=\\\"round\\\" />\\n<path d=\\\"M32.3656 57.9325C31.6612 62.6285 37.3551 63.9982 40.2901 64.096C43.5774 64.096 46.1602 62.922 47.0406 62.335C47.7255 60.3783 48.6842 55.878 47.0406 53.53C45.397 51.182 39.8988 51.3776 37.3551 51.769C35.9854 51.8668 33.07 53.2365 32.3656 57.9325Z\\\" fill=\\\"#FCFCFC\\\" stroke=\\\"#252525\\\" />\\n<path d=\\\"M37.0019 58.5738C35.8279 57.3998 37.2954 55.1496 38.1759 54.1713C39.3499 53.9365 39.252 56.6171 39.0563 57.9868C38.8607 58.6717 38.1759 59.7478 37.0019 58.5738Z\\\" stroke=\\\"#252525\\\" />\\n<path d=\\\"M41.4043 58.5738C40.2303 57.3998 40.8173 55.4432 41.6978 54.4648C42.8719 54.23 43.361 56.6172 43.1653 57.9868C42.9697 58.6717 42.5783 59.7478 41.4043 58.5738Z\\\" stroke=\\\"#252525\\\" />\\n<path d=\\\"M34.0668 59.7478C34.3603 60.0413 39.6433 63.8569 46.6873 59.7478\\\" stroke=\\\"#252525\\\" />\\n<path d=\\\"M37.8823 41.5507C33.7733 42.4313 34.0668 52.7038 34.0668 52.9973C39.9368 49.9449 45.122 51.7255 46.9809 52.9973C48.3897 46.6577 46.3939 43.3118 45.2199 42.4313C44.1437 41.8442 41.1695 40.8463 37.8823 41.5507Z\\\" fill=\\\"#FCFCFC\\\" stroke=\\\"black\\\" />\\n<ellipse cx=\\\"39.0563\\\" cy=\\\"48.3013\\\" rx=\\\"0.880504\\\" ry=\\\"1.46751\\\" fill=\\\"#252525\\\" />\\n<ellipse cx=\\\"43.1653\\\" cy=\\\"48.3013\\\" rx=\\\"0.880504\\\" ry=\\\"1.46751\\\" fill=\\\"#252525\\\" />\\n<path d=\\\"M33.4797 37.1482C32.3057 39.7311 34.7516 41.9421 36.1213 42.7248L33.7732 46.2468C29.312 42.7248 30.349 38.9093 31.4252 37.4418C32.5992 36.2677 34.6537 34.5654 33.4797 37.1482Z\\\" fill=\\\"#FCFCFC\\\" stroke=\\\"black\\\" />\\n<path d=\\\"M48.286 37.635C49.3879 40.2463 47.0923 42.4817 45.8068 43.2729L48.0106 46.8338C52.1977 43.273 51.2244 39.4154 50.2143 37.9317C49.1124 36.7448 47.1842 35.0237 48.286 37.635Z\\\" fill=\\\"#FCFCFC\\\" stroke=\\\"black\\\" />\\n<path d=\\\"M28.4903 49.7688C27.7859 48.36 33.2842 44.2901 36.1213 42.4313C35.73 44.0944 34.7125 47.773 33.7733 49.1818C32.5993 50.9428 29.3708 51.5298 28.4903 49.7688Z\\\" fill=\\\"#FCFCFC\\\" stroke=\\\"black\\\" />\\n<path d=\\\"M52.2121 49.3899C52.8033 48.1102 48.1883 44.4133 45.8068 42.7248C46.1353 44.2355 46.9894 47.577 47.7777 48.8567C48.7631 50.4564 51.473 50.9896 52.2121 49.3899Z\\\" fill=\\\"#FCFCFC\\\" stroke=\\\"black\\\" />\\n<rect x=\\\"29.483\\\" y=\\\"2.05441\\\" width=\\\"20.034\\\" height=\\\"5.27211\\\" rx=\\\"1\\\" fill=\\\"#FCFCFC\\\" />\\n</g>\\n</symbol>\"\n});\nvar result = sprite.add(symbol);\nexport default symbol","import SpriteSymbol from \"svg-baker-runtime/browser-symbol\";\nimport sprite from \"svg-sprite-loader/runtime/browser-sprite.build\";\nvar symbol = new SpriteSymbol({\n  \"id\": \"logo-dailybread\",\n  \"use\": \"logo-dailybread-usage\",\n  \"viewBox\": \"0 0 441 92\",\n  \"content\": \"<symbol viewBox=\\\"0 0 441 92\\\" fill=\\\"none\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" id=\\\"logo-dailybread\\\">\\n<path d=\\\"M21.7724 89.2487C21.9856 90.0492 22.8069 90.5233 23.6068 90.3077L76.9289 75.9338C77.7287 75.7182 78.2043 74.8945 77.9911 74.094L66.8727 32.349C69.6456 27.4387 69.3833 23.0364 67.7793 19.5099C66.1574 15.944 63.225 13.3904 61.0422 12.0349C50.63 5.56922 38.517 6.05986 28.2437 9.70433C18.0138 13.3334 9.28497 20.2024 5.61135 26.9709C2.64125 32.4431 2.86129 37.1345 4.51351 40.7671C5.98627 44.0051 8.5372 46.2768 10.6572 47.5157L21.7724 89.2487Z\\\" fill=\\\"#252525\\\" stroke=\\\"#252525\\\" stroke-width=\\\"3\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" />\\n<path d=\\\"M31.0089 87.1837C31.2221 87.9842 32.0434 88.4584 32.8432 88.2428L86.1653 73.8689C86.9652 73.6533 87.4408 72.8295 87.2276 72.029L76.1092 30.2841C78.882 25.3738 78.6198 20.9715 77.0158 17.4449C75.3939 13.8791 72.4615 11.3254 70.2786 9.96994C59.8664 3.50428 47.7535 3.99492 37.4802 7.63939C27.2503 11.2685 18.5214 18.1375 14.8478 24.9059C11.8777 30.3782 12.0977 35.0696 13.75 38.7021C15.2227 41.9402 17.7737 44.2119 19.8937 45.4507L31.0089 87.1837Z\\\" fill=\\\"#FCFCFC\\\" stroke=\\\"#252525\\\" stroke-width=\\\"3\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" />\\n<path d=\\\"M83.9805 52.6547C83.9805 51.2875 84.9375 48.4847 85.3135 47.5619C85.3135 47.5277 85.3477 47.4935 85.3477 47.4594C86.4414 46.0922 88.9365 43.9388 90.6455 42.5717C91.9443 42.059 93.2773 41.7855 94.6787 41.7855C96.1143 41.7855 97.4814 42.059 98.7461 42.6058C100.831 43.973 103.053 45.7504 103.463 46.3998C104.42 47.8353 105.377 50.057 105.377 52.0736V53.2357C105.377 55.1498 104.386 57.474 103.463 58.8754C103.053 59.5248 100.831 61.3363 98.7461 62.7035C97.4473 63.2162 96.0801 63.4896 94.6787 63.4896C93.2773 63.4896 91.9443 63.2162 90.6455 62.7035C88.9365 61.3363 86.4414 59.183 85.3477 57.8158C85.3477 57.7816 85.3135 57.7474 85.3135 57.7133C84.9375 56.7904 83.9805 53.9877 83.9805 52.6547ZM76.4609 52.6547C76.4609 54.9789 77.3496 57.7474 78.2041 60.2084C78.3066 60.4476 78.3408 60.516 78.3408 60.6185C78.3066 60.5844 78.3066 60.5502 78.3066 60.516C78.3066 60.4135 78.2725 60.3793 78.2725 60.2767L78.8877 61.7465C80.8018 64.5834 85.4844 68.2064 86.373 68.9242L87.0908 69.3685C89.5176 70.4965 92.0469 71.0433 94.6787 71.0433C97.2764 71.0433 99.8398 70.6674 102.13 69.4369L102.643 69.1635C103.326 68.7875 104.283 68.0355 105.377 67.2152V69.9496H112.896V14.2025H105.377V38.0599C104.283 37.2396 103.326 36.556 102.643 36.1459L102.13 35.8383C99.9082 34.5052 97.2764 34.266 94.6787 34.266C92.0127 34.266 89.4834 34.8129 87.0908 35.9066L86.373 36.351C85.4844 37.0687 80.8018 40.6918 78.8877 43.5287L78.2725 44.9984C78.2725 44.8959 78.3066 44.8617 78.3066 44.7592C78.3066 44.725 78.3066 44.6908 78.3408 44.6566C78.3408 44.6908 78.3066 44.8275 78.2041 45.0668C77.3496 47.5277 76.4609 50.2963 76.4609 52.6205V52.6547ZM128.448 52.6205C128.448 51.2533 129.474 48.5189 129.747 47.5619C129.781 47.5277 129.781 47.4935 129.781 47.4252C130.875 46.0922 133.37 43.9388 135.079 42.5717C136.378 42.0248 137.745 41.7513 139.146 41.7513C140.548 41.7513 141.915 42.0248 143.214 42.5717C145.299 43.973 147.486 45.7162 147.896 46.3656C148.854 47.8353 149.811 50.1254 149.811 52.0394V53.2015C149.811 55.1156 148.785 57.4056 147.896 58.8412C147.452 59.559 145.299 61.2679 143.214 62.6693C141.915 63.2162 140.548 63.4896 139.146 63.4896C137.745 63.4896 136.378 63.2162 135.079 62.6693C133.37 61.3021 130.875 59.1488 129.781 57.8158C129.781 57.7474 129.781 57.7133 129.747 57.6791C129.474 56.722 128.448 53.9877 128.448 52.6205ZM120.895 52.6547C120.895 54.9789 121.852 57.7133 122.672 60.2084C122.706 60.3793 122.774 60.516 122.809 60.6185C122.809 60.5844 122.74 60.4476 122.706 60.2767L123.321 61.7123C125.235 64.5492 129.85 68.309 130.807 68.89L131.559 69.3344C133.917 70.4623 136.446 71.0092 139.146 71.0092C141.744 71.0092 144.239 70.6332 146.563 69.4027L147.076 69.1293C147.76 68.7533 148.751 68.0013 149.811 67.2152V69.9154H157.33V53.5092C157.33 53.2357 157.364 52.9281 157.364 52.6547V52.6205V52.5863C157.364 52.3129 157.33 52.0052 157.33 51.7318V35.223H149.811V38.0258C148.751 37.2396 147.76 36.4877 147.076 36.1117L146.563 35.8383C144.239 34.6078 141.744 34.2318 139.146 34.2318C136.446 34.2318 133.917 34.7787 131.559 35.9066L130.807 36.351C129.918 37.0687 125.27 40.6576 123.321 43.5287L122.706 44.9642C122.74 44.7933 122.809 44.6566 122.809 44.6224C122.774 44.725 122.706 44.8617 122.672 45.0326C121.852 47.5277 120.895 50.2621 120.895 52.5863V52.6547ZM173.907 21.5853H177.564L179.444 19.7396V16.0824L177.564 14.2025H173.907L172.027 16.0824V19.7396L173.907 21.5853ZM172.198 42.7426V69.9496H179.718V35.223H166.388V42.7426H172.198ZM193.185 21.722V70.0521H200.704V18.3724V14.2025H187.374V21.722H193.185ZM228.629 66.7709V70.223C228.629 70.4965 228.492 71.2484 227.774 73.4017L227.74 73.4359C227.638 73.5385 227.672 73.641 227.569 73.7435C227.296 74.1195 226.988 74.6664 226.749 74.9056C226.1 75.4867 225.211 75.9652 224.938 76.1019H224.903C224.049 76.4779 223.194 76.683 222.271 76.683C221.485 76.683 220.768 76.5121 219.981 76.2386C218.751 75.3842 217.521 74.4271 217.145 74.017L210.685 77.8451C211.778 79.6566 214.513 81.7416 216.119 82.6986L216.632 83.0062C218.307 84.0316 220.323 84.2025 222.271 84.2025C224.356 84.2025 226.271 83.7924 228.048 82.9379C228.355 82.8353 230.201 81.8783 231.808 80.4427C232.799 79.5199 233.448 78.4945 233.961 77.7084L234.269 77.2299L234.542 76.7172C234.645 76.5463 234.781 76.1361 234.781 76.1703C234.781 76.1361 234.815 76.0336 234.85 75.8969C235.499 74.0853 236.148 72.0345 236.148 70.223V35.223H228.629V59.2513H217.452V35.223H209.933V66.7709H228.629ZM251.324 52.0394C251.324 50.1254 252.35 47.8353 253.238 46.3998C253.614 45.7504 255.836 43.9047 257.921 42.5717C259.22 42.0248 260.587 41.7513 261.988 41.7513C263.39 41.7513 264.757 42.0248 266.056 42.5717C267.765 43.9388 270.26 46.0922 271.354 47.4252C271.354 47.4935 271.354 47.5277 271.388 47.5619C271.661 48.5189 272.687 51.2533 272.687 52.6205C272.687 53.9877 271.661 56.722 271.388 57.6791C271.354 57.7133 271.354 57.7474 271.354 57.8158C270.26 59.1488 267.765 61.3021 266.056 62.6693C264.757 63.2162 263.39 63.4896 261.988 63.4896C260.587 63.4896 259.22 63.2162 257.921 62.6693C255.87 61.3363 253.614 59.4906 253.238 58.8754C252.35 57.4056 251.324 55.1498 251.324 53.2015V52.0394ZM251.324 69.9154V67.2152C252.384 68.0013 253.375 68.7533 254.059 69.1293L254.571 69.4027C256.896 70.6332 259.391 71.0092 261.988 71.0092C264.688 71.0092 267.218 70.4623 269.576 69.3344L270.294 68.89C271.217 68.309 275.899 64.515 277.813 61.7123L278.429 60.2767C278.395 60.4476 278.326 60.5844 278.326 60.6185C278.36 60.516 278.429 60.3793 278.463 60.2084C279.283 57.7133 280.206 54.9789 280.206 52.6547V52.5863C280.206 50.2621 279.283 47.5277 278.463 45.0326C278.429 44.8617 278.36 44.725 278.326 44.6224C278.326 44.6566 278.395 44.7933 278.429 44.9642L277.813 43.5287C275.865 40.6918 271.183 37.0687 270.294 36.351L269.576 35.9066C267.218 34.7787 264.688 34.2318 261.988 34.2318C259.391 34.2318 256.896 34.6078 254.571 35.8383L254.059 36.1117C253.375 36.4877 252.384 37.2396 251.324 38.0258V14.2025H243.805V69.9154H251.324ZM287.555 52.6547V70.0179H295.074V52.0394C295.074 50.1254 296.1 47.8353 296.988 46.3998C297.364 45.7845 299.723 43.8363 301.773 42.5033C302.149 42.3324 302.389 42.1273 302.662 41.9564L302.799 42.059C303.141 42.3324 303.482 42.4349 303.858 42.6742C304.713 43.392 305.875 44.3832 306.695 45.2035L313.429 41.4437C311.891 39.4271 308.849 36.932 308.199 36.5219L307.481 36.0775C307.379 36.0433 307.071 35.8383 306.832 35.7015C305.772 35.0521 304.371 34.1293 302.56 34.1293C300.646 34.1293 299.278 35.0863 298.561 35.6332L298.253 35.8724L298.321 35.8383L297.809 36.1117C297.125 36.4877 296.134 37.2396 295.074 38.0258V35.2572H287.555V51.7318C287.555 52.0394 287.521 52.347 287.521 52.6547H287.555ZM325.323 47.9379C325.528 47.2201 325.768 46.7074 325.973 46.3656C327.032 44.6908 328.604 42.9135 329.151 42.64C330.143 42.1273 331.886 41.7172 333.492 41.7172C334.962 41.7172 336.09 42.059 337.56 42.7084C338.277 43.016 340.089 44.7592 341.183 46.8441C341.285 47.0834 341.388 47.4252 341.49 47.9379H325.323ZM317.12 52.6205C317.12 56.3802 318.043 60.2426 319.513 62.7035C320.88 64.9935 324.4 68.1381 325.118 68.7875L325.528 69.1635L326.041 69.4027C328.365 70.4965 330.86 70.975 333.492 70.975C336.192 70.975 341.49 69.6761 343.78 68.5824H343.814C345.626 67.6595 347.232 66.9076 348.702 66.1215L342.481 60.8236L340.567 61.7806C339.2 62.4642 334.962 63.4554 333.492 63.4554C332.125 63.4554 330.86 63.2162 329.664 62.7377C328.263 61.5414 326.417 59.6615 325.973 58.8412C325.562 58.1576 325.152 56.9271 324.913 55.4574H349.591V51.6976C349.591 48.7582 348.6 44.9642 348.019 43.6996C346.412 40.2474 343.438 37.1371 340.772 35.8724C338.277 34.6761 336.056 34.1976 333.492 34.1976C330.997 34.1976 328.229 34.8129 326.041 35.8041C323.307 37.0687 320.538 40.726 319.513 42.5033C318.043 44.9642 317.12 48.7924 317.12 52.5863V52.6205ZM362.784 52.6205C362.784 51.2533 363.81 48.5189 364.083 47.5619C364.117 47.5277 364.117 47.4935 364.117 47.4252C365.211 46.0922 367.706 43.9388 369.415 42.5717C370.714 42.0248 372.081 41.7513 373.482 41.7513C374.884 41.7513 376.251 42.0248 377.55 42.5717C379.635 43.973 381.822 45.7162 382.232 46.3656C383.189 47.8353 384.146 50.1254 384.146 52.0394V53.2015C384.146 55.1156 383.121 57.4056 382.232 58.8412C381.788 59.559 379.635 61.2679 377.55 62.6693C376.251 63.2162 374.884 63.4896 373.482 63.4896C372.081 63.4896 370.714 63.2162 369.415 62.6693C367.706 61.3021 365.211 59.1488 364.117 57.8158C364.117 57.7474 364.117 57.7133 364.083 57.6791C363.81 56.722 362.784 53.9877 362.784 52.6205ZM355.23 52.6547C355.23 54.9789 356.188 57.7133 357.008 60.2084C357.042 60.3793 357.11 60.516 357.145 60.6185C357.145 60.5844 357.076 60.4476 357.042 60.2767L357.657 61.7123C359.571 64.5492 364.186 68.309 365.143 68.89L365.895 69.3344C368.253 70.4623 370.782 71.0092 373.482 71.0092C376.08 71.0092 378.575 70.6332 380.899 69.4027L381.412 69.1293C382.096 68.7533 383.087 68.0013 384.146 67.2152V69.9154H391.666V53.5092C391.666 53.2357 391.7 52.9281 391.7 52.6547V52.6205V52.5863C391.7 52.3129 391.666 52.0052 391.666 51.7318V35.223H384.146V38.0258C383.087 37.2396 382.096 36.4877 381.412 36.1117L380.899 35.8383C378.575 34.6078 376.08 34.2318 373.482 34.2318C370.782 34.2318 368.253 34.7787 365.895 35.9066L365.143 36.351C364.254 37.0687 359.605 40.6576 357.657 43.5287L357.042 44.9642C357.076 44.7933 357.145 44.6566 357.145 44.6224C357.11 44.725 357.042 44.8617 357.008 45.0326C356.188 47.5277 355.23 50.2621 355.23 52.5863V52.6547ZM406.637 52.6547C406.637 51.2875 407.594 48.4847 407.97 47.5619C407.97 47.5277 408.004 47.4935 408.004 47.4594C409.098 46.0922 411.593 43.9388 413.302 42.5717C414.601 42.059 415.934 41.7855 417.335 41.7855C418.771 41.7855 420.138 42.059 421.402 42.6058C423.487 43.973 425.709 45.7504 426.119 46.3998C427.076 47.8353 428.033 50.057 428.033 52.0736V53.2357C428.033 55.1498 427.042 57.474 426.119 58.8754C425.709 59.5248 423.487 61.3363 421.402 62.7035C420.104 63.2162 418.736 63.4896 417.335 63.4896C415.934 63.4896 414.601 63.2162 413.302 62.7035C411.593 61.3363 409.098 59.183 408.004 57.8158C408.004 57.7816 407.97 57.7474 407.97 57.7133C407.594 56.7904 406.637 53.9877 406.637 52.6547ZM399.117 52.6547C399.117 54.9789 400.006 57.7474 400.86 60.2084C400.963 60.4476 400.997 60.516 400.997 60.6185C400.963 60.5844 400.963 60.5502 400.963 60.516C400.963 60.4135 400.929 60.3793 400.929 60.2767L401.544 61.7465C403.458 64.5834 408.141 68.2064 409.029 68.9242L409.747 69.3685C412.174 70.4965 414.703 71.0433 417.335 71.0433C419.933 71.0433 422.496 70.6674 424.786 69.4369L425.299 69.1635C425.982 68.7875 426.939 68.0355 428.033 67.2152V69.9496H435.553V14.2025H428.033V38.0599C426.939 37.2396 425.982 36.556 425.299 36.1459L424.786 35.8383C422.564 34.5052 419.933 34.266 417.335 34.266C414.669 34.266 412.14 34.8129 409.747 35.9066L409.029 36.351C408.141 37.0687 403.458 40.6918 401.544 43.5287L400.929 44.9984C400.929 44.8959 400.963 44.8617 400.963 44.7592C400.963 44.725 400.963 44.6908 400.997 44.6566C400.997 44.6908 400.963 44.8275 400.86 45.0668C400.006 47.5277 399.117 50.2963 399.117 52.6205V52.6547Z\\\" fill=\\\"#FCFCFC\\\" />\\n<path d=\\\"M85.3135 47.5619L88.0918 48.6938L88.3135 48.1496V47.5619H85.3135ZM85.3477 47.4594L83.005 45.5853L82.3477 46.407V47.4594H85.3477ZM90.6455 42.5717L89.544 39.7812L89.124 39.947L88.7714 40.229L90.6455 42.5717ZM98.7461 42.6058L100.391 40.0971L100.175 39.9551L99.9368 39.8523L98.7461 42.6058ZM103.463 46.3998L100.926 48.0018L100.946 48.0331L100.967 48.0639L103.463 46.3998ZM103.463 58.8754L100.957 57.2254L100.942 57.2492L100.926 57.2734L103.463 58.8754ZM98.7461 62.7035L99.8476 65.494L100.134 65.381L100.391 65.2122L98.7461 62.7035ZM90.6455 62.7035L88.7714 65.0461L89.124 65.3282L89.544 65.494L90.6455 62.7035ZM85.3477 57.8158H82.3477V58.8681L83.005 59.6899L85.3477 57.8158ZM85.3135 57.7133H88.3135V57.1256L88.0918 56.5814L85.3135 57.7133ZM78.2041 60.2084L75.3701 61.1924L75.4049 61.2926L75.4467 61.3901L78.2041 60.2084ZM78.3408 60.6185L76.2195 62.7399L81.3408 67.8612V60.6185H78.3408ZM78.2725 60.2767L81.0398 59.1183L75.2725 60.2767H78.2725ZM78.8877 61.7465L76.1204 62.9049L76.2349 63.1785L76.4008 63.4244L78.8877 61.7465ZM86.373 68.9242L84.488 71.258L84.6342 71.3761L84.794 71.475L86.373 68.9242ZM87.0908 69.3685L85.5118 71.9193L85.664 72.0136L85.8264 72.089L87.0908 69.3685ZM102.13 69.4369L100.718 66.7898L100.71 66.7942L102.13 69.4369ZM102.643 69.1635L104.054 71.8105L104.071 71.8014L104.088 71.7921L102.643 69.1635ZM105.377 67.2152H108.377V61.2152L103.577 64.8152L105.377 67.2152ZM105.377 69.9496H102.377V72.9496H105.377V69.9496ZM112.896 69.9496V72.9496H115.896V69.9496H112.896ZM112.896 14.2025H115.896V11.2025H112.896V14.2025ZM105.377 14.2025V11.2025H102.377V14.2025H105.377ZM105.377 38.0599L103.577 40.4599L108.377 44.0599V38.0599H105.377ZM87.0908 35.9066L85.8435 33.1782L85.6721 33.2566L85.5118 33.3558L87.0908 35.9066ZM86.373 36.351L84.794 33.8002L84.6342 33.8991L84.488 34.0171L86.373 36.351ZM78.8877 43.5287L76.4008 41.8508L76.2349 42.0967L76.1204 42.3703L78.8877 43.5287ZM78.2725 44.9984H75.2725L81.0398 46.1568L78.2725 44.9984ZM78.3408 44.6566H81.3408V37.414L76.2195 42.5353L78.3408 44.6566ZM78.2041 45.0668L75.4467 43.885L75.4049 43.9825L75.3701 44.0827L78.2041 45.0668ZM86.9805 52.6547C86.9805 52.6551 86.9805 52.639 86.9831 52.6039C86.9857 52.5694 86.9902 52.523 86.9978 52.4637C87.0133 52.3432 87.0386 52.192 87.0755 52.0105C87.15 51.6452 87.2586 51.2207 87.3872 50.7773C87.6476 49.8798 87.9474 49.0482 88.0918 48.6938L82.5352 46.43C82.3036 46.9984 81.9369 48.0296 81.6247 49.106C81.341 50.0841 80.9805 51.4978 80.9805 52.6547H86.9805ZM88.3135 47.5619C88.3135 47.8078 88.2827 48.0206 88.2456 48.1902C88.2089 48.358 88.1636 48.4942 88.1278 48.5896C88.0922 48.6847 88.0589 48.7578 88.0407 48.7967C88.0311 48.8172 88.0233 48.8332 88.019 48.8418C88.0152 48.8495 88.0121 48.8558 88.0138 48.8523C88.0142 48.8515 88.0195 48.841 88.0254 48.829C88.0317 48.8161 88.0416 48.7959 88.0532 48.7711C88.0755 48.7236 88.1125 48.6419 88.1513 48.5384C88.1903 48.4343 88.2383 48.2897 88.2769 48.1133C88.3158 47.9351 88.3477 47.7138 88.3477 47.4594H82.3477C82.3477 47.2134 82.3784 47.0006 82.4155 46.8311C82.4522 46.6632 82.4975 46.5271 82.5333 46.4316C82.569 46.3366 82.6022 46.2635 82.6205 46.2245C82.6301 46.204 82.6379 46.188 82.6421 46.1794C82.6459 46.1717 82.6491 46.1654 82.6473 46.169C82.6469 46.1697 82.6416 46.1803 82.6357 46.1922C82.6294 46.2051 82.6195 46.2254 82.6079 46.2501C82.5856 46.2977 82.5487 46.3793 82.5098 46.4829C82.4708 46.5869 82.4228 46.7316 82.3842 46.908C82.3453 47.0861 82.3135 47.3074 82.3135 47.5619H88.3135ZM87.6903 49.3334C88.5474 48.2621 90.7882 46.2994 92.5196 44.9143L88.7714 40.229C87.0848 41.5783 84.3355 43.9223 83.005 45.5853L87.6903 49.3334ZM91.747 45.3621C92.722 44.9773 93.6823 44.7855 94.6787 44.7855V38.7855C92.8724 38.7855 91.1667 39.1406 89.544 39.7812L91.747 45.3621ZM94.6787 44.7855C95.7273 44.7855 96.6869 44.9838 97.5554 45.3594L99.9368 39.8523C98.276 39.1341 96.5012 38.7855 94.6787 38.7855V44.7855ZM97.101 45.1146C98.0635 45.7457 99.0623 46.4753 99.8542 47.1112C100.251 47.43 100.571 47.7047 100.796 47.916C101.09 48.1907 101.049 48.1958 100.926 48.0018L105.999 44.7978C105.672 44.279 105.199 43.8184 104.896 43.5346C104.524 43.1872 104.081 42.8104 103.611 42.4327C102.668 41.6758 101.514 40.8332 100.391 40.0971L97.101 45.1146ZM100.967 48.0639C101.734 49.2142 102.377 50.8574 102.377 52.0736H108.377C108.377 49.2566 107.106 46.4564 105.959 44.7357L100.967 48.0639ZM102.377 52.0736V53.2357H108.377V52.0736H102.377ZM102.377 53.2357C102.377 54.3425 101.705 56.0895 100.957 57.2254L105.968 60.5253C107.066 58.8585 108.377 55.957 108.377 53.2357H102.377ZM100.926 57.2734C101.044 57.0875 101.077 57.0986 100.784 57.3762C100.557 57.5912 100.237 57.8703 99.8403 58.1923C99.0491 58.8354 98.0547 59.5694 97.101 60.1948L100.391 65.2122C101.522 64.4704 102.681 63.615 103.625 62.8483C104.096 62.4653 104.538 62.0843 104.908 61.7342C105.212 61.4468 105.677 60.9879 105.999 60.4773L100.926 57.2734ZM97.6446 59.913C96.679 60.2942 95.6846 60.4896 94.6787 60.4896V66.4896C96.4755 66.4896 98.2156 66.1382 99.8476 65.494L97.6446 59.913ZM94.6787 60.4896C93.6823 60.4896 92.722 60.2979 91.747 59.913L89.544 65.494C91.1667 66.1345 92.8724 66.4896 94.6787 66.4896V60.4896ZM92.5196 60.3609C90.7882 58.9758 88.5474 57.0131 87.6903 55.9417L83.005 59.6899C84.3355 61.3529 87.0848 63.6968 88.7714 65.0461L92.5196 60.3609ZM88.3477 57.8158C88.3477 57.5613 88.3158 57.34 88.2769 57.1619C88.2383 56.9855 88.1903 56.8408 88.1513 56.7368C88.1125 56.6332 88.0755 56.5516 88.0532 56.504C88.0416 56.4793 88.0317 56.459 88.0254 56.4461C88.0195 56.4342 88.0142 56.4236 88.0138 56.4229C88.0121 56.4193 88.0152 56.4256 88.019 56.4333C88.0233 56.4419 88.0311 56.4579 88.0407 56.4784C88.0589 56.5174 88.0922 56.5905 88.1278 56.6855C88.1636 56.781 88.2089 56.9171 88.2456 57.085C88.2827 57.2546 88.3135 57.4673 88.3135 57.7133H82.3135C82.3135 57.9677 82.3453 58.1891 82.3842 58.3672C82.4228 58.5436 82.4708 58.6882 82.5098 58.7923C82.5487 58.8958 82.5856 58.9775 82.6079 59.025C82.6195 59.0498 82.6294 59.07 82.6357 59.0829C82.6416 59.0949 82.6469 59.1055 82.6473 59.1062C82.6491 59.1097 82.6459 59.1034 82.6421 59.0957C82.6379 59.0871 82.6301 59.0711 82.6205 59.0506C82.6022 59.0117 82.569 58.9386 82.5333 58.8435C82.4975 58.7481 82.4522 58.6119 82.4155 58.4441C82.3784 58.2745 82.3477 58.0617 82.3477 57.8158H88.3477ZM88.0918 56.5814C87.9472 56.2265 87.647 55.3939 87.3863 54.4987C87.2574 54.0565 87.1487 53.6345 87.0743 53.2731C87.0374 53.0936 87.0123 52.9452 86.9971 52.8284C86.9811 52.7061 86.9805 52.6527 86.9805 52.6547H80.9805C80.9805 53.7992 81.344 55.2096 81.6257 56.1768C81.9374 57.247 82.3038 58.2772 82.5352 58.8451L88.0918 56.5814ZM73.4609 52.6547C73.4609 55.5664 74.5423 58.8084 75.3701 61.1924L81.0381 59.2243C80.1569 56.6865 79.4609 54.3913 79.4609 52.6547H73.4609ZM75.4467 61.3901C75.4819 61.4724 75.491 61.4927 75.5058 61.5279C75.5185 61.5578 75.5049 61.5276 75.4857 61.4737C75.4637 61.4122 75.4223 61.2875 75.3897 61.1209C75.3547 60.9422 75.3408 60.7721 75.3408 60.6185H81.3408C81.3408 60.4137 81.3226 60.1966 81.2781 59.9688C81.2358 59.7531 81.1795 59.577 81.1361 59.4557C81.0955 59.342 81.0542 59.2434 81.0316 59.1901C81.0112 59.1419 80.9775 59.064 80.9615 59.0266L75.4467 61.3901ZM80.4621 58.4972C80.8377 58.8728 81.0966 59.3406 81.2213 59.8397C81.3209 60.238 81.3066 60.5888 81.3066 60.516H75.3066C75.3066 60.5947 75.2526 61.773 76.2195 62.7399L80.4621 58.4972ZM81.3066 60.516C81.3066 60.4189 81.3026 60.322 81.2943 60.2253C81.286 60.1283 81.2742 60.0386 81.2605 59.9566C81.2348 59.8026 81.2016 59.6753 81.2 59.6688C81.1931 59.6411 81.2177 59.7343 81.237 59.8498C81.2474 59.9126 81.2566 59.982 81.2631 60.0571C81.2694 60.1319 81.2725 60.2053 81.2725 60.2767H75.2725C75.2725 60.3738 75.2765 60.4707 75.2848 60.5674C75.2931 60.6644 75.3049 60.7541 75.3186 60.8362C75.3443 60.9901 75.3775 61.1174 75.3791 61.124C75.386 61.1516 75.3614 61.0584 75.3421 60.943C75.3317 60.8802 75.3225 60.8107 75.316 60.7356C75.3097 60.6608 75.3066 60.5874 75.3066 60.516H81.3066ZM75.5051 61.4351L76.1204 62.9049L81.655 60.588L81.0398 59.1183L75.5051 61.4351ZM76.4008 63.4244C77.5853 65.1799 79.4836 67.0069 81.0234 68.3736C82.6121 69.7839 84.0848 70.9323 84.488 71.258L88.2581 66.5904C87.7726 66.1983 86.4596 65.1763 85.0064 63.8864C83.5042 62.553 82.1042 61.1499 81.3746 60.0686L76.4008 63.4244ZM84.794 71.475L85.5118 71.9193L88.6699 66.8177L87.9521 66.3734L84.794 71.475ZM85.8264 72.089C88.6543 73.4034 91.6157 74.0433 94.6787 74.0433V68.0433C92.478 68.0433 90.3808 67.5895 88.3553 66.648L85.8264 72.089ZM94.6787 74.0433C97.5399 74.0433 100.657 73.6342 103.55 72.0796L100.71 66.7942C99.0232 67.7005 97.0129 68.0433 94.6787 68.0433V74.0433ZM103.542 72.0839L104.054 71.8105L101.231 66.5164L100.718 66.7898L103.542 72.0839ZM104.088 71.7921C105.015 71.2823 106.235 70.3214 107.177 69.6152L103.577 64.8152C102.331 65.7496 101.637 66.2927 101.197 66.5348L104.088 71.7921ZM102.377 67.2152V69.9496H108.377V67.2152H102.377ZM105.377 72.9496H112.896V66.9496H105.377V72.9496ZM115.896 69.9496V14.2025H109.896V69.9496H115.896ZM112.896 11.2025H105.377V17.2025H112.896V11.2025ZM102.377 14.2025V38.0599H108.377V14.2025H102.377ZM107.177 35.6599C106.083 34.8393 105.016 34.0714 104.186 33.5734L101.099 38.7184C101.636 39.0407 102.484 39.6399 103.577 40.4599L107.177 35.6599ZM104.186 33.5734L103.673 33.2658L100.586 38.4107L101.099 38.7184L104.186 33.5734ZM103.673 33.2658C100.712 31.4888 97.373 31.266 94.6787 31.266V37.266C97.1798 37.266 99.1046 37.5217 100.586 38.4107L103.673 33.2658ZM94.6787 31.266C91.5882 31.266 88.633 31.903 85.8435 33.1782L88.3381 38.635C90.3338 37.7227 92.4372 37.266 94.6787 37.266V31.266ZM85.5118 33.3558L84.794 33.8002L87.9521 38.9017L88.6699 38.4574L85.5118 33.3558ZM84.488 34.0171C84.0848 34.3428 82.6121 35.4913 81.0234 36.9015C79.4836 38.2683 77.5853 40.0952 76.4008 41.8508L81.3746 45.2066C82.1042 44.1252 83.5042 42.7222 85.0064 41.3888C86.4596 40.0988 87.7726 39.0769 88.2581 38.6848L84.488 34.0171ZM76.1204 42.3703L75.5051 43.84L81.0398 46.1568L81.655 44.6871L76.1204 42.3703ZM81.2725 44.9984C81.2725 45.0698 81.2694 45.1432 81.2631 45.2181C81.2566 45.2931 81.2474 45.3626 81.237 45.4254C81.2177 45.5409 81.1931 45.634 81.2 45.6064C81.2016 45.5998 81.2348 45.4725 81.2605 45.3186C81.2742 45.2366 81.286 45.1468 81.2943 45.0498C81.3026 44.9531 81.3066 44.8562 81.3066 44.7592H75.3066C75.3066 44.6877 75.3097 44.6143 75.316 44.5395C75.3225 44.4644 75.3317 44.395 75.3421 44.3322C75.3614 44.2167 75.386 44.1236 75.3791 44.1512C75.3775 44.1577 75.3443 44.2851 75.3186 44.439C75.3049 44.521 75.2931 44.6108 75.2848 44.7077C75.2765 44.8045 75.2725 44.9014 75.2725 44.9984H81.2725ZM81.3066 44.7592C81.3066 44.6864 81.3209 45.0372 81.2213 45.4355C81.0966 45.9346 80.8377 46.4024 80.4621 46.7779L76.2195 42.5353C75.2526 43.5022 75.3066 44.6804 75.3066 44.7592H81.3066ZM75.3408 44.6566C75.3408 44.4461 75.3639 44.2849 75.3731 44.224C75.3852 44.1443 75.3983 44.0817 75.407 44.0429C75.4246 43.9651 75.4407 43.9118 75.4475 43.89C75.4621 43.8432 75.4658 43.8403 75.4467 43.885L80.9615 46.2485C81.0449 46.054 81.117 45.8631 81.1744 45.6796C81.2025 45.5894 81.2336 45.4806 81.2607 45.36C81.2725 45.3077 81.3408 45.0186 81.3408 44.6566H75.3408ZM75.3701 44.0827C74.5423 46.4668 73.4609 49.7087 73.4609 52.6205H79.4609C79.4609 50.8838 80.1569 48.5886 81.0381 46.0508L75.3701 44.0827ZM73.4609 52.6205V52.6547H79.4609V52.6205H73.4609ZM129.747 47.5619L127.626 45.4406L127.076 45.9903L126.862 46.7377L129.747 47.5619ZM129.781 47.4252L127.462 45.5222L126.781 46.3519V47.4252H129.781ZM135.079 42.5717L133.915 39.8067L133.531 39.9686L133.205 40.229L135.079 42.5717ZM143.214 42.5717L144.887 40.0818L144.646 39.9196L144.378 39.8067L143.214 42.5717ZM147.896 46.3656L145.36 47.9676L145.371 47.9852L145.382 48.0026L147.896 46.3656ZM143.214 62.6693L144.378 65.4342L144.646 65.3214L144.887 65.1592L143.214 62.6693ZM135.079 62.6693L133.205 65.0119L133.531 65.2724L133.915 65.4342L135.079 62.6693ZM129.781 57.8158H126.781V58.889L127.462 59.7187L129.781 57.8158ZM129.747 57.6791L126.862 58.5032L127.076 59.2507L127.626 59.8004L129.747 57.6791ZM122.672 60.2084L125.614 59.62L125.578 59.443L125.522 59.2714L122.672 60.2084ZM122.809 60.6185L119.963 61.5672L125.809 60.6185H122.809ZM122.706 60.2767L125.463 59.095L119.764 60.8651L122.706 60.2767ZM123.321 61.7123L120.564 62.894L120.676 63.1549L120.834 63.3902L123.321 61.7123ZM130.807 68.89L129.25 71.4544L129.265 71.4637L129.28 71.4728L130.807 68.89ZM131.559 69.3344L130.032 71.9171L130.146 71.984L130.264 72.0408L131.559 69.3344ZM146.563 69.4027L147.967 72.0541L147.975 72.0498L146.563 69.4027ZM147.076 69.1293L148.488 71.7763L148.505 71.7672L148.522 71.7579L147.076 69.1293ZM149.811 67.2152H152.811V61.2539L148.023 64.8059L149.811 67.2152ZM149.811 69.9154H146.811V72.9154H149.811V69.9154ZM157.33 69.9154V72.9154H160.33V69.9154H157.33ZM157.33 35.223H160.33V32.223H157.33V35.223ZM149.811 35.223V32.223H146.811V35.223H149.811ZM149.811 38.0258L148.023 40.4351L152.811 43.9871V38.0258H149.811ZM147.076 36.1117L148.522 33.483L148.505 33.4737L148.488 33.4646L147.076 36.1117ZM146.563 35.8383L147.975 33.1912L147.967 33.1869L146.563 35.8383ZM131.559 35.9066L130.264 33.2002L130.146 33.2569L130.032 33.3238L131.559 35.9066ZM130.807 36.351L129.28 33.7682L129.092 33.8796L128.922 34.0171L130.807 36.351ZM123.321 43.5287L120.839 41.8442L120.677 42.0824L120.564 42.3469L123.321 43.5287ZM122.706 44.9642L119.764 44.3759L125.463 46.146L122.706 44.9642ZM122.809 44.6224H125.809L119.963 43.6738L122.809 44.6224ZM122.672 45.0326L125.522 45.9696L125.578 45.798L125.614 45.6209L122.672 45.0326ZM131.448 52.6205C131.448 52.6266 131.448 52.5775 131.465 52.4591C131.48 52.3458 131.506 52.2007 131.545 52.0229C131.623 51.6639 131.736 51.245 131.87 50.7948C132.003 50.3481 132.146 49.906 132.281 49.4947C132.404 49.1165 132.544 48.6941 132.632 48.3861L126.862 46.7377C126.814 46.9082 126.723 47.1865 126.577 47.6328C126.442 48.0461 126.278 48.5526 126.12 49.08C125.844 50.0057 125.448 51.4351 125.448 52.6205H131.448ZM131.868 49.6832C132.317 49.2341 132.602 48.6783 132.719 48.0947C132.764 47.8671 132.775 47.6813 132.778 47.5905C132.782 47.505 132.781 47.4253 132.781 47.4252H126.781C126.781 47.4593 126.781 47.4094 126.783 47.3507C126.786 47.2866 126.794 47.1242 126.835 46.918C126.88 46.6947 126.962 46.421 127.115 46.1321C127.269 45.8429 127.452 45.6145 127.626 45.4406L131.868 49.6832ZM132.1 49.3281C132.969 48.2699 135.227 46.2949 136.953 44.9143L133.205 40.229C131.513 41.5828 128.781 43.9144 127.462 45.5222L132.1 49.3281ZM136.243 45.3366C137.171 44.9459 138.142 44.7513 139.146 44.7513V38.7513C137.348 38.7513 135.585 39.1037 133.915 39.8067L136.243 45.3366ZM139.146 44.7513C140.151 44.7513 141.122 44.9459 142.05 45.3366L144.378 39.8067C142.708 39.1037 140.945 38.7513 139.146 38.7513V44.7513ZM141.54 45.0615C142.517 45.7176 143.514 46.4526 144.301 47.0864C144.695 47.4045 145.011 47.6765 145.234 47.8854C145.524 48.1565 145.482 48.1603 145.36 47.9676L150.433 44.7636C150.106 44.2462 149.637 43.7886 149.336 43.5064C148.968 43.162 148.53 42.7889 148.066 42.4148C147.135 41.6643 145.996 40.8271 144.887 40.0818L141.54 45.0615ZM145.382 48.0026C146.166 49.2053 146.811 50.9229 146.811 52.0394H152.811C152.811 49.3279 151.541 46.4653 150.41 44.7286L145.382 48.0026ZM146.811 52.0394V53.2015H152.811V52.0394H146.811ZM146.811 53.2015C146.811 54.2786 146.134 55.9884 145.346 57.2621L150.447 60.4203C151.436 58.8229 152.811 55.9526 152.811 53.2015H146.811ZM145.346 57.2621C145.45 57.093 145.475 57.1123 145.201 57.3736C144.981 57.5825 144.672 57.8522 144.282 58.1677C143.506 58.7963 142.52 59.5213 141.54 60.1795L144.887 65.1592C145.993 64.4159 147.126 63.5858 148.059 62.8301C148.524 62.4535 148.966 62.0737 149.341 61.7166C149.66 61.4117 150.12 60.9482 150.447 60.4203L145.346 57.2621ZM142.05 59.9044C141.122 60.2951 140.151 60.4896 139.146 60.4896V66.4896C140.945 66.4896 142.708 66.1373 144.378 65.4342L142.05 59.9044ZM139.146 60.4896C138.142 60.4896 137.171 60.2951 136.243 59.9044L133.915 65.4342C135.585 66.1373 137.348 66.4896 139.146 66.4896V60.4896ZM136.953 60.3267C135.227 58.9461 132.969 56.9711 132.1 55.9128L127.462 59.7187C128.781 61.3265 131.513 63.6581 133.205 65.0119L136.953 60.3267ZM132.781 57.8158C132.781 57.8157 132.782 57.7359 132.778 57.6505C132.775 57.5597 132.764 57.3738 132.719 57.1463C132.602 56.5627 132.317 56.0068 131.868 55.5578L127.626 59.8004C127.452 59.6265 127.269 59.3981 127.115 59.1089C126.962 58.8199 126.88 58.5463 126.835 58.323C126.794 58.1168 126.786 57.9544 126.783 57.8903C126.781 57.8316 126.781 57.7817 126.781 57.8158H132.781ZM132.632 56.8549C132.544 56.5469 132.404 56.1245 132.281 55.7463C132.146 55.335 132.003 54.8929 131.87 54.4462C131.736 53.996 131.623 53.5771 131.545 53.218C131.506 53.0403 131.48 52.8952 131.465 52.7819C131.448 52.6634 131.448 52.6144 131.448 52.6205H125.448C125.448 53.8059 125.844 55.2353 126.12 56.161C126.278 56.6884 126.442 57.1948 126.577 57.6081C126.723 58.0545 126.814 58.3328 126.862 58.5032L132.632 56.8549ZM117.895 52.6547C117.895 55.5767 119.07 58.858 119.822 61.1453L125.522 59.2714C124.633 56.5685 123.895 54.3811 123.895 52.6547H117.895ZM119.73 60.7967C119.792 61.1049 119.878 61.3502 119.931 61.4925C119.955 61.5555 119.982 61.6238 119.985 61.6322C119.997 61.6612 119.981 61.6239 119.963 61.5672L125.655 59.6698C125.635 59.6112 125.617 59.5612 125.603 59.5251C125.59 59.4892 125.578 59.4577 125.57 59.4383C125.566 59.4284 125.562 59.4182 125.559 59.4117C125.556 59.4042 125.554 59.3992 125.553 59.3947C125.549 59.3858 125.549 59.384 125.549 59.3857C125.551 59.3892 125.56 59.4146 125.572 59.4535C125.584 59.4931 125.6 59.5497 125.614 59.62L119.73 60.7967ZM125.809 60.6185C125.809 60.3844 125.781 60.1982 125.763 60.0958C125.744 59.9843 125.722 59.894 125.706 59.8363C125.677 59.7254 125.647 59.6374 125.636 59.6037C125.622 59.5638 125.609 59.5282 125.605 59.5164C125.598 59.4969 125.597 59.495 125.595 59.4899C125.59 59.4754 125.622 59.5596 125.648 59.6884L119.764 60.8651C119.795 61.0194 119.831 61.1531 119.863 61.2595C119.895 61.3657 119.925 61.4532 119.945 61.5079C119.954 61.5328 119.963 61.5586 119.965 61.5645C119.97 61.578 119.966 61.5654 119.959 61.5458C119.955 61.5344 119.948 61.5137 119.94 61.4869C119.931 61.4609 119.919 61.4189 119.905 61.3658C119.891 61.3154 119.871 61.2317 119.852 61.126C119.843 61.0716 119.832 61.0027 119.824 60.9223C119.816 60.843 119.809 60.7396 119.809 60.6185H125.809ZM119.949 61.4585L120.564 62.894L126.079 60.5305L125.463 59.095L119.949 61.4585ZM120.834 63.3902C122.004 65.1238 123.862 66.9725 125.411 68.3726C126.939 69.7541 128.511 71.0056 129.25 71.4544L132.364 66.3257C132.364 66.3257 132.275 66.2689 132.074 66.1198C131.89 65.9836 131.654 65.8023 131.379 65.5813C130.827 65.1396 130.146 64.565 129.435 63.9216C127.959 62.5873 126.553 61.1377 125.808 60.0344L120.834 63.3902ZM129.28 71.4728L130.032 71.9171L133.085 66.7516L132.333 66.3072L129.28 71.4728ZM130.264 72.0408C133.052 73.374 136.027 74.0092 139.146 74.0092V68.0092C136.866 68.0092 134.782 67.5506 132.853 66.6279L130.264 72.0408ZM139.146 74.0092C142.026 74.0092 145.058 73.594 147.967 72.0541L145.16 66.7513C143.42 67.6723 141.462 68.0092 139.146 68.0092V74.0092ZM147.975 72.0498L148.488 71.7763L145.664 66.4822L145.152 66.7557L147.975 72.0498ZM148.522 71.7579C149.436 71.2554 150.653 70.3258 151.598 69.6245L148.023 64.8059C146.849 65.6769 146.084 66.2512 145.63 66.5006L148.522 71.7579ZM146.811 67.2152V69.9154H152.811V67.2152H146.811ZM149.811 72.9154H157.33V66.9154H149.811V72.9154ZM160.33 69.9154V53.5092H154.33V69.9154H160.33ZM160.33 53.5092C160.33 53.4766 160.332 53.4221 160.342 53.2581C160.349 53.1316 160.364 52.8956 160.364 52.6547H154.364C154.364 52.6872 154.362 52.7417 154.352 52.9057C154.345 53.0322 154.33 53.2683 154.33 53.5092H160.33ZM160.364 52.6547V52.6205H154.364V52.6547H160.364ZM160.364 52.6205V52.5863H154.364V52.6205H160.364ZM160.364 52.5863C160.364 52.3454 160.349 52.1094 160.342 51.9829C160.332 51.8188 160.33 51.7644 160.33 51.7318H154.33C154.33 51.9727 154.345 52.2087 154.352 52.3352C154.362 52.4993 154.364 52.5538 154.364 52.5863H160.364ZM160.33 51.7318V35.223H154.33V51.7318H160.33ZM157.33 32.223H149.811V38.223H157.33V32.223ZM146.811 35.223V38.0258H152.811V35.223H146.811ZM151.598 35.6165C150.653 34.9152 149.436 33.9856 148.522 33.483L145.63 38.7403C146.084 38.9898 146.849 39.564 148.023 40.4351L151.598 35.6165ZM148.488 33.4646L147.975 33.1912L145.152 38.4853L145.664 38.7588L148.488 33.4646ZM147.967 33.1869C145.058 31.6469 142.026 31.2318 139.146 31.2318V37.2318C141.462 37.2318 143.42 37.5686 145.16 38.4896L147.967 33.1869ZM139.146 31.2318C136.027 31.2318 133.052 31.867 130.264 33.2002L132.853 38.613C134.782 37.6904 136.866 37.2318 139.146 37.2318V31.2318ZM130.032 33.3238L129.28 33.7682L132.333 38.9337L133.085 38.4894L130.032 33.3238ZM128.922 34.0171C128.521 34.3408 127.055 35.4823 125.47 36.8884C123.931 38.254 122.038 40.0774 120.839 41.8442L125.804 45.2132C126.553 44.1089 127.958 42.7023 129.452 41.3763C130.901 40.0907 132.204 39.0789 132.692 38.6848L128.922 34.0171ZM120.564 42.3469L119.949 43.7825L125.463 46.146L126.079 44.7104L120.564 42.3469ZM125.648 45.5526C125.622 45.6814 125.59 45.7656 125.595 45.7511C125.597 45.746 125.598 45.744 125.605 45.7246C125.609 45.7128 125.622 45.6771 125.636 45.6373C125.647 45.6036 125.677 45.5156 125.706 45.4047C125.722 45.347 125.744 45.2566 125.763 45.1451C125.781 45.0428 125.809 44.8566 125.809 44.6224H119.809C119.809 44.5013 119.816 44.398 119.824 44.3187C119.832 44.2383 119.843 44.1693 119.852 44.1149C119.871 44.0093 119.891 43.9255 119.905 43.8751C119.919 43.8221 119.931 43.78 119.94 43.7541C119.948 43.7273 119.955 43.7066 119.959 43.6952C119.966 43.6756 119.97 43.663 119.965 43.6765C119.963 43.6824 119.954 43.7082 119.945 43.7331C119.925 43.7877 119.895 43.8753 119.863 43.9815C119.831 44.0878 119.795 44.2215 119.764 44.3759L125.648 45.5526ZM119.963 43.6738C119.981 43.6171 119.997 43.5797 119.985 43.6088C119.982 43.6172 119.955 43.6854 119.931 43.7485C119.878 43.8908 119.792 44.1361 119.73 44.4442L125.614 45.6209C125.6 45.6912 125.584 45.7478 125.572 45.7875C125.56 45.8264 125.551 45.8518 125.549 45.8553C125.549 45.8569 125.549 45.8551 125.553 45.8463C125.554 45.8418 125.556 45.8367 125.559 45.8293C125.562 45.8227 125.566 45.8126 125.57 45.8027C125.578 45.7832 125.59 45.7517 125.603 45.7159C125.617 45.6798 125.635 45.6298 125.655 45.5711L119.963 43.6738ZM119.822 44.0956C119.07 46.3829 117.895 49.6643 117.895 52.5863H123.895C123.895 50.8599 124.633 48.6725 125.522 45.9696L119.822 44.0956ZM117.895 52.5863V52.6547H123.895V52.5863H117.895ZM173.907 21.5853L171.805 23.726L172.681 24.5853H173.907V21.5853ZM177.564 21.5853V24.5853H178.791L179.666 23.726L177.564 21.5853ZM179.444 19.7396L181.546 21.8803L182.444 20.9984V19.7396H179.444ZM179.444 16.0824H182.444V14.8398L181.566 13.9611L179.444 16.0824ZM177.564 14.2025L179.686 12.0812L178.807 11.2025H177.564V14.2025ZM173.907 14.2025V11.2025H172.665L171.786 12.0812L173.907 14.2025ZM172.027 16.0824L169.906 13.9611L169.027 14.8398V16.0824H172.027ZM172.027 19.7396H169.027V20.9984L169.926 21.8803L172.027 19.7396ZM172.198 42.7426H175.198V39.7426H172.198V42.7426ZM172.198 69.9496H169.198V72.9496H172.198V69.9496ZM179.718 69.9496V72.9496H182.718V69.9496H179.718ZM179.718 35.223H182.718V32.223H179.718V35.223ZM166.388 35.223V32.223H163.388V35.223H166.388ZM166.388 42.7426H163.388V45.7426H166.388V42.7426ZM173.907 24.5853H177.564V18.5853H173.907V24.5853ZM179.666 23.726L181.546 21.8803L177.343 17.5989L175.463 19.4446L179.666 23.726ZM182.444 19.7396V16.0824H176.444V19.7396H182.444ZM181.566 13.9611L179.686 12.0812L175.443 16.3238L177.323 18.2037L181.566 13.9611ZM177.564 11.2025H173.907V17.2025H177.564V11.2025ZM171.786 12.0812L169.906 13.9611L174.149 18.2037L176.029 16.3238L171.786 12.0812ZM169.027 16.0824V19.7396H175.027V16.0824H169.027ZM169.926 21.8803L171.805 23.726L176.009 19.4446L174.129 17.5989L169.926 21.8803ZM169.198 42.7426V69.9496H175.198V42.7426H169.198ZM172.198 72.9496H179.718V66.9496H172.198V72.9496ZM182.718 69.9496V35.223H176.718V69.9496H182.718ZM179.718 32.223H166.388V38.223H179.718V32.223ZM163.388 35.223V42.7426H169.388V35.223H163.388ZM166.388 45.7426H172.198V39.7426H166.388V45.7426ZM193.185 21.722H196.185V18.722H193.185V21.722ZM193.185 70.0521H190.185V73.0521H193.185V70.0521ZM200.704 70.0521V73.0521H203.704V70.0521H200.704ZM200.704 14.2025H203.704V11.2025H200.704V14.2025ZM187.374 14.2025V11.2025H184.374V14.2025H187.374ZM187.374 21.722H184.374V24.722H187.374V21.722ZM190.185 21.722V70.0521H196.185V21.722H190.185ZM193.185 73.0521H200.704V67.0521H193.185V73.0521ZM203.704 70.0521V18.3724H197.704V70.0521H203.704ZM203.704 18.3724V14.2025H197.704V18.3724H203.704ZM200.704 11.2025H187.374V17.2025H200.704V11.2025ZM184.374 14.2025V21.722H190.374V14.2025H184.374ZM187.374 24.722H193.185V18.722H187.374V24.722ZM228.629 66.7709H231.629V63.7709H228.629V66.7709ZM227.774 73.4017L229.896 75.5231L230.397 75.0223L230.62 74.3504L227.774 73.4017ZM227.569 73.7435L225.448 71.6222L225.282 71.7887L225.143 71.979L227.569 73.7435ZM226.749 74.9056L228.749 77.1414L228.811 77.0858L228.87 77.027L226.749 74.9056ZM224.938 76.1019V79.1019H225.646L226.279 78.7852L224.938 76.1019ZM224.903 76.1019V73.1019H224.273L223.695 73.356L224.903 76.1019ZM219.981 76.2386L218.27 78.7028L218.608 78.9371L218.996 79.0721L219.981 76.2386ZM217.145 74.017L219.356 71.9898L217.71 70.1945L215.615 71.4361L217.145 74.017ZM210.685 77.8451L209.155 75.2642L206.553 76.8063L208.116 79.3957L210.685 77.8451ZM216.119 82.6986L217.663 80.1261L217.655 80.1213L216.119 82.6986ZM216.632 83.0062L218.198 80.4477L218.187 80.4407L218.175 80.4337L216.632 83.0062ZM228.048 82.9379L227.099 80.0918L226.919 80.1519L226.748 80.2341L228.048 82.9379ZM231.808 80.4427L233.807 82.6797L233.829 82.6593L233.852 82.6384L231.808 80.4427ZM233.961 77.7084L236.474 79.3472L236.479 79.3389L236.484 79.3306L233.961 77.7084ZM234.269 77.2299L236.792 78.8521L236.858 78.7494L236.916 78.6416L234.269 77.2299ZM234.542 76.7172L231.97 75.1737L231.931 75.2386L231.895 75.3054L234.542 76.7172ZM234.85 75.8969L232.026 74.8845L231.975 75.0247L231.939 75.1692L234.85 75.8969ZM236.148 35.223H239.148V32.223H236.148V35.223ZM228.629 35.223V32.223H225.629V35.223H228.629ZM228.629 59.2513V62.2513H231.629V59.2513H228.629ZM217.452 59.2513H214.452V62.2513H217.452V59.2513ZM217.452 35.223H220.452V32.223H217.452V35.223ZM209.933 35.223V32.223H206.933V35.223H209.933ZM209.933 66.7709H206.933V69.7709H209.933V66.7709ZM225.629 66.7709V70.223H231.629V66.7709H225.629ZM225.629 70.223C225.629 69.9679 225.676 69.9228 225.562 70.3739C225.463 70.7643 225.275 71.4126 224.928 72.4531L230.62 74.3504C230.991 73.2376 231.23 72.4332 231.38 71.841C231.514 71.3093 231.629 70.7515 231.629 70.223H225.629ZM225.653 71.2804L225.619 71.3146L229.862 75.5572L229.896 75.5231L225.653 71.2804ZM225.619 71.3146C225.486 71.447 225.366 71.5894 225.26 71.7403C225.153 71.891 225.068 72.0371 225.001 72.1712C224.935 72.303 224.889 72.4173 224.859 72.4979C224.832 72.5712 224.81 72.6365 224.809 72.641C224.802 72.6621 224.815 72.6225 224.832 72.5748C224.853 72.5199 224.889 72.4312 224.942 72.325C224.996 72.2165 225.065 72.0961 225.154 71.971C225.243 71.8457 225.341 71.729 225.448 71.6222L229.691 75.8649C229.823 75.7324 229.943 75.59 230.05 75.4391C230.157 75.2884 230.241 75.1423 230.308 75.0083C230.374 74.8764 230.42 74.7621 230.45 74.6815C230.478 74.6082 230.499 74.543 230.501 74.5384C230.508 74.5173 230.495 74.557 230.477 74.6046C230.457 74.6596 230.421 74.7483 230.368 74.8545C230.314 74.9629 230.244 75.0834 230.156 75.2084C230.067 75.3337 229.968 75.4504 229.862 75.5572L225.619 71.3146ZM225.143 71.979C225.033 72.1301 224.932 72.281 224.854 72.4003C224.814 72.4615 224.774 72.5227 224.739 72.5756C224.703 72.6309 224.672 72.6783 224.643 72.7233C224.581 72.8173 224.544 72.8698 224.523 72.8988C224.493 72.9398 224.532 72.8803 224.628 72.7843L228.87 77.027C229.086 76.8113 229.253 76.5938 229.357 76.4532C229.469 76.3006 229.571 76.1481 229.65 76.0284C229.846 75.7315 229.912 75.6226 229.996 75.508L225.143 71.979ZM224.749 72.6699C224.605 72.7987 224.381 72.9595 224.121 73.121C223.871 73.276 223.662 73.3857 223.596 73.4186L226.279 78.7852C226.618 78.616 227.796 77.9947 228.749 77.1414L224.749 72.6699ZM224.938 73.1019H224.903V79.1019H224.938V73.1019ZM223.695 73.356C223.165 73.5892 222.721 73.683 222.271 73.683V79.683C223.668 79.683 224.933 79.3666 226.112 78.8479L223.695 73.356ZM222.271 73.683C221.946 73.683 221.581 73.6189 220.967 73.4052L218.996 79.0721C219.954 79.4053 221.025 79.683 222.271 79.683V73.683ZM221.693 73.7745C221.119 73.3764 220.55 72.9568 220.09 72.5974C219.86 72.4175 219.669 72.2624 219.526 72.1397C219.363 71.9998 219.326 71.9567 219.356 71.9898L214.933 76.0441C215.311 76.4567 215.901 76.9384 216.395 77.325C216.952 77.7602 217.613 78.2465 218.27 78.7028L221.693 73.7745ZM215.615 71.4361L209.155 75.2642L212.214 80.426L218.674 76.5978L215.615 71.4361ZM208.116 79.3957C208.915 80.7192 210.166 81.9436 211.267 82.8788C212.41 83.8496 213.631 84.7084 214.584 85.2759L217.655 80.1213C217.001 79.7318 216.051 79.0696 215.152 78.3058C214.211 77.5064 213.547 76.7825 213.253 76.2945L208.116 79.3957ZM214.576 85.2711L215.088 85.5787L218.175 80.4337L217.663 80.1261L214.576 85.2711ZM215.065 85.5648C217.498 87.0542 220.248 87.2025 222.271 87.2025V81.2025C220.399 81.2025 219.115 81.009 218.198 80.4477L215.065 85.5648ZM222.271 87.2025C224.766 87.2025 227.13 86.7079 229.348 85.6416L226.748 80.2341C225.411 80.8768 223.947 81.2025 222.271 81.2025V87.2025ZM228.997 85.7839C229.51 85.6128 230.306 85.1804 231.014 84.7446C231.82 84.2484 232.836 83.5469 233.807 82.6797L229.809 78.2058C229.173 78.7741 228.463 79.269 227.868 79.6357C227.574 79.8167 227.324 79.9565 227.146 80.0497C226.898 80.1797 226.92 80.1517 227.099 80.0918L228.997 85.7839ZM233.852 82.6384C235.153 81.427 235.989 80.0906 236.474 79.3472L231.448 76.0696C230.908 76.8984 230.445 77.6128 229.763 78.2471L233.852 82.6384ZM236.484 79.3306L236.792 78.8521L231.745 75.6076L231.437 76.0861L236.484 79.3306ZM236.916 78.6416L237.189 78.1289L231.895 75.3054L231.621 75.8181L236.916 78.6416ZM237.114 78.2607C237.317 77.9227 237.464 77.5351 237.492 77.4638C237.507 77.4255 237.521 77.3901 237.531 77.3656C237.536 77.3524 237.539 77.3431 237.542 77.3351C237.545 77.327 237.547 77.3242 237.547 77.3244C237.546 77.3247 237.546 77.3269 237.544 77.3306C237.543 77.3341 237.54 77.3406 237.536 77.3492C237.532 77.3585 237.513 77.4049 237.484 77.4659C237.47 77.4953 237.44 77.5585 237.396 77.6368C237.377 77.6696 237.252 77.9001 237.033 78.149C236.951 78.2424 236.63 78.6081 236.079 78.8727C235.773 79.0197 235.271 79.1958 234.634 79.1647C233.946 79.1311 233.324 78.8647 232.845 78.4603C232.044 77.7833 231.875 76.9309 231.843 76.7765C231.785 76.493 231.781 76.2651 231.781 76.1703H237.781C237.781 76.0744 237.778 75.8457 237.719 75.5615C237.687 75.4065 237.518 74.5537 236.717 73.8765C236.238 73.4719 235.616 73.2055 234.927 73.1718C234.291 73.1408 233.788 73.3168 233.482 73.464C232.93 73.7287 232.609 74.0949 232.526 74.1889C232.306 74.4389 232.18 74.6713 232.16 74.7068C232.114 74.7879 232.082 74.8545 232.066 74.888C232.013 74.999 231.973 75.102 231.97 75.1102C231.957 75.1434 231.943 75.1797 231.935 75.2009C231.925 75.2271 231.916 75.2483 231.908 75.2699C231.842 75.4378 231.869 75.3407 231.97 75.1737L237.114 78.2607ZM237.781 76.1703C237.781 76.2884 237.774 76.386 237.768 76.4533C237.761 76.5226 237.753 76.5803 237.746 76.6222C237.733 76.7031 237.72 76.7645 237.713 76.7932C237.701 76.8467 237.691 76.8818 237.697 76.8614C237.699 76.8554 237.733 76.7341 237.76 76.6245L231.939 75.1692C231.932 75.1963 231.932 75.1946 231.908 75.2827C231.901 75.3092 231.88 75.3849 231.861 75.4716C231.851 75.5168 231.834 75.5929 231.819 75.6864C231.807 75.7652 231.781 75.9436 231.781 76.1703H237.781ZM237.674 76.9092C238.315 75.1208 239.148 72.6181 239.148 70.223H233.148C233.148 71.451 232.683 73.0499 232.026 74.8845L237.674 76.9092ZM239.148 70.223V35.223H233.148V70.223H239.148ZM236.148 32.223H228.629V38.223H236.148V32.223ZM225.629 35.223V59.2513H231.629V35.223H225.629ZM228.629 56.2513H217.452V62.2513H228.629V56.2513ZM220.452 59.2513V35.223H214.452V59.2513H220.452ZM217.452 32.223H209.933V38.223H217.452V32.223ZM206.933 35.223V66.7709H212.933V35.223H206.933ZM209.933 69.7709H228.629V63.7709H209.933V69.7709ZM253.238 46.3998L255.789 47.9788L255.812 47.9412L255.835 47.9029L253.238 46.3998ZM257.921 42.5717L256.757 39.8067L256.521 39.9061L256.305 40.0441L257.921 42.5717ZM266.056 42.5717L267.93 40.229L267.604 39.9686L267.22 39.8067L266.056 42.5717ZM271.354 47.4252H274.354V46.3519L273.673 45.5222L271.354 47.4252ZM271.388 47.5619L274.272 46.7377L274.059 45.9903L273.509 45.4406L271.388 47.5619ZM271.388 57.6791L273.509 59.8004L274.059 59.2507L274.272 58.5032L271.388 57.6791ZM271.354 57.8158L273.673 59.7187L274.354 58.889V57.8158H271.354ZM266.056 62.6693L267.22 65.4342L267.604 65.2724L267.93 65.0119L266.056 62.6693ZM257.921 62.6693L256.286 65.1846L256.51 65.3304L256.757 65.4342L257.921 62.6693ZM253.238 58.8754L250.671 60.4276L250.675 60.4337L250.678 60.4397L253.238 58.8754ZM251.324 69.9154V72.9154H254.324V69.9154H251.324ZM251.324 67.2152L253.112 64.8059L248.324 61.2539V67.2152H251.324ZM254.059 69.1293L252.613 71.7579L252.63 71.7672L252.647 71.7763L254.059 69.1293ZM254.571 69.4027L253.16 72.0498L253.168 72.0541L254.571 69.4027ZM269.576 69.3344L270.871 72.0408L271.017 71.9707L271.155 71.8851L269.576 69.3344ZM270.294 68.89L271.873 71.4408L271.883 71.4348L271.892 71.4287L270.294 68.89ZM277.813 61.7123L280.291 63.4042L280.456 63.1627L280.571 62.894L277.813 61.7123ZM278.429 60.2767L281.37 60.8651L275.671 59.095L278.429 60.2767ZM278.326 60.6185H275.326L281.172 61.5672L278.326 60.6185ZM278.463 60.2084L275.613 59.2714L275.557 59.443L275.521 59.62L278.463 60.2084ZM278.463 45.0326L275.521 45.6209L275.557 45.798L275.613 45.9696L278.463 45.0326ZM278.326 44.6224L281.172 43.6738L275.326 44.6224H278.326ZM278.429 44.9642L275.671 46.146L281.37 44.3759L278.429 44.9642ZM277.813 43.5287L280.571 42.3469L280.454 42.0746L280.286 41.8304L277.813 43.5287ZM270.294 36.351L272.179 34.0171L272.033 33.8991L271.873 33.8002L270.294 36.351ZM269.576 35.9066L271.155 33.3558L271.017 33.2703L270.871 33.2002L269.576 35.9066ZM254.571 35.8383L253.168 33.1869L253.16 33.1912L254.571 35.8383ZM254.059 36.1117L252.647 33.4646L252.63 33.4737L252.613 33.483L254.059 36.1117ZM251.324 38.0258H248.324V43.9871L253.112 40.4351L251.324 38.0258ZM251.324 14.2025H254.324V11.2025H251.324V14.2025ZM243.805 14.2025V11.2025H240.805V14.2025H243.805ZM243.805 69.9154H240.805V72.9154H243.805V69.9154ZM254.324 52.0394C254.324 50.9623 255.001 49.2526 255.789 47.9788L250.687 44.8207C249.699 46.418 248.324 49.2884 248.324 52.0394H254.324ZM255.835 47.9029C255.7 48.1358 255.633 48.1509 255.925 47.8675C256.142 47.657 256.454 47.3801 256.843 47.0598C257.623 46.4196 258.603 45.6962 259.537 45.0992L256.305 40.0441C255.154 40.7801 253.981 41.6461 253.034 42.4243C252.561 42.8133 252.116 43.2029 251.746 43.5627C251.45 43.8497 250.965 44.339 250.642 44.8967L255.835 47.9029ZM259.085 45.3366C260.013 44.9459 260.984 44.7513 261.988 44.7513V38.7513C260.19 38.7513 258.427 39.1037 256.757 39.8067L259.085 45.3366ZM261.988 44.7513C262.992 44.7513 263.964 44.9459 264.891 45.3366L267.22 39.8067C265.55 39.1037 263.787 38.7513 261.988 38.7513V44.7513ZM264.182 44.9143C265.907 46.2949 268.166 48.2699 269.034 49.3281L273.673 45.5222C272.354 43.9144 269.622 41.5828 267.93 40.229L264.182 44.9143ZM268.354 47.4252C268.354 47.4253 268.353 47.505 268.356 47.5905C268.36 47.6813 268.371 47.8671 268.416 48.0947C268.533 48.6783 268.817 49.2341 269.266 49.6832L273.509 45.4406C273.683 45.6145 273.866 45.8429 274.019 46.1321C274.172 46.421 274.255 46.6947 274.3 46.918C274.341 47.1242 274.349 47.2866 274.352 47.3507C274.354 47.4094 274.354 47.4593 274.354 47.4252H268.354ZM268.503 48.3861C268.591 48.6941 268.731 49.1165 268.854 49.4947C268.988 49.906 269.132 50.3481 269.265 50.7948C269.399 51.245 269.512 51.6639 269.59 52.0229C269.629 52.2007 269.654 52.3458 269.67 52.4591C269.686 52.5775 269.687 52.6266 269.687 52.6205H275.687C275.687 51.4351 275.291 50.0057 275.015 49.08C274.857 48.5526 274.693 48.0461 274.558 47.6328C274.412 47.1865 274.321 46.9082 274.272 46.7377L268.503 48.3861ZM269.687 52.6205C269.687 52.6144 269.686 52.6634 269.67 52.7819C269.654 52.8952 269.629 53.0403 269.59 53.218C269.512 53.5771 269.399 53.996 269.265 54.4462C269.132 54.8929 268.988 55.335 268.854 55.7463C268.731 56.1245 268.591 56.5469 268.503 56.8549L274.272 58.5032C274.321 58.3328 274.412 58.0545 274.558 57.6081C274.693 57.1948 274.857 56.6884 275.015 56.161C275.291 55.2353 275.687 53.8059 275.687 52.6205H269.687ZM269.266 55.5578C268.817 56.0068 268.533 56.5627 268.416 57.1463C268.371 57.3738 268.36 57.5597 268.356 57.6505C268.353 57.7359 268.354 57.8157 268.354 57.8158H274.354C274.354 57.7817 274.354 57.8316 274.352 57.8903C274.349 57.9544 274.341 58.1168 274.3 58.323C274.255 58.5463 274.172 58.8199 274.019 59.1089C273.866 59.3981 273.683 59.6265 273.509 59.8004L269.266 55.5578ZM269.034 55.9128C268.166 56.9711 265.907 58.9461 264.182 60.3267L267.93 65.0119C269.622 63.6581 272.354 61.3265 273.673 59.7187L269.034 55.9128ZM264.891 59.9044C263.964 60.2951 262.992 60.4896 261.988 60.4896V66.4896C263.787 66.4896 265.55 66.1373 267.22 65.4342L264.891 59.9044ZM261.988 60.4896C260.984 60.4896 260.013 60.2951 259.085 59.9044L256.757 65.4342C258.427 66.1373 260.19 66.4896 261.988 66.4896V60.4896ZM259.556 60.154C258.627 59.5502 257.636 58.8191 256.844 58.1752C256.447 57.853 256.127 57.5739 255.902 57.3609C255.597 57.0729 255.66 57.0856 255.798 57.311L250.678 60.4397C251.004 60.9727 251.49 61.4468 251.779 61.7197C252.146 62.0674 252.588 62.4484 253.059 62.8312C254.002 63.5971 255.164 64.4554 256.286 65.1846L259.556 60.154ZM255.805 57.3231C254.995 55.9828 254.324 54.3094 254.324 53.2015H248.324C248.324 55.9902 249.704 58.8284 250.671 60.4276L255.805 57.3231ZM254.324 53.2015V52.0394H248.324V53.2015H254.324ZM254.324 69.9154V67.2152H248.324V69.9154H254.324ZM249.537 69.6245C250.482 70.3258 251.699 71.2554 252.613 71.7579L255.504 66.5006C255.051 66.2512 254.286 65.6769 253.112 64.8059L249.537 69.6245ZM252.647 71.7763L253.16 72.0498L255.983 66.7557L255.47 66.4822L252.647 71.7763ZM253.168 72.0541C256.076 73.594 259.109 74.0092 261.988 74.0092V68.0092C259.673 68.0092 257.715 67.6723 255.975 66.7513L253.168 72.0541ZM261.988 74.0092C265.108 74.0092 268.083 73.374 270.871 72.0408L268.282 66.6279C266.353 67.5506 264.269 68.0092 261.988 68.0092V74.0092ZM271.155 71.8851L271.873 71.4408L268.715 66.3392L267.997 66.7836L271.155 71.8851ZM271.892 71.4287C272.582 70.9946 274.141 69.7563 275.688 68.3651C277.243 66.9666 279.12 65.1188 280.291 63.4042L275.336 60.0204C274.593 61.1085 273.171 62.559 271.676 63.9035C270.956 64.5509 270.267 65.1314 269.71 65.5792C269.431 65.8031 269.192 65.9882 269.005 66.1284C268.912 66.1985 268.836 66.2535 268.778 66.2944C268.716 66.3381 268.691 66.3539 268.696 66.3513L271.892 71.4287ZM280.571 62.894L281.186 61.4585L275.671 59.095L275.056 60.5305L280.571 62.894ZM275.487 59.6884C275.513 59.5596 275.545 59.4754 275.539 59.4899C275.538 59.495 275.537 59.4969 275.53 59.5164C275.525 59.5282 275.513 59.5638 275.499 59.6037C275.487 59.6374 275.458 59.7254 275.428 59.8363C275.413 59.894 275.391 59.9843 275.371 60.0958C275.354 60.1982 275.326 60.3844 275.326 60.6185H281.326C281.326 60.7396 281.319 60.843 281.311 60.9223C281.302 61.0027 281.292 61.0716 281.282 61.126C281.264 61.2317 281.243 61.3154 281.23 61.3658C281.216 61.4189 281.203 61.4609 281.195 61.4869C281.187 61.5137 281.18 61.5344 281.176 61.5458C281.169 61.5654 281.165 61.578 281.169 61.5645C281.172 61.5586 281.181 61.5328 281.19 61.5079C281.209 61.4532 281.24 61.3657 281.272 61.2595C281.304 61.1531 281.34 61.0194 281.37 60.8651L275.487 59.6884ZM281.172 61.5672C281.153 61.6239 281.138 61.6612 281.149 61.6322C281.153 61.6238 281.18 61.5555 281.204 61.4925C281.257 61.3502 281.343 61.1049 281.405 60.7967L275.521 59.62C275.535 59.5497 275.551 59.4931 275.563 59.4535C275.575 59.4146 275.584 59.3892 275.586 59.3857C275.586 59.384 275.586 59.3858 275.582 59.3947C275.58 59.3992 275.578 59.4042 275.575 59.4117C275.573 59.4182 275.569 59.4284 275.565 59.4383C275.557 59.4577 275.545 59.4892 275.531 59.5251C275.518 59.5612 275.5 59.6112 275.48 59.6698L281.172 61.5672ZM281.313 61.1453C282.077 58.8196 283.206 55.567 283.206 52.6547H277.206C277.206 54.3908 276.489 56.6069 275.613 59.2714L281.313 61.1453ZM283.206 52.6547V52.5863H277.206V52.6547H283.206ZM283.206 52.5863C283.206 49.674 282.077 46.4213 281.313 44.0956L275.613 45.9696C276.489 48.6341 277.206 50.8502 277.206 52.5863H283.206ZM281.405 44.4442C281.343 44.1361 281.257 43.8908 281.204 43.7485C281.18 43.6854 281.153 43.6172 281.149 43.6088C281.138 43.5797 281.153 43.6171 281.172 43.6738L275.48 45.5711C275.5 45.6298 275.518 45.6798 275.531 45.7159C275.545 45.7517 275.557 45.7832 275.565 45.8027C275.569 45.8126 275.573 45.8227 275.575 45.8293C275.578 45.8367 275.58 45.8418 275.582 45.8463C275.586 45.8551 275.586 45.8569 275.586 45.8553C275.584 45.8518 275.575 45.8264 275.563 45.7875C275.551 45.7478 275.535 45.6912 275.521 45.6209L281.405 44.4442ZM275.326 44.6224C275.326 44.8566 275.354 45.0428 275.371 45.1451C275.391 45.2566 275.413 45.347 275.428 45.4047C275.458 45.5156 275.487 45.6036 275.499 45.6373C275.513 45.6771 275.525 45.7128 275.53 45.7246C275.537 45.744 275.538 45.746 275.539 45.7511C275.545 45.7656 275.513 45.6814 275.487 45.5526L281.37 44.3759C281.34 44.2215 281.304 44.0878 281.272 43.9815C281.24 43.8753 281.209 43.7877 281.19 43.7331C281.181 43.7082 281.172 43.6824 281.169 43.6765C281.165 43.663 281.169 43.6756 281.176 43.6952C281.18 43.7066 281.187 43.7273 281.195 43.7541C281.203 43.78 281.216 43.8221 281.23 43.8751C281.243 43.9255 281.264 44.0093 281.282 44.1149C281.292 44.1693 281.302 44.2383 281.311 44.3187C281.319 44.398 281.326 44.5013 281.326 44.6224H275.326ZM281.186 43.7825L280.571 42.3469L275.056 44.7104L275.671 46.146L281.186 43.7825ZM280.286 41.8304C279.089 40.0863 277.189 38.2659 275.645 36.8988C274.053 35.4902 272.582 34.3426 272.179 34.0171L268.409 38.6848C268.895 39.0771 270.209 40.0999 271.668 41.3915C273.174 42.7246 274.59 44.1341 275.34 45.227L280.286 41.8304ZM271.873 33.8002L271.155 33.3558L267.997 38.4574L268.715 38.9017L271.873 33.8002ZM270.871 33.2002C268.083 31.867 265.108 31.2318 261.988 31.2318V37.2318C264.269 37.2318 266.353 37.6904 268.282 38.613L270.871 33.2002ZM261.988 31.2318C259.109 31.2318 256.076 31.6469 253.168 33.1869L255.975 38.4896C257.715 37.5686 259.673 37.2318 261.988 37.2318V31.2318ZM253.16 33.1912L252.647 33.4646L255.47 38.7588L255.983 38.4853L253.16 33.1912ZM252.613 33.483C251.699 33.9856 250.482 34.9152 249.537 35.6165L253.112 40.4351C254.286 39.564 255.051 38.9898 255.504 38.7403L252.613 33.483ZM254.324 38.0258V14.2025H248.324V38.0258H254.324ZM251.324 11.2025H243.805V17.2025H251.324V11.2025ZM240.805 14.2025V69.9154H246.805V14.2025H240.805ZM243.805 72.9154H251.324V66.9154H243.805V72.9154ZM287.555 52.6547H290.555V49.6547H287.555V52.6547ZM287.555 70.0179H284.555V73.0179H287.555V70.0179ZM295.074 70.0179V73.0179H298.074V70.0179H295.074ZM296.988 46.3998L299.539 47.9788L299.544 47.9715L299.548 47.9641L296.988 46.3998ZM301.773 42.5033L300.532 39.7722L300.327 39.8653L300.138 39.988L301.773 42.5033ZM302.662 41.9564L304.462 39.5564L302.816 38.3222L301.072 39.4124L302.662 41.9564ZM302.799 42.059L304.673 39.7164L304.636 39.6871L304.599 39.659L302.799 42.059ZM303.858 42.6742L305.788 40.3771L305.636 40.2496L305.469 40.1432L303.858 42.6742ZM306.695 45.2035L304.574 47.3248L306.178 48.9285L308.158 47.8228L306.695 45.2035ZM313.429 41.4437L314.891 44.0631L317.913 42.3759L315.814 39.6244L313.429 41.4437ZM308.199 36.5219L309.801 33.9854L309.79 33.9782L309.778 33.9711L308.199 36.5219ZM307.481 36.0775L309.061 33.5267L308.763 33.3423L308.43 33.2315L307.481 36.0775ZM306.832 35.7015L305.264 38.2593L305.304 38.2834L305.344 38.3063L306.832 35.7015ZM298.561 35.6332L296.742 33.2469L296.731 33.2559L296.719 33.2651L298.561 35.6332ZM298.253 35.8724L296.411 33.5044L299.595 38.5557L298.253 35.8724ZM298.321 35.8383L299.733 38.4853L296.98 33.155L298.321 35.8383ZM297.809 36.1117L296.397 33.4646L296.38 33.4737L296.363 33.483L297.809 36.1117ZM295.074 38.0258H292.074V43.9871L296.862 40.4351L295.074 38.0258ZM295.074 35.2572H298.074V32.2572H295.074V35.2572ZM287.555 35.2572V32.2572H284.555V35.2572H287.555ZM287.521 52.6547H284.521V55.6547H287.521V52.6547ZM284.555 52.6547V70.0179H290.555V52.6547H284.555ZM287.555 73.0179H295.074V67.0179H287.555V73.0179ZM298.074 70.0179V52.0394H292.074V70.0179H298.074ZM298.074 52.0394C298.074 50.9623 298.751 49.2526 299.539 47.9788L294.437 44.8207C293.449 46.418 292.074 49.2884 292.074 52.0394H298.074ZM299.548 47.9641C299.409 48.1919 299.348 48.2013 299.67 47.8964C299.907 47.6715 300.243 47.378 300.653 47.0426C301.473 46.3709 302.487 45.6172 303.408 45.0186L300.138 39.988C299.009 40.7224 297.818 41.6093 296.853 42.3988C296.37 42.794 295.917 43.1862 295.543 43.5413C295.252 43.8164 294.756 44.3001 294.428 44.8354L299.548 47.9641ZM303.015 45.2344C303.403 45.058 303.704 44.87 303.92 44.726C304.232 44.5184 304.141 44.5701 304.252 44.5004L301.072 39.4124C300.946 39.4915 300.835 39.5671 300.76 39.6184C300.671 39.6797 300.638 39.7029 300.592 39.7337C300.526 39.7777 300.52 39.7777 300.532 39.7722L303.015 45.2344ZM300.862 44.3564L300.999 44.459L304.599 39.659L304.462 39.5564L300.862 44.3564ZM300.925 44.4016C301.337 44.7315 301.725 44.9354 301.948 45.0495C302.214 45.1855 302.213 45.1829 302.248 45.2052L305.469 40.1432C305.283 40.025 305.115 39.932 304.98 39.8612C304.876 39.8061 304.714 39.7251 304.683 39.7093C304.556 39.644 304.602 39.6599 304.673 39.7164L300.925 44.4016ZM301.929 44.9713C302.793 45.6973 303.859 46.6097 304.574 47.3248L308.817 43.0822C307.891 42.1567 306.633 41.0866 305.788 40.3771L301.929 44.9713ZM308.158 47.8228L314.891 44.0631L311.966 38.8244L305.233 42.5842L308.158 47.8228ZM315.814 39.6244C314.873 38.3905 313.562 37.114 312.484 36.1468C311.437 35.2084 310.355 34.3351 309.801 33.9854L306.597 39.0583C306.575 39.0441 306.617 39.0702 306.746 39.1671C306.86 39.2533 307.011 39.3703 307.19 39.5153C307.55 39.8052 307.999 40.1847 308.478 40.6139C309.467 41.501 310.446 42.4804 311.043 43.2631L315.814 39.6244ZM309.778 33.9711L309.061 33.5267L305.902 38.6283L306.62 39.0726L309.778 33.9711ZM308.43 33.2315C308.525 33.2631 308.599 33.2934 308.644 33.3128C308.692 33.3332 308.729 33.3508 308.752 33.3624C308.798 33.3847 308.827 33.4007 308.83 33.4025C308.836 33.4058 308.833 33.4046 308.82 33.3966C308.807 33.3889 308.789 33.3783 308.765 33.3636C308.741 33.3488 308.714 33.3327 308.682 33.3131C308.652 33.2944 308.616 33.2723 308.579 33.2501C308.508 33.2069 308.416 33.1516 308.32 33.0968L305.344 38.3063C305.417 38.3484 305.48 38.3885 305.651 38.4923C305.716 38.5318 305.812 38.5895 305.911 38.6446C305.961 38.6727 306.033 38.7113 306.115 38.7519C306.183 38.785 306.336 38.858 306.533 38.9236L308.43 33.2315ZM308.4 33.1437C307.482 32.5816 305.359 31.1293 302.56 31.1293V37.1293C303.383 37.1293 304.062 37.5227 305.264 38.2593L308.4 33.1437ZM302.56 31.1293C299.617 31.1293 297.578 32.6099 296.742 33.2469L300.379 38.0195C300.978 37.5627 301.674 37.1293 302.56 37.1293V31.1293ZM296.719 33.2651L296.411 33.5044L300.095 38.2405L300.402 38.0012L296.719 33.2651ZM299.595 38.5557L299.663 38.5215L296.98 33.155L296.911 33.1892L299.595 38.5557ZM296.91 33.1912L296.397 33.4646L299.22 38.7588L299.733 38.4853L296.91 33.1912ZM296.363 33.483C295.449 33.9856 294.232 34.9152 293.287 35.6165L296.862 40.4351C298.036 39.564 298.801 38.9898 299.254 38.7403L296.363 33.483ZM298.074 38.0258V35.2572H292.074V38.0258H298.074ZM295.074 32.2572H287.555V38.2572H295.074V32.2572ZM284.555 35.2572V51.7318H290.555V35.2572H284.555ZM284.555 51.7318C284.555 51.7884 284.552 51.859 284.542 52.0268C284.534 52.1667 284.521 52.4037 284.521 52.6547H290.521C290.521 52.598 290.524 52.5274 290.533 52.3596C290.541 52.2198 290.555 51.9828 290.555 51.7318H284.555ZM287.521 55.6547H287.555V49.6547H287.521V55.6547ZM325.323 47.9379L322.439 47.1137L321.346 50.9379H325.323V47.9379ZM325.973 46.3656L323.437 44.7617L323.418 44.7917L323.4 44.8221L325.973 46.3656ZM329.151 42.64L330.493 45.3233L330.511 45.3141L330.53 45.3047L329.151 42.64ZM337.56 42.7084L336.347 45.4524L336.362 45.4592L336.378 45.4658L337.56 42.7084ZM341.183 46.8441L343.94 45.6624L343.894 45.5544L343.839 45.4505L341.183 46.8441ZM341.49 47.9379V50.9379H345.15L344.432 47.3495L341.49 47.9379ZM319.513 62.7035L322.089 61.1657L322.088 61.1653L319.513 62.7035ZM325.118 68.7875L327.145 66.576L327.138 66.5694L327.131 66.5629L325.118 68.7875ZM325.528 69.1635L323.501 71.3749L323.841 71.6868L324.26 71.882L325.528 69.1635ZM326.041 69.4027L327.318 66.6882L327.31 66.6842L326.041 69.4027ZM343.78 68.5824V65.5824H343.101L342.487 65.8753L343.78 68.5824ZM343.814 68.5824V71.5824H344.535L345.176 71.2555L343.814 68.5824ZM348.702 66.1215L350.117 68.7668L353.998 66.691L350.647 63.8375L348.702 66.1215ZM342.481 60.8236L344.427 58.5396L342.915 57.2526L341.14 58.1403L342.481 60.8236ZM329.664 62.7377L327.716 65.0194L328.092 65.3398L328.55 65.5231L329.664 62.7377ZM325.973 58.8412L328.611 57.4123L328.579 57.3543L328.545 57.2977L325.973 58.8412ZM324.913 55.4574V52.4574H321.385L321.952 55.9394L324.913 55.4574ZM349.591 55.4574V58.4574H352.591V55.4574H349.591ZM348.019 43.6996L350.745 42.4471L350.742 42.4405L350.738 42.4339L348.019 43.6996ZM340.772 35.8724L339.475 38.5776L339.487 38.5829L340.772 35.8724ZM326.041 35.8041L324.803 33.0715L324.792 33.0763L324.782 33.0812L326.041 35.8041ZM319.513 42.5033L322.088 44.0415L322.1 44.0221L322.111 44.0025L319.513 42.5033ZM328.208 48.762C328.348 48.271 328.488 48.004 328.545 47.9091L323.4 44.8221C323.047 45.4108 322.709 46.1692 322.439 47.1137L328.208 48.762ZM328.508 47.9695C328.947 47.2755 329.513 46.531 330.025 45.9378C330.28 45.6422 330.496 45.4148 330.651 45.266C330.729 45.1913 330.77 45.1569 330.777 45.1511C330.808 45.1266 330.701 45.2192 330.493 45.3233L327.81 39.9567C327.226 40.2484 326.74 40.7033 326.495 40.9379C326.168 41.2517 325.822 41.6245 325.483 42.0168C324.808 42.7993 324.058 43.7809 323.437 44.7617L328.508 47.9695ZM330.53 45.3047C331.015 45.0537 332.266 44.7172 333.492 44.7172V38.7172C331.505 38.7172 329.27 39.2009 327.773 39.9754L330.53 45.3047ZM333.492 44.7172C334.386 44.7172 335.082 44.8933 336.347 45.4524L338.772 39.9643C337.098 39.2247 335.538 38.7172 333.492 38.7172V44.7172ZM336.378 45.4658C336.152 45.3692 336.133 45.3123 336.357 45.4983C336.528 45.6406 336.762 45.8588 337.027 46.1462C337.565 46.7285 338.125 47.4731 338.526 48.2378L343.839 45.4505C343.147 44.1302 342.253 42.9608 341.433 42.0733C341.019 41.6258 340.597 41.2203 340.192 40.884C339.84 40.5915 339.326 40.2013 338.741 39.9509L336.378 45.4658ZM338.425 48.0259C338.416 48.0052 338.427 48.0271 338.452 48.1126C338.476 48.1977 338.509 48.3303 338.548 48.5262L344.432 47.3495C344.309 46.7331 344.157 46.1677 343.94 45.6624L338.425 48.0259ZM341.49 44.9379H325.323V50.9379H341.49V44.9379ZM314.12 52.6205C314.12 56.7639 315.118 61.1966 316.937 64.2417L322.088 61.1653C320.967 59.2885 320.12 55.9966 320.12 52.6205H314.12ZM316.937 64.2413C317.821 65.723 319.27 67.3014 320.426 68.4702C321.633 69.691 322.751 70.6917 323.105 71.0121L327.131 66.5629C326.767 66.2339 325.766 65.3376 324.692 64.2513C323.566 63.1129 322.571 61.974 322.089 61.1657L316.937 64.2413ZM323.091 70.9989L323.501 71.3749L327.555 66.952L327.145 66.576L323.091 70.9989ZM324.26 71.882L324.772 72.1213L327.31 66.6842L326.797 66.4449L324.26 71.882ZM324.764 72.1172C327.547 73.4268 330.489 73.975 333.492 73.975V67.975C331.231 67.975 329.184 67.5661 327.318 66.6883L324.764 72.1172ZM333.492 73.975C335.194 73.975 337.463 73.5861 339.481 73.1081C341.507 72.6284 343.644 71.9721 345.073 71.2895L342.487 65.8753C341.626 66.2865 339.97 66.8265 338.099 67.2696C336.22 67.7145 334.49 67.975 333.492 67.975V73.975ZM343.78 71.5824H343.814V65.5824H343.78V71.5824ZM345.176 71.2555C346.844 70.406 348.636 69.5588 350.117 68.7668L347.287 63.4761C345.828 64.2564 344.408 64.9131 342.453 65.9093L345.176 71.2555ZM350.647 63.8375L344.427 58.5396L340.536 63.1076L346.757 68.4054L350.647 63.8375ZM341.14 58.1403L339.226 59.0974L341.909 64.4639L343.823 63.5069L341.14 58.1403ZM339.226 59.0974C338.888 59.2664 337.796 59.6208 336.38 59.9544C334.962 60.2886 333.841 60.4554 333.492 60.4554V66.4554C334.613 66.4554 336.346 66.1267 337.756 65.7944C339.169 65.4615 340.88 64.9785 341.909 64.4639L339.226 59.0974ZM333.492 60.4554C332.488 60.4554 331.603 60.2823 330.778 59.9522L328.55 65.5231C330.117 66.1501 331.762 66.4554 333.492 66.4554V60.4554ZM331.612 60.456C330.993 59.9276 330.254 59.228 329.625 58.5724C329.312 58.2457 329.047 57.9516 328.849 57.7124C328.621 57.4377 328.577 57.3499 328.611 57.4123L323.335 60.27C323.777 61.0857 324.63 62.0317 325.294 62.7244C326.05 63.513 326.934 64.3514 327.716 65.0194L331.612 60.456ZM328.545 57.2977C328.5 57.2231 328.379 56.98 328.237 56.5336C328.102 56.1087 327.972 55.5778 327.874 54.9754L321.952 55.9394C322.221 57.5945 322.715 59.243 323.4 60.3847L328.545 57.2977ZM324.913 58.4574H349.591V52.4574H324.913V58.4574ZM352.591 55.4574V51.6976H346.591V55.4574H352.591ZM352.591 51.6976C352.591 49.9356 352.3 48.0233 351.954 46.4333C351.616 44.8798 351.169 43.3701 350.745 42.4471L345.293 44.9521C345.45 45.2938 345.788 46.3133 346.091 47.7078C346.386 49.0658 346.591 50.5202 346.591 51.6976H352.591ZM350.738 42.4339C348.893 38.4691 345.467 34.7791 342.058 33.1619L339.487 38.5829C341.41 39.4951 343.931 42.0258 345.299 44.9653L350.738 42.4339ZM342.069 33.1673C339.167 31.7757 336.502 31.1976 333.492 31.1976V37.1976C335.61 37.1976 337.388 37.5766 339.475 38.5776L342.069 33.1673ZM333.492 31.1976C330.565 31.1976 327.374 31.9063 324.803 33.0715L327.279 38.5366C329.083 37.7194 331.43 37.1976 333.492 37.1976V31.1976ZM324.782 33.0812C322.863 33.9688 321.161 35.557 319.904 36.9574C318.609 38.3997 317.536 39.9266 316.914 41.0041L322.111 44.0025C322.515 43.3027 323.339 42.1122 324.368 40.9655C325.436 39.7767 326.485 38.904 327.3 38.527L324.782 33.0812ZM316.937 40.9651C315.119 44.0085 314.12 48.4062 314.12 52.5863H320.12C320.12 49.1786 320.966 45.92 322.088 44.0415L316.937 40.9651ZM314.12 52.5863V52.6205H320.12V52.5863H314.12ZM364.083 47.5619L361.962 45.4406L361.412 45.9903L361.198 46.7377L364.083 47.5619ZM364.117 47.4252L361.798 45.5222L361.117 46.3519V47.4252H364.117ZM369.415 42.5717L368.251 39.8067L367.867 39.9686L367.541 40.229L369.415 42.5717ZM377.55 42.5717L379.223 40.0818L378.982 39.9196L378.714 39.8067L377.55 42.5717ZM382.232 46.3656L379.696 47.9676L379.707 47.9852L379.718 48.0026L382.232 46.3656ZM377.55 62.6693L378.714 65.4342L378.982 65.3214L379.223 65.1592L377.55 62.6693ZM369.415 62.6693L367.541 65.0119L367.867 65.2724L368.251 65.4342L369.415 62.6693ZM364.117 57.8158H361.117V58.889L361.798 59.7187L364.117 57.8158ZM364.083 57.6791L361.198 58.5032L361.412 59.2507L361.962 59.8004L364.083 57.6791ZM357.008 60.2084L359.95 59.62L359.914 59.443L359.858 59.2714L357.008 60.2084ZM357.145 60.6185L354.298 61.5672L360.145 60.6185H357.145ZM357.042 60.2767L359.799 59.095L354.1 60.8651L357.042 60.2767ZM357.657 61.7123L354.9 62.894L355.012 63.1549L355.17 63.3902L357.657 61.7123ZM365.143 68.89L363.586 71.4544L363.601 71.4637L363.616 71.4728L365.143 68.89ZM365.895 69.3344L364.368 71.9171L364.482 71.984L364.6 72.0408L365.895 69.3344ZM380.899 69.4027L382.303 72.0541L382.311 72.0498L380.899 69.4027ZM381.412 69.1293L382.824 71.7763L382.841 71.7672L382.858 71.7579L381.412 69.1293ZM384.146 67.2152H387.146V61.2539L382.359 64.8059L384.146 67.2152ZM384.146 69.9154H381.146V72.9154H384.146V69.9154ZM391.666 69.9154V72.9154H394.666V69.9154H391.666ZM391.666 35.223H394.666V32.223H391.666V35.223ZM384.146 35.223V32.223H381.146V35.223H384.146ZM384.146 38.0258L382.359 40.4351L387.146 43.9871V38.0258H384.146ZM381.412 36.1117L382.858 33.483L382.841 33.4737L382.824 33.4646L381.412 36.1117ZM380.899 35.8383L382.311 33.1912L382.303 33.1869L380.899 35.8383ZM365.895 35.9066L364.6 33.2002L364.482 33.2569L364.368 33.3238L365.895 35.9066ZM365.143 36.351L363.616 33.7682L363.428 33.8796L363.258 34.0171L365.143 36.351ZM357.657 43.5287L355.175 41.8442L355.013 42.0824L354.9 42.3469L357.657 43.5287ZM357.042 44.9642L354.1 44.3759L359.799 46.146L357.042 44.9642ZM357.145 44.6224H360.145L354.298 43.6738L357.145 44.6224ZM357.008 45.0326L359.858 45.9696L359.914 45.798L359.95 45.6209L357.008 45.0326ZM365.784 52.6205C365.784 52.6266 365.784 52.5775 365.801 52.4591C365.816 52.3458 365.842 52.2007 365.881 52.0229C365.958 51.6639 366.072 51.245 366.206 50.7948C366.339 50.3481 366.482 49.906 366.617 49.4947C366.74 49.1165 366.88 48.6941 366.968 48.3861L361.198 46.7377C361.15 46.9082 361.059 47.1865 360.913 47.6328C360.778 48.0461 360.613 48.5526 360.456 49.08C360.18 50.0057 359.784 51.4351 359.784 52.6205H365.784ZM366.204 49.6832C366.653 49.2341 366.938 48.6783 367.055 48.0947C367.1 47.8671 367.111 47.6813 367.114 47.5905C367.118 47.505 367.117 47.4253 367.117 47.4252H361.117C361.117 47.4593 361.117 47.4094 361.119 47.3507C361.122 47.2866 361.13 47.1242 361.171 46.918C361.216 46.6947 361.298 46.421 361.451 46.1321C361.604 45.8429 361.788 45.6145 361.962 45.4406L366.204 49.6832ZM366.436 49.3281C367.305 48.2699 369.563 46.2949 371.289 44.9143L367.541 40.229C365.849 41.5828 363.117 43.9144 361.798 45.5222L366.436 49.3281ZM370.579 45.3366C371.507 44.9459 372.478 44.7513 373.482 44.7513V38.7513C371.684 38.7513 369.921 39.1037 368.251 39.8067L370.579 45.3366ZM373.482 44.7513C374.487 44.7513 375.458 44.9459 376.386 45.3366L378.714 39.8067C377.044 39.1037 375.281 38.7513 373.482 38.7513V44.7513ZM375.876 45.0615C376.852 45.7176 377.85 46.4526 378.637 47.0864C379.031 47.4045 379.347 47.6765 379.57 47.8854C379.859 48.1565 379.818 48.1603 379.696 47.9676L384.769 44.7636C384.442 44.2462 383.973 43.7886 383.672 43.5064C383.304 43.162 382.866 42.7889 382.402 42.4148C381.471 41.6643 380.332 40.8271 379.223 40.0818L375.876 45.0615ZM379.718 48.0026C380.502 49.2053 381.146 50.9229 381.146 52.0394H387.146C387.146 49.3279 385.877 46.4653 384.746 44.7286L379.718 48.0026ZM381.146 52.0394V53.2015H387.146V52.0394H381.146ZM381.146 53.2015C381.146 54.2786 380.47 55.9884 379.682 57.2621L384.783 60.4203C385.772 58.8229 387.146 55.9526 387.146 53.2015H381.146ZM379.682 57.2621C379.786 57.093 379.811 57.1123 379.537 57.3736C379.317 57.5825 379.008 57.8522 378.618 58.1677C377.842 58.7963 376.855 59.5213 375.876 60.1795L379.223 65.1592C380.329 64.4159 381.462 63.5858 382.395 62.8301C382.86 62.4535 383.302 62.0737 383.676 61.7166C383.996 61.4117 384.456 60.9482 384.783 60.4203L379.682 57.2621ZM376.386 59.9044C375.458 60.2951 374.487 60.4896 373.482 60.4896V66.4896C375.281 66.4896 377.044 66.1373 378.714 65.4342L376.386 59.9044ZM373.482 60.4896C372.478 60.4896 371.507 60.2951 370.579 59.9044L368.251 65.4342C369.921 66.1373 371.684 66.4896 373.482 66.4896V60.4896ZM371.289 60.3267C369.563 58.9461 367.305 56.9711 366.436 55.9128L361.798 59.7187C363.117 61.3265 365.849 63.6581 367.541 65.0119L371.289 60.3267ZM367.117 57.8158C367.117 57.8157 367.118 57.7359 367.114 57.6505C367.111 57.5597 367.1 57.3738 367.055 57.1463C366.938 56.5627 366.653 56.0068 366.204 55.5578L361.962 59.8004C361.788 59.6265 361.604 59.3981 361.451 59.1089C361.298 58.8199 361.216 58.5463 361.171 58.323C361.13 58.1168 361.122 57.9544 361.119 57.8903C361.117 57.8316 361.117 57.7817 361.117 57.8158H367.117ZM366.968 56.8549C366.88 56.5469 366.74 56.1245 366.617 55.7463C366.482 55.335 366.339 54.8929 366.206 54.4462C366.072 53.996 365.958 53.5771 365.881 53.218C365.842 53.0403 365.816 52.8952 365.801 52.7819C365.784 52.6634 365.784 52.6144 365.784 52.6205H359.784C359.784 53.8059 360.18 55.2353 360.456 56.161C360.613 56.6884 360.778 57.1948 360.913 57.6081C361.059 58.0545 361.15 58.3328 361.198 58.5032L366.968 56.8549ZM352.23 52.6547C352.23 55.5767 353.406 58.858 354.158 61.1453L359.858 59.2714C358.969 56.5685 358.23 54.3811 358.23 52.6547H352.23ZM354.066 60.7967C354.128 61.1049 354.214 61.3502 354.267 61.4925C354.291 61.5555 354.318 61.6238 354.321 61.6322C354.333 61.6612 354.317 61.6239 354.298 61.5672L359.991 59.6698C359.971 59.6112 359.953 59.5612 359.939 59.5251C359.926 59.4892 359.913 59.4577 359.906 59.4383C359.902 59.4284 359.898 59.4182 359.895 59.4117C359.892 59.4042 359.89 59.3992 359.889 59.3947C359.885 59.3858 359.885 59.384 359.885 59.3857C359.886 59.3892 359.896 59.4146 359.908 59.4535C359.92 59.4931 359.935 59.5497 359.95 59.62L354.066 60.7967ZM360.145 60.6185C360.145 60.3844 360.117 60.1982 360.099 60.0958C360.08 59.9843 360.058 59.894 360.042 59.8363C360.013 59.7254 359.983 59.6374 359.972 59.6037C359.958 59.5638 359.945 59.5282 359.941 59.5164C359.934 59.4969 359.933 59.495 359.931 59.4899C359.926 59.4754 359.958 59.5596 359.984 59.6884L354.1 60.8651C354.131 61.0194 354.167 61.1531 354.199 61.2595C354.231 61.3657 354.261 61.4532 354.281 61.5079C354.29 61.5328 354.299 61.5586 354.301 61.5645C354.306 61.578 354.302 61.5654 354.295 61.5458C354.291 61.5344 354.284 61.5137 354.276 61.4869C354.267 61.4609 354.255 61.4189 354.241 61.3658C354.227 61.3154 354.207 61.2317 354.188 61.126C354.179 61.0716 354.168 61.0027 354.16 60.9223C354.152 60.843 354.145 60.7396 354.145 60.6185H360.145ZM354.285 61.4585L354.9 62.894L360.415 60.5305L359.799 59.095L354.285 61.4585ZM355.17 63.3902C356.34 65.1238 358.198 66.9725 359.747 68.3726C361.275 69.7541 362.847 71.0056 363.586 71.4544L366.7 66.3257C366.7 66.3257 366.611 66.2689 366.41 66.1198C366.225 65.9836 365.99 65.8023 365.715 65.5813C365.163 65.1396 364.482 64.565 363.771 63.9216C362.295 62.5873 360.889 61.1377 360.144 60.0344L355.17 63.3902ZM363.616 71.4728L364.368 71.9171L367.421 66.7516L366.669 66.3072L363.616 71.4728ZM364.6 72.0408C367.388 73.374 370.363 74.0092 373.482 74.0092V68.0092C371.202 68.0092 369.118 67.5506 367.189 66.6279L364.6 72.0408ZM373.482 74.0092C376.362 74.0092 379.394 73.594 382.303 72.0541L379.496 66.7513C377.756 67.6723 375.798 68.0092 373.482 68.0092V74.0092ZM382.311 72.0498L382.824 71.7763L380 66.4822L379.488 66.7557L382.311 72.0498ZM382.858 71.7579C383.772 71.2554 384.989 70.3258 385.934 69.6245L382.359 64.8059C381.185 65.6769 380.42 66.2512 379.966 66.5006L382.858 71.7579ZM381.146 67.2152V69.9154H387.146V67.2152H381.146ZM384.146 72.9154H391.666V66.9154H384.146V72.9154ZM394.666 69.9154V53.5092H388.666V69.9154H394.666ZM394.666 53.5092C394.666 53.4766 394.668 53.4221 394.678 53.2581C394.685 53.1316 394.7 52.8956 394.7 52.6547H388.7C388.7 52.6872 388.698 52.7417 388.688 52.9057C388.681 53.0322 388.666 53.2683 388.666 53.5092H394.666ZM394.7 52.6547V52.6205H388.7V52.6547H394.7ZM394.7 52.6205V52.5863H388.7V52.6205H394.7ZM394.7 52.5863C394.7 52.3454 394.685 52.1094 394.678 51.9829C394.668 51.8188 394.666 51.7644 394.666 51.7318H388.666C388.666 51.9727 388.681 52.2087 388.688 52.3352C388.698 52.4993 388.7 52.5538 388.7 52.5863H394.7ZM394.666 51.7318V35.223H388.666V51.7318H394.666ZM391.666 32.223H384.146V38.223H391.666V32.223ZM381.146 35.223V38.0258H387.146V35.223H381.146ZM385.934 35.6165C384.989 34.9152 383.772 33.9856 382.858 33.483L379.966 38.7403C380.42 38.9898 381.185 39.564 382.359 40.4351L385.934 35.6165ZM382.824 33.4646L382.311 33.1912L379.488 38.4853L380 38.7588L382.824 33.4646ZM382.303 33.1869C379.394 31.6469 376.362 31.2318 373.482 31.2318V37.2318C375.798 37.2318 377.756 37.5686 379.496 38.4896L382.303 33.1869ZM373.482 31.2318C370.363 31.2318 367.388 31.867 364.6 33.2002L367.189 38.613C369.118 37.6904 371.202 37.2318 373.482 37.2318V31.2318ZM364.368 33.3238L363.616 33.7682L366.669 38.9337L367.421 38.4894L364.368 33.3238ZM363.258 34.0171C362.857 34.3408 361.391 35.4823 359.806 36.8884C358.267 38.254 356.374 40.0774 355.175 41.8442L360.14 45.2132C360.889 44.1089 362.294 42.7023 363.788 41.3763C365.237 40.0907 366.54 39.0789 367.028 38.6848L363.258 34.0171ZM354.9 42.3469L354.285 43.7825L359.799 46.146L360.415 44.7104L354.9 42.3469ZM359.984 45.5526C359.958 45.6814 359.926 45.7656 359.931 45.7511C359.933 45.746 359.934 45.744 359.941 45.7246C359.945 45.7128 359.958 45.6771 359.972 45.6373C359.983 45.6036 360.013 45.5156 360.042 45.4047C360.058 45.347 360.08 45.2566 360.099 45.1451C360.117 45.0428 360.145 44.8566 360.145 44.6224H354.145C354.145 44.5013 354.152 44.398 354.16 44.3187C354.168 44.2383 354.179 44.1693 354.188 44.1149C354.207 44.0093 354.227 43.9255 354.241 43.8751C354.255 43.8221 354.267 43.78 354.276 43.7541C354.284 43.7273 354.291 43.7066 354.295 43.6952C354.302 43.6756 354.306 43.663 354.301 43.6765C354.299 43.6824 354.29 43.7082 354.281 43.7331C354.261 43.7877 354.231 43.8753 354.199 43.9815C354.167 44.0878 354.131 44.2215 354.1 44.3759L359.984 45.5526ZM354.298 43.6738C354.317 43.6171 354.333 43.5797 354.321 43.6088C354.318 43.6172 354.291 43.6854 354.267 43.7485C354.214 43.8908 354.128 44.1361 354.066 44.4442L359.95 45.6209C359.935 45.6912 359.92 45.7478 359.908 45.7875C359.896 45.8264 359.886 45.8518 359.885 45.8553C359.885 45.8569 359.885 45.8551 359.889 45.8463C359.89 45.8418 359.892 45.8367 359.895 45.8293C359.898 45.8227 359.902 45.8126 359.906 45.8027C359.913 45.7832 359.926 45.7517 359.939 45.7159C359.953 45.6798 359.971 45.6298 359.991 45.5711L354.298 43.6738ZM354.158 44.0956C353.406 46.3829 352.23 49.6643 352.23 52.5863H358.23C358.23 50.8599 358.969 48.6725 359.858 45.9696L354.158 44.0956ZM352.23 52.5863V52.6547H358.23V52.5863H352.23ZM407.97 47.5619L410.748 48.6938L410.97 48.1496V47.5619H407.97ZM408.004 47.4594L405.661 45.5853L405.004 46.407V47.4594H408.004ZM413.302 42.5717L412.2 39.7812L411.78 39.947L411.428 40.229L413.302 42.5717ZM421.402 42.6058L423.047 40.0971L422.831 39.9551L422.593 39.8523L421.402 42.6058ZM426.119 46.3998L423.583 48.0018L423.602 48.0331L423.623 48.0639L426.119 46.3998ZM426.119 58.8754L423.614 57.2254L423.598 57.2492L423.583 57.2734L426.119 58.8754ZM421.402 62.7035L422.504 65.494L422.79 65.381L423.047 65.2122L421.402 62.7035ZM413.302 62.7035L411.428 65.0461L411.78 65.3282L412.2 65.494L413.302 62.7035ZM408.004 57.8158H405.004V58.8681L405.661 59.6899L408.004 57.8158ZM407.97 57.7133H410.97V57.1256L410.748 56.5814L407.97 57.7133ZM400.86 60.2084L398.026 61.1924L398.061 61.2926L398.103 61.3901L400.86 60.2084ZM400.997 60.6185L398.876 62.7399L403.997 67.8612V60.6185H400.997ZM400.929 60.2767L403.696 59.1183L397.929 60.2767H400.929ZM401.544 61.7465L398.777 62.9049L398.891 63.1785L399.057 63.4244L401.544 61.7465ZM409.029 68.9242L407.144 71.258L407.29 71.3761L407.45 71.475L409.029 68.9242ZM409.747 69.3685L408.168 71.9193L408.32 72.0136L408.483 72.089L409.747 69.3685ZM424.786 69.4369L423.374 66.7898L423.366 66.7942L424.786 69.4369ZM425.299 69.1635L426.711 71.8105L426.728 71.8014L426.745 71.7921L425.299 69.1635ZM428.033 67.2152H431.033V61.2152L426.233 64.8152L428.033 67.2152ZM428.033 69.9496H425.033V72.9496H428.033V69.9496ZM435.553 69.9496V72.9496H438.553V69.9496H435.553ZM435.553 14.2025H438.553V11.2025H435.553V14.2025ZM428.033 14.2025V11.2025H425.033V14.2025H428.033ZM428.033 38.0599L426.233 40.4599L431.033 44.0599V38.0599H428.033ZM409.747 35.9066L408.5 33.1782L408.328 33.2566L408.168 33.3558L409.747 35.9066ZM409.029 36.351L407.45 33.8002L407.29 33.8991L407.144 34.0171L409.029 36.351ZM401.544 43.5287L399.057 41.8508L398.891 42.0967L398.777 42.3703L401.544 43.5287ZM400.929 44.9984H397.929L403.696 46.1568L400.929 44.9984ZM400.997 44.6566H403.997V37.414L398.876 42.5353L400.997 44.6566ZM400.86 45.0668L398.103 43.885L398.061 43.9825L398.026 44.0827L400.86 45.0668ZM409.637 52.6547C409.637 52.6551 409.637 52.639 409.639 52.6039C409.642 52.5694 409.646 52.523 409.654 52.4637C409.67 52.3432 409.695 52.192 409.732 52.0105C409.806 51.6452 409.915 51.2207 410.043 50.7773C410.304 49.8798 410.604 49.0482 410.748 48.6938L405.191 46.43C404.96 46.9984 404.593 48.0296 404.281 49.106C403.997 50.0841 403.637 51.4978 403.637 52.6547H409.637ZM410.97 47.5619C410.97 47.8078 410.939 48.0206 410.902 48.1902C410.865 48.358 410.82 48.4942 410.784 48.5896C410.748 48.6847 410.715 48.7578 410.697 48.7967C410.687 48.8172 410.68 48.8332 410.675 48.8418C410.671 48.8495 410.668 48.8558 410.67 48.8523C410.67 48.8515 410.676 48.841 410.682 48.829C410.688 48.8161 410.698 48.7959 410.709 48.7711C410.732 48.7236 410.769 48.6419 410.808 48.5384C410.847 48.4343 410.895 48.2897 410.933 48.1133C410.972 47.9351 411.004 47.7138 411.004 47.4594H405.004C405.004 47.2134 405.035 47.0006 405.072 46.8311C405.108 46.6632 405.154 46.5271 405.19 46.4316C405.225 46.3366 405.258 46.2635 405.277 46.2245C405.286 46.204 405.294 46.188 405.298 46.1794C405.302 46.1717 405.305 46.1654 405.304 46.169C405.303 46.1697 405.298 46.1803 405.292 46.1922C405.286 46.2051 405.276 46.2254 405.264 46.2501C405.242 46.2977 405.205 46.3793 405.166 46.4829C405.127 46.5869 405.079 46.7316 405.04 46.908C405.002 47.0861 404.97 47.3074 404.97 47.5619H410.97ZM410.347 49.3334C411.204 48.2621 413.444 46.2994 415.176 44.9143L411.428 40.229C409.741 41.5783 406.992 43.9223 405.661 45.5853L410.347 49.3334ZM414.403 45.3621C415.378 44.9773 416.339 44.7855 417.335 44.7855V38.7855C415.529 38.7855 413.823 39.1406 412.2 39.7812L414.403 45.3621ZM417.335 44.7855C418.384 44.7855 419.343 44.9838 420.212 45.3594L422.593 39.8523C420.932 39.1341 419.157 38.7855 417.335 38.7855V44.7855ZM419.757 45.1146C420.72 45.7457 421.719 46.4753 422.51 47.1112C422.907 47.43 423.227 47.7047 423.453 47.916C423.746 48.1907 423.705 48.1958 423.583 48.0018L428.656 44.7978C428.328 44.279 427.855 43.8184 427.552 43.5346C427.181 43.1872 426.737 42.8104 426.267 42.4327C425.324 41.6758 424.17 40.8332 423.047 40.0971L419.757 45.1146ZM423.623 48.0639C424.39 49.2142 425.033 50.8574 425.033 52.0736H431.033C431.033 49.2566 429.762 46.4564 428.615 44.7357L423.623 48.0639ZM425.033 52.0736V53.2357H431.033V52.0736H425.033ZM425.033 53.2357C425.033 54.3425 424.362 56.0895 423.614 57.2254L428.625 60.5253C429.722 58.8585 431.033 55.957 431.033 53.2357H425.033ZM423.583 57.2734C423.7 57.0875 423.734 57.0986 423.44 57.3762C423.213 57.5912 422.893 57.8703 422.497 58.1923C421.705 58.8354 420.711 59.5694 419.757 60.1948L423.047 65.2122C424.179 64.4704 425.338 63.615 426.281 62.8483C426.752 62.4653 427.194 62.0843 427.564 61.7342C427.868 61.4468 428.333 60.9879 428.656 60.4773L423.583 57.2734ZM420.301 59.913C419.335 60.2942 418.341 60.4896 417.335 60.4896V66.4896C419.132 66.4896 420.872 66.1382 422.504 65.494L420.301 59.913ZM417.335 60.4896C416.339 60.4896 415.378 60.2979 414.403 59.913L412.2 65.494C413.823 66.1345 415.529 66.4896 417.335 66.4896V60.4896ZM415.176 60.3609C413.444 58.9758 411.204 57.0131 410.347 55.9417L405.661 59.6899C406.992 61.3529 409.741 63.6968 411.428 65.0461L415.176 60.3609ZM411.004 57.8158C411.004 57.5613 410.972 57.34 410.933 57.1619C410.895 56.9855 410.847 56.8408 410.808 56.7368C410.769 56.6332 410.732 56.5516 410.709 56.504C410.698 56.4793 410.688 56.459 410.682 56.4461C410.676 56.4342 410.67 56.4236 410.67 56.4229C410.668 56.4193 410.671 56.4256 410.675 56.4333C410.68 56.4419 410.687 56.4579 410.697 56.4784C410.715 56.5174 410.748 56.5905 410.784 56.6855C410.82 56.781 410.865 56.9171 410.902 57.085C410.939 57.2546 410.97 57.4673 410.97 57.7133H404.97C404.97 57.9677 405.002 58.1891 405.04 58.3672C405.079 58.5436 405.127 58.6882 405.166 58.7923C405.205 58.8958 405.242 58.9775 405.264 59.025C405.276 59.0498 405.286 59.07 405.292 59.0829C405.298 59.0949 405.303 59.1055 405.304 59.1062C405.305 59.1097 405.302 59.1034 405.298 59.0957C405.294 59.0871 405.286 59.0711 405.277 59.0506C405.258 59.0117 405.225 58.9386 405.19 58.8435C405.154 58.7481 405.108 58.6119 405.072 58.4441C405.035 58.2745 405.004 58.0617 405.004 57.8158H411.004ZM410.748 56.5814C410.603 56.2265 410.303 55.3939 410.043 54.4987C409.914 54.0565 409.805 53.6345 409.731 53.2731C409.694 53.0936 409.669 52.9452 409.653 52.8284C409.637 52.7061 409.637 52.6527 409.637 52.6547H403.637C403.637 53.7992 404 55.2096 404.282 56.1768C404.594 57.247 404.96 58.2772 405.191 58.8451L410.748 56.5814ZM396.117 52.6547C396.117 55.5664 397.199 58.8084 398.026 61.1924L403.694 59.2243C402.813 56.6865 402.117 54.3913 402.117 52.6547H396.117ZM398.103 61.3901C398.138 61.4724 398.147 61.4927 398.162 61.5279C398.175 61.5578 398.161 61.5276 398.142 61.4737C398.12 61.4122 398.079 61.2875 398.046 61.1209C398.011 60.9422 397.997 60.7721 397.997 60.6185H403.997C403.997 60.4137 403.979 60.1966 403.934 59.9688C403.892 59.7531 403.836 59.577 403.792 59.4557C403.752 59.342 403.71 59.2434 403.688 59.1901C403.667 59.1419 403.634 59.064 403.618 59.0266L398.103 61.3901ZM403.118 58.4972C403.494 58.8728 403.753 59.3406 403.878 59.8397C403.977 60.238 403.963 60.5888 403.963 60.516H397.963C397.963 60.5947 397.909 61.773 398.876 62.7399L403.118 58.4972ZM403.963 60.516C403.963 60.4189 403.959 60.322 403.951 60.2253C403.942 60.1283 403.93 60.0386 403.917 59.9566C403.891 59.8026 403.858 59.6753 403.856 59.6688C403.849 59.6411 403.874 59.7343 403.893 59.8498C403.904 59.9126 403.913 59.982 403.919 60.0571C403.926 60.1319 403.929 60.2053 403.929 60.2767H397.929C397.929 60.3738 397.933 60.4707 397.941 60.5674C397.949 60.6644 397.961 60.7541 397.975 60.8362C398.001 60.9901 398.034 61.1174 398.035 61.124C398.042 61.1516 398.018 61.0584 397.998 60.943C397.988 60.8802 397.979 60.8107 397.972 60.7356C397.966 60.6608 397.963 60.5874 397.963 60.516H403.963ZM398.161 61.4351L398.777 62.9049L404.311 60.588L403.696 59.1183L398.161 61.4351ZM399.057 63.4244C400.242 65.1799 402.14 67.0069 403.68 68.3736C405.268 69.7839 406.741 70.9323 407.144 71.258L410.914 66.5904C410.429 66.1983 409.116 65.1763 407.663 63.8864C406.16 62.553 404.76 61.1499 404.031 60.0686L399.057 63.4244ZM407.45 71.475L408.168 71.9193L411.326 66.8177L410.608 66.3734L407.45 71.475ZM408.483 72.089C411.311 73.4034 414.272 74.0433 417.335 74.0433V68.0433C415.134 68.0433 413.037 67.5895 411.012 66.648L408.483 72.089ZM417.335 74.0433C420.196 74.0433 423.313 73.6342 426.206 72.0796L423.366 66.7942C421.679 67.7005 419.669 68.0433 417.335 68.0433V74.0433ZM426.198 72.0839L426.711 71.8105L423.887 66.5164L423.374 66.7898L426.198 72.0839ZM426.745 71.7921C427.672 71.2823 428.892 70.3214 429.833 69.6152L426.233 64.8152C424.987 65.7496 424.293 66.2927 423.853 66.5348L426.745 71.7921ZM425.033 67.2152V69.9496H431.033V67.2152H425.033ZM428.033 72.9496H435.553V66.9496H428.033V72.9496ZM438.553 69.9496V14.2025H432.553V69.9496H438.553ZM435.553 11.2025H428.033V17.2025H435.553V11.2025ZM425.033 14.2025V38.0599H431.033V14.2025H425.033ZM429.833 35.6599C428.739 34.8393 427.672 34.0714 426.842 33.5734L423.755 38.7184C424.293 39.0407 425.14 39.6399 426.233 40.4599L429.833 35.6599ZM426.842 33.5734L426.33 33.2658L423.243 38.4107L423.755 38.7184L426.842 33.5734ZM426.33 33.2658C423.368 31.4888 420.029 31.266 417.335 31.266V37.266C419.836 37.266 421.761 37.5217 423.243 38.4107L426.33 33.2658ZM417.335 31.266C414.244 31.266 411.289 31.903 408.5 33.1782L410.994 38.635C412.99 37.7227 415.093 37.266 417.335 37.266V31.266ZM408.168 33.3558L407.45 33.8002L410.608 38.9017L411.326 38.4574L408.168 33.3558ZM407.144 34.0171C406.741 34.3428 405.268 35.4913 403.68 36.9015C402.14 38.2683 400.242 40.0952 399.057 41.8508L404.031 45.2066C404.76 44.1252 406.16 42.7222 407.663 41.3888C409.116 40.0988 410.429 39.0769 410.914 38.6848L407.144 34.0171ZM398.777 42.3703L398.161 43.84L403.696 46.1568L404.311 44.6871L398.777 42.3703ZM403.929 44.9984C403.929 45.0698 403.926 45.1432 403.919 45.2181C403.913 45.2931 403.904 45.3626 403.893 45.4254C403.874 45.5409 403.849 45.634 403.856 45.6064C403.858 45.5998 403.891 45.4725 403.917 45.3186C403.93 45.2366 403.942 45.1468 403.951 45.0498C403.959 44.9531 403.963 44.8562 403.963 44.7592H397.963C397.963 44.6877 397.966 44.6143 397.972 44.5395C397.979 44.4644 397.988 44.395 397.998 44.3322C398.018 44.2167 398.042 44.1236 398.035 44.1512C398.034 44.1577 398.001 44.2851 397.975 44.439C397.961 44.521 397.949 44.6108 397.941 44.7077C397.933 44.8045 397.929 44.9014 397.929 44.9984H403.929ZM403.963 44.7592C403.963 44.6864 403.977 45.0372 403.878 45.4355C403.753 45.9346 403.494 46.4024 403.118 46.7779L398.876 42.5353C397.909 43.5022 397.963 44.6804 397.963 44.7592H403.963ZM397.997 44.6566C397.997 44.4461 398.02 44.2849 398.029 44.224C398.041 44.1443 398.055 44.0817 398.063 44.0429C398.081 43.9651 398.097 43.9118 398.104 43.89C398.118 43.8432 398.122 43.8403 398.103 43.885L403.618 46.2485C403.701 46.054 403.773 45.8631 403.831 45.6796C403.859 45.5894 403.89 45.4806 403.917 45.36C403.929 45.3077 403.997 45.0186 403.997 44.6566H397.997ZM398.026 44.0827C397.199 46.4668 396.117 49.7087 396.117 52.6205H402.117C402.117 50.8838 402.813 48.5886 403.694 46.0508L398.026 44.0827ZM396.117 52.6205V52.6547H402.117V52.6205H396.117Z\\\" fill=\\\"#333333\\\" />\\n<path d=\\\"M172 15.9858V19.9574L174 21.4468H177.5L179.5 19.9574V15.9858L177.5 14H174L172 15.9858Z\\\" fill=\\\"#56CCF2\\\" stroke=\\\"#56CCF2\\\" />\\n</symbol>\"\n});\nvar result = sprite.add(symbol);\nexport default symbol","import SpriteSymbol from \"svg-baker-runtime/browser-symbol\";\nimport sprite from \"svg-sprite-loader/runtime/browser-sprite.build\";\nvar symbol = new SpriteSymbol({\n  \"id\": \"sugar-icon\",\n  \"use\": \"sugar-icon-usage\",\n  \"viewBox\": \"0 0 80 80\",\n  \"content\": \"<symbol viewBox=\\\"0 0 80 80\\\" fill=\\\"none\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" id=\\\"sugar-icon\\\">\\n<mask id=\\\"sugar-icon_mask0\\\" mask-type=\\\"alpha\\\" maskUnits=\\\"userSpaceOnUse\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"80\\\" height=\\\"80\\\">\\n<rect width=\\\"80\\\" height=\\\"80\\\" fill=\\\"#C4C4C4\\\" />\\n</mask>\\n<g mask=\\\"url(#sugar-icon_mask0)\\\">\\n<path d=\\\"M62.9661 68.3937C63.1832 64.7758 64.8864 55.6372 69.9624 48.0265C70.1164 44.592 71.391 36.7012 75.2569 32.6134C75.0328 30.2799 75.4375 24.9212 78.8496 22.1546C79.4001 15.7619 68.9338 7.28694 67.8238 10.9821C67.7963 11.0737 67.7748 11.1719 67.7595 11.2772C66.7344 15.9515 64.4314 24.8538 62.9074 25.2942C62.6034 28.0617 61.3654 36.9498 56.2893 44.5605C55.2697 48.7233 51.8038 57.1743 48.654 63.4774L62.9661 68.3937Z\\\" fill=\\\"#252525\\\" />\\n<path d=\\\"M69.9624 48.0265C64.8864 55.6372 63.1832 64.7758 62.9661 68.3937L48.654 63.4774C51.8038 57.1743 55.2697 48.7233 56.2893 44.5605M69.9624 48.0265C70.1164 44.592 71.391 36.7012 75.2569 32.6134M69.9624 48.0265L56.2893 44.5605M75.2569 32.6134C75.0328 30.2799 75.4375 24.9212 78.8496 22.1546M75.2569 32.6134L62.9074 25.2942M78.8496 22.1546C75.7877 21.5131 69.3093 18.7543 67.8907 12.8514C67.6978 12.0488 67.6883 11.4331 67.8238 10.9821M78.8496 22.1546C79.4001 15.7619 68.9338 7.28694 67.8238 10.9821M67.8238 10.9821C66.8336 15.5654 64.4641 24.8443 62.9074 25.2942M62.9074 25.2942C62.6034 28.0617 61.3654 36.9498 56.2893 44.5605\\\" stroke=\\\"#FCFCFC\\\" stroke-width=\\\"2\\\" />\\n<path d=\\\"M47.9653 70.9889C48.3165 67.3815 48.0631 58.0891 44.2395 49.7783C44.6243 46.362 44.5992 38.3689 41.42 33.727C42.0062 31.4572 42.4443 26.1012 39.5068 22.8351C39.9626 16.4349 51.6252 9.70064 52.1439 13.524C52.1567 13.6186 52.1626 13.7191 52.1612 13.8255C52.4429 18.6025 53.3256 27.7554 54.762 28.4287C54.6296 31.2097 54.4627 40.182 58.2863 48.4928C58.6426 52.7638 60.7445 61.6528 62.87 68.3708L47.9653 70.9889Z\\\" fill=\\\"#252525\\\" />\\n<path d=\\\"M44.2395 49.7783C48.0631 58.0891 48.3165 67.3815 47.9653 70.9889L62.87 68.3708C60.7445 61.6528 58.6426 52.7638 58.2863 48.4928M44.2395 49.7783C44.6243 46.362 44.5992 38.3689 41.42 33.727M44.2395 49.7783L58.2863 48.4928M41.42 33.727C42.0062 31.4572 42.4443 26.1012 39.5068 22.8351M41.42 33.727L54.762 28.4287M39.5068 22.8351C42.6313 22.6802 49.4614 20.9683 51.7855 15.3597C52.1015 14.5972 52.2072 13.9905 52.1439 13.524M39.5068 22.8351C39.9626 16.4349 51.6252 9.70064 52.1439 13.524M52.1439 13.524C52.4052 18.2056 53.2948 27.7409 54.762 28.4287M54.762 28.4287C54.6296 31.2097 54.4627 40.182 58.2863 48.4928\\\" stroke=\\\"#FCFCFC\\\" stroke-width=\\\"2\\\" />\\n<path d=\\\"M0 71.1331L64.1331 71.1331\\\" stroke=\\\"#252525\\\" stroke-width=\\\"3\\\" />\\n<path d=\\\"M2.10272 69.0304C11.7572 44.9879 37.0487 12.073 60.979 69.0304L2.10272 69.0304Z\\\" fill=\\\"#FCFCFC\\\" stroke=\\\"#252525\\\" stroke-width=\\\"2\\\" />\\n<path d=\\\"M24.6204 55.7073H27.2241V58.523H24.6204V55.7073Z\\\" fill=\\\"#252525\\\" />\\n<path d=\\\"M14.2054 58.523H16.8091V61.3387H14.2054V58.523Z\\\" fill=\\\"#252525\\\" />\\n<path d=\\\"M31.4429 45.5137H34.0467V48.3294H31.4429V45.5137Z\\\" fill=\\\"#252525\\\" />\\n<path d=\\\"M35.8924 57.2755H38.4962V60.0912H35.8924V57.2755Z\\\" fill=\\\"#252525\\\" />\\n<path d=\\\"M46.3074 61.4991H48.9111V64.3148H46.3074V61.4991Z\\\" fill=\\\"#252525\\\" />\\n</g>\\n</symbol>\"\n});\nvar result = sprite.add(symbol);\nexport default symbol","import SpriteSymbol from \"svg-baker-runtime/browser-symbol\";\nimport sprite from \"svg-sprite-loader/runtime/browser-sprite.build\";\nvar symbol = new SpriteSymbol({\n  \"id\": \"background-header\",\n  \"use\": \"background-header-usage\",\n  \"viewBox\": \"0 0 2072 442\",\n  \"content\": \"<symbol viewBox=\\\"0 0 2072 442\\\" fill=\\\"none\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" id=\\\"background-header\\\">\\n<path d=\\\"M1932.89 438.26C1575 422.917 1671.5 422.917 1492.5 422.917C1460.48 422.917 269.088 476.045 67.444 403.872C-184.611 313.655 345.688 -55.1896 526.251 8.06792C706.815 71.3254 1011.61 112.61 1092.24 124.077C1162.73 134.102 1568.03 103.838 1730.95 152.196C1862.56 215.1 2289.05 453.529 1932.89 438.26Z\\\" fill=\\\"#7AD7FF\\\" />\\n</symbol>\"\n});\nvar result = sprite.add(symbol);\nexport default symbol","import SpriteSymbol from \"svg-baker-runtime/browser-symbol\";\nimport sprite from \"svg-sprite-loader/runtime/browser-sprite.build\";\nvar symbol = new SpriteSymbol({\n  \"id\": \"background\",\n  \"use\": \"background-usage\",\n  \"viewBox\": \"0 0 1440 900\",\n  \"content\": \"<symbol viewBox=\\\"0 0 1440 900\\\" fill=\\\"none\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" id=\\\"background\\\">\\n<path d=\\\"M1446.26 474.104C1009.7 562.376 641.127 783.073 480.017 902.57C429.827 936.081 220.167 1049.83 -48.4857 1047.87C-384.302 1045.42 -245.595 474.104 -5.59607 474.104C234.403 474.104 612.364 390.172 712.577 368.668C800.181 349.869 1233.34 310.364 1446.26 299.194C1628.16 320.717 1882.82 385.832 1446.26 474.104Z\\\" fill=\\\"#7AD7FF\\\" />\\n<path d=\\\"M1572.77 -29.3751C1498.3 -24.1441 256.304 338.143 -5.59607 388V-56.3267C377.977 -58.5063 1647.23 -34.606 1572.77 -29.3751Z\\\" fill=\\\"#7AD7FF\\\" />\\n<path d=\\\"M1422.77 590C1263.62 638.386 505.873 1016.16 385.417 1108.52H1489.27C1555.58 956.223 1581.91 541.614 1422.77 590Z\\\" fill=\\\"#7AD7FF\\\" />\\n<path d=\\\"M1479.77 420C1014.96 519.059 371.464 864.836 207.266 1001.5C153.829 1039.11 194.639 1130.14 -91.3958 1127.94C-448.939 1125.19 -301.258 484.061 -45.7314 484.061C209.795 484.061 612.209 389.873 718.905 365.741C812.178 344.645 1273.36 300.313 1500.06 287.778C1693.73 311.931 1944.57 320.941 1479.77 420Z\\\" stroke=\\\"#FFF6E7\\\" />\\n<path d=\\\"M1279.26 -143.347C1199.98 -137.477 233.113 245.586 -45.7314 301.536V-111.185C362.658 -113.631 1358.54 -149.217 1279.26 -143.347Z\\\" stroke=\\\"#FFF6E7\\\" />\\n<path d=\\\"M1386.27 664C1216.82 718.299 498.829 1092.36 370.58 1196L1399.27 1068.5C1469.87 897.593 1555.71 609.701 1386.27 664Z\\\" stroke=\\\"#FFF6E7\\\" />\\n<path d=\\\"M1342.8 541.068C932.023 628.614 536.004 856.792 390.894 977.573C343.669 1010.81 189.129 1112.06 -63.6546 1110.12C-379.634 1107.69 -249.121 541.068 -23.2986 541.068C202.523 541.068 658.207 457.826 752.5 436.499C834.929 417.854 1242.5 378.675 1442.85 367.597C1614 388.943 1753.57 453.521 1342.8 541.068Z\\\" stroke=\\\"#FFBF75\\\" />\\n<path d=\\\"M1689.5 -13.4231C1619.43 -8.23517 223.131 387.051 -23.2986 436.499V15.0008C337.616 12.8392 1759.56 -18.611 1689.5 -13.4231Z\\\" stroke=\\\"#FFBF75\\\" />\\n<path d=\\\"M970.147 841.452C820.4 889.44 457.957 1078.67 344.617 1170.26H970.147C1032.54 1019.22 1119.89 793.464 970.147 841.452Z\\\" stroke=\\\"#FFBF75\\\" />\\n</symbol>\"\n});\nvar result = sprite.add(symbol);\nexport default symbol","import SpriteSymbol from \"svg-baker-runtime/browser-symbol\";\nimport sprite from \"svg-sprite-loader/runtime/browser-sprite.build\";\nvar symbol = new SpriteSymbol({\n  \"id\": \"remove-icon\",\n  \"use\": \"remove-icon-usage\",\n  \"viewBox\": \"0 0 30 30\",\n  \"content\": \"<symbol viewBox=\\\"0 0 30 30\\\" fill=\\\"none\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" id=\\\"remove-icon\\\">\\n<circle cx=\\\"15\\\" cy=\\\"15\\\" r=\\\"14\\\" fill=\\\"#E35C5C\\\" stroke=\\\"black\\\" stroke-width=\\\"2\\\" />\\n<mask id=\\\"remove-icon_path-2-outside-1\\\" maskUnits=\\\"userSpaceOnUse\\\" x=\\\"7.89404\\\" y=\\\"7.89435\\\" width=\\\"14\\\" height=\\\"14\\\" fill=\\\"black\\\">\\n<rect fill=\\\"white\\\" x=\\\"7.89404\\\" y=\\\"7.89435\\\" width=\\\"14\\\" height=\\\"14\\\" />\\n<path fill-rule=\\\"evenodd\\\" clip-rule=\\\"evenodd\\\" d=\\\"M20.6673 9.99145L19.5702 8.89435L14.7809 13.6837L10.0065 8.90932L8.90944 10.0064L13.6838 14.7808L8.89404 19.5705L9.99115 20.6676L14.7809 15.8779L19.5856 20.6826L20.6827 19.5855L15.878 14.7808L20.6673 9.99145Z\\\" />\\n</mask>\\n<path fill-rule=\\\"evenodd\\\" clip-rule=\\\"evenodd\\\" d=\\\"M20.6673 9.99145L19.5702 8.89435L14.7809 13.6837L10.0065 8.90932L8.90944 10.0064L13.6838 14.7808L8.89404 19.5705L9.99115 20.6676L14.7809 15.8779L19.5856 20.6826L20.6827 19.5855L15.878 14.7808L20.6673 9.99145Z\\\" fill=\\\"#FCFCFC\\\" />\\n<path d=\\\"M19.5702 8.89435L19.9238 8.54079C19.83 8.44703 19.7028 8.39435 19.5702 8.39435C19.4376 8.39435 19.3104 8.44703 19.2167 8.54079L19.5702 8.89435ZM20.6673 9.99145L21.0209 10.345C21.2161 10.1497 21.2161 9.83316 21.0209 9.6379L20.6673 9.99145ZM14.7809 13.6837L14.4273 14.0372C14.5211 14.131 14.6483 14.1837 14.7809 14.1837C14.9135 14.1837 15.0407 14.131 15.1344 14.0372L14.7809 13.6837ZM10.0065 8.90932L10.3601 8.55577C10.2663 8.462 10.1392 8.40932 10.0065 8.40932C9.87393 8.40932 9.74676 8.462 9.65299 8.55577L10.0065 8.90932ZM8.90944 10.0064L8.55589 9.65287C8.46212 9.74664 8.40944 9.87382 8.40944 10.0064C8.40944 10.139 8.46212 10.2662 8.55589 10.36L8.90944 10.0064ZM13.6838 14.7808L14.0373 15.1343C14.1311 15.0406 14.1838 14.9134 14.1838 14.7808C14.1838 14.6482 14.1311 14.521 14.0373 14.4272L13.6838 14.7808ZM8.89404 19.5705L8.54049 19.217C8.44672 19.3107 8.39404 19.4379 8.39404 19.5705C8.39404 19.7031 8.44672 19.8303 8.54049 19.9241L8.89404 19.5705ZM9.99115 20.6676L9.63759 21.0212C9.83286 21.2164 10.1494 21.2164 10.3447 21.0212L9.99115 20.6676ZM14.7809 15.8779L15.1344 15.5243C14.9392 15.3291 14.6226 15.3291 14.4273 15.5243L14.7809 15.8779ZM19.5856 20.6826L19.232 21.0361C19.4273 21.2314 19.7439 21.2314 19.9392 21.0361L19.5856 20.6826ZM20.6827 19.5855L21.0363 19.939C21.2315 19.7438 21.2315 19.4272 21.0363 19.2319L20.6827 19.5855ZM15.878 14.7808L15.5244 14.4272C15.3292 14.6225 15.3292 14.9391 15.5244 15.1343L15.878 14.7808ZM19.2167 9.2479L20.3138 10.345L21.0209 9.6379L19.9238 8.54079L19.2167 9.2479ZM15.1344 14.0372L19.9238 9.2479L19.2167 8.54079L14.4273 13.3301L15.1344 14.0372ZM9.65299 9.26288L14.4273 14.0372L15.1344 13.3301L10.3601 8.55577L9.65299 9.26288ZM9.26299 10.36L10.3601 9.26288L9.65299 8.55577L8.55589 9.65287L9.26299 10.36ZM14.0373 14.4272L9.26299 9.65287L8.55589 10.36L13.3302 15.1343L14.0373 14.4272ZM9.2476 19.9241L14.0373 15.1343L13.3302 14.4272L8.54049 19.217L9.2476 19.9241ZM10.3447 20.3141L9.2476 19.217L8.54049 19.9241L9.63759 21.0212L10.3447 20.3141ZM14.4273 15.5243L9.63759 20.3141L10.3447 21.0212L15.1344 16.2314L14.4273 15.5243ZM19.9392 20.329L15.1344 15.5243L14.4273 16.2314L19.232 21.0361L19.9392 20.329ZM20.3291 19.2319L19.232 20.329L19.9392 21.0361L21.0363 19.939L20.3291 19.2319ZM15.5244 15.1343L20.3291 19.939L21.0363 19.2319L16.2315 14.4272L15.5244 15.1343ZM20.3138 9.6379L15.5244 14.4272L16.2315 15.1343L21.0209 10.345L20.3138 9.6379Z\\\" fill=\\\"#FCFCFC\\\" mask=\\\"url(#remove-icon_path-2-outside-1)\\\" />\\n</symbol>\"\n});\nvar result = sprite.add(symbol);\nexport default symbol","import SpriteSymbol from \"svg-baker-runtime/browser-symbol\";\nimport sprite from \"svg-sprite-loader/runtime/browser-sprite.build\";\nvar symbol = new SpriteSymbol({\n  \"id\": \"select-arrow\",\n  \"use\": \"select-arrow-usage\",\n  \"viewBox\": \"0 0 21 11\",\n  \"content\": \"<symbol viewBox=\\\"0 0 21 11\\\" fill=\\\"none\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" id=\\\"select-arrow\\\">\\n  <path d=\\\"M1 0.75C4.2 3.95 8.66667 8.41667 10.5 10.25L20 0.749999\\\" stroke=\\\"black\\\" />\\n</symbol>\"\n});\nvar result = sprite.add(symbol);\nexport default symbol","import SpriteSymbol from \"svg-baker-runtime/browser-symbol\";\nimport sprite from \"svg-sprite-loader/runtime/browser-sprite.build\";\nvar symbol = new SpriteSymbol({\n  \"id\": \"back-icon\",\n  \"use\": \"back-icon-usage\",\n  \"viewBox\": \"0 0 30 25\",\n  \"content\": \"<symbol viewBox=\\\"0 0 30 25\\\" fill=\\\"none\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" id=\\\"back-icon\\\">\\n<mask id=\\\"back-icon_path-1-outside-1\\\" maskUnits=\\\"userSpaceOnUse\\\" x=\\\"-0.5\\\" y=\\\"-2.44784e-06\\\" width=\\\"31\\\" height=\\\"25\\\" fill=\\\"black\\\">\\n<rect fill=\\\"white\\\" x=\\\"-0.5\\\" y=\\\"-2.44784e-06\\\" width=\\\"31\\\" height=\\\"25\\\" />\\n<path fill-rule=\\\"evenodd\\\" clip-rule=\\\"evenodd\\\" d=\\\"M12.5 22L3 12.5L12.5 3L14.5 5L8.5 11L27.5 11L27.5 14L8.5 14L14.5 20L12.5 22Z\\\" />\\n</mask>\\n<path fill-rule=\\\"evenodd\\\" clip-rule=\\\"evenodd\\\" d=\\\"M12.5 22L3 12.5L12.5 3L14.5 5L8.5 11L27.5 11L27.5 14L8.5 14L14.5 20L12.5 22Z\\\" fill=\\\"#FCFCFC\\\" />\\n<path d=\\\"M3 12.5L1.58579 11.0858L0.171574 12.5L1.58579 13.9142L3 12.5ZM12.5 22L11.0858 23.4142L12.5 24.8284L13.9142 23.4142L12.5 22ZM12.5 3L13.9142 1.58579L12.5 0.171572L11.0858 1.58579L12.5 3ZM14.5 5L15.9142 6.41421L17.3284 5L15.9142 3.58579L14.5 5ZM8.5 11L7.08579 9.58579L3.67157 13L8.5 13L8.5 11ZM27.5 11L29.5 11L29.5 9L27.5 9L27.5 11ZM27.5 14L27.5 16L29.5 16L29.5 14L27.5 14ZM8.5 14L8.5 12L3.67157 12L7.08579 15.4142L8.5 14ZM14.5 20L15.9142 21.4142L17.3284 20L15.9142 18.5858L14.5 20ZM1.58579 13.9142L11.0858 23.4142L13.9142 20.5858L4.41421 11.0858L1.58579 13.9142ZM11.0858 1.58579L1.58579 11.0858L4.41421 13.9142L13.9142 4.41421L11.0858 1.58579ZM15.9142 3.58579L13.9142 1.58579L11.0858 4.41421L13.0858 6.41421L15.9142 3.58579ZM9.91421 12.4142L15.9142 6.41421L13.0858 3.58579L7.08579 9.58579L9.91421 12.4142ZM8.5 13L27.5 13L27.5 9L8.5 9L8.5 13ZM25.5 11L25.5 14L29.5 14L29.5 11L25.5 11ZM27.5 12L8.5 12L8.5 16L27.5 16L27.5 12ZM15.9142 18.5858L9.91421 12.5858L7.08579 15.4142L13.0858 21.4142L15.9142 18.5858ZM13.9142 23.4142L15.9142 21.4142L13.0858 18.5858L11.0858 20.5858L13.9142 23.4142Z\\\" fill=\\\"#333333\\\" mask=\\\"url(#back-icon_path-1-outside-1)\\\" />\\n</symbol>\"\n});\nvar result = sprite.add(symbol);\nexport default symbol","import SpriteSymbol from \"svg-baker-runtime/browser-symbol\";\nimport sprite from \"svg-sprite-loader/runtime/browser-sprite.build\";\nvar symbol = new SpriteSymbol({\n  \"id\": \"fish-icon\",\n  \"use\": \"fish-icon-usage\",\n  \"viewBox\": \"0 0 80 80\",\n  \"content\": \"<symbol viewBox=\\\"0 0 80 80\\\" fill=\\\"none\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" id=\\\"fish-icon\\\">\\n<mask id=\\\"fish-icon_mask0\\\" mask-type=\\\"alpha\\\" maskUnits=\\\"userSpaceOnUse\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"80\\\" height=\\\"80\\\">\\n<rect width=\\\"80\\\" height=\\\"80\\\" fill=\\\"#C4C4C4\\\" />\\n</mask>\\n<g mask=\\\"url(#fish-icon_mask0)\\\">\\n<path d=\\\"M63.0733 38.3008C71.3877 28.2007 74.6943 9.77299 69.5294 8.47628C58.8266 5.7892 45.0021 15.0059 38.5401 22.7401C30.6368 32.1992 29.6512 46.026 28.4726 53.6096C28.3601 54.3333 29.0238 54.9474 29.7313 54.7579C42.9581 51.215 56.9203 45.7754 63.0733 38.3008Z\\\" fill=\\\"#252525\\\" stroke=\\\"#252525\\\" stroke-width=\\\"2\\\" />\\n<path d=\\\"M17.7145 49.6204C13.1472 49.9782 10.0834 52.7217 8.10842 54.3492C8.05513 54.3931 8.06157 54.4755 8.12083 54.511C11.4887 56.5249 15.869 58.1983 19.2712 57.8546C23.6346 57.4137 26.8535 54.4755 29.0041 53.0606C29.0657 53.0201 29.0639 52.9299 29.001 52.8916C25.366 50.6842 20.967 49.3657 17.7145 49.6204Z\\\" fill=\\\"#FCFCFC\\\" stroke=\\\"#252525\\\" stroke-width=\\\"2\\\" />\\n<path d=\\\"M20.0238 61.2645C17.1182 64.8065 16.9748 68.9166 16.7805 71.4684C16.7753 71.5372 16.8392 71.5897 16.9058 71.5715C20.6912 70.5374 24.9323 68.5373 27.041 65.8453C29.7454 62.3928 29.8559 58.036 30.3251 55.5047C30.3385 55.4323 30.2722 55.3711 30.201 55.39C26.0911 56.4827 22.093 58.7422 20.0238 61.2645Z\\\" fill=\\\"#FCFCFC\\\" stroke=\\\"#252525\\\" stroke-width=\\\"2\\\" />\\n<path d=\\\"M66.1252 35.1762L58.2723 43.1551C58.2306 43.1974 58.2348 43.2666 58.2814 43.3036L66.4093 49.7523C66.4354 49.773 66.449 49.806 66.4481 49.8394C66.437 50.251 66.7792 49.9219 68.2701 45.5363C69.7954 41.0491 67.6144 36.8216 66.2708 35.1809C66.2336 35.1354 66.1664 35.1343 66.1252 35.1762Z\\\" fill=\\\"#FCFCFC\\\" stroke=\\\"#252525\\\" stroke-width=\\\"2\\\" />\\n<path d=\\\"M25.6656 20.1235L35.1941 26.733C35.2377 26.7632 35.2974 26.7541 35.33 26.7123L41.6361 18.6249C41.6549 18.6008 41.6838 18.5869 41.7144 18.5856C42.1845 18.5654 41.8236 18.2794 36.8225 17.2578C31.7601 16.2237 27.3389 18.5835 25.6569 19.9675C25.6063 20.0092 25.6117 20.0862 25.6656 20.1235Z\\\" fill=\\\"#FCFCFC\\\" stroke=\\\"#252525\\\" stroke-width=\\\"2\\\" />\\n<path d=\\\"M47 16C47.9956 21.4729 53.8586 32.3257 67 30.8663\\\" stroke=\\\"white\\\" stroke-width=\\\"2\\\" />\\n<path d=\\\"M61.7641 15.1069C58.6072 17.1123 61.1468 13.7699 61.7064 15.029C62.2277 16.2018 61.6201 16.6906 60.4659 16.2751\\\" stroke=\\\"white\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" />\\n</g>\\n</symbol>\"\n});\nvar result = sprite.add(symbol);\nexport default symbol","import SpriteSymbol from \"svg-baker-runtime/browser-symbol\";\nimport sprite from \"svg-sprite-loader/runtime/browser-sprite.build\";\nvar symbol = new SpriteSymbol({\n  \"id\": \"meat-icon\",\n  \"use\": \"meat-icon-usage\",\n  \"viewBox\": \"0 0 80 80\",\n  \"content\": \"<symbol viewBox=\\\"0 0 80 80\\\" fill=\\\"none\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" id=\\\"meat-icon\\\">\\n<mask id=\\\"meat-icon_mask0\\\" mask-type=\\\"alpha\\\" maskUnits=\\\"userSpaceOnUse\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"80\\\" height=\\\"80\\\">\\n<rect width=\\\"80\\\" height=\\\"80\\\" fill=\\\"#C4C4C4\\\" />\\n</mask>\\n<g mask=\\\"url(#meat-icon_mask0)\\\">\\n<path d=\\\"M12.6511 67.3744C7.667 60.0197 9.27657 53.5421 12.016 50.2994C15.8512 45.7597 22.7564 42.7033 36.0341 24.8051C52.6312 2.43234 58.9838 2.25283 64.7718 5.88793C71.2429 9.95204 83.2082 26.6383 73.3402 46.2888C65.4457 62.0091 41.8574 69.5038 29.5724 72.7206C26.9937 73.0466 17.6352 74.7292 12.6511 67.3744Z\\\" fill=\\\"#252525\\\" stroke=\\\"#252525\\\" />\\n<path d=\\\"M7.35485 65.3664C2.37074 58.0116 3.98031 51.5341 6.71974 48.2914C10.5549 43.7516 17.4601 40.6953 30.7378 22.797C47.335 0.424285 53.6876 0.244777 59.4755 3.87987C65.9466 7.94398 77.9119 24.6302 68.0439 44.2807C60.1495 60.0011 36.5611 67.4957 24.2762 70.7125C21.6975 71.0386 12.339 72.7211 7.35485 65.3664Z\\\" fill=\\\"#FCFCFC\\\" stroke=\\\"#252525\\\" />\\n<path d=\\\"M9.52533 63.1766C4.95359 56.4389 7.04167 51.2236 9.57806 48.237C13.129 44.0557 19.5058 41.2266 31.8065 24.7476C47.1823 4.14883 52.4573 3.2251 57.7823 6.54445C63.7358 10.2556 74.7143 25.5398 65.5518 43.6169C58.2218 58.0785 36.4479 65.0373 25.1102 68.0312C22.7315 68.3389 14.0971 69.9144 9.52533 63.1766Z\\\" fill=\\\"#FCFCFC\\\" stroke=\\\"#252525\\\" stroke-width=\\\"0.5\\\" />\\n<path d=\\\"M12.0431 53.9325C12.0431 49.0452 18.7266 45.1083 22.0684 43.7507C28.4846 42.1216 27.5823 46.8052 29.0861 49.8597C31.0911 53.9324 41.1164 58.8196 33.0962 62.0778C25.076 65.336 17.0557 64.4537 15.0507 63.0961C14.0481 62.0779 12.0431 58.8198 12.0431 53.9325Z\\\" fill=\\\"#252525\\\" stroke=\\\"#252525\\\" />\\n<path d=\\\"M30.2037 37.2074C28.4635 34.5444 31.2031 32.4543 34.4502 29.2768C41.0327 23.7088 49.511 10.5858 52.5231 11.2038C56.2115 11.9604 63.3283 20.647 55.5353 28.2728C47.7422 35.8987 39.5456 39.2838 36.8239 40.0067C35.3423 40.1832 31.9438 39.8704 30.2037 37.2074Z\\\" fill=\\\"#252525\\\" stroke=\\\"#252525\\\" />\\n<path d=\\\"M51.8018 46.358C50.3727 44.7255 52.1072 38.0657 53.1773 36.328C55.5177 33.3179 59.3057 31.4463 60.9971 31.9281C63.0683 32.5179 67.2047 33.2125 64.6364 37.3832C62.0681 41.5539 56.392 45.1709 55.3373 46.1515C54.0301 47.367 53.2309 47.9905 51.8018 46.358Z\\\" fill=\\\"#252525\\\" stroke=\\\"#252525\\\" />\\n<path d=\\\"M46.5802 42.5033C47.7683 45.3055 46.3376 51.8063 45.4519 53.1002C43.5136 55.024 40.3726 54.6997 38.9683 53.0452C37.2487 51.0194 34.367 48.8916 36.4928 45.7863C38.6187 42.6811 42.7392 41.6434 43.6132 41.2071C44.6964 40.6664 45.3921 39.7012 46.5802 42.5033Z\\\" fill=\\\"#252525\\\" stroke=\\\"#252525\\\" />\\n</g>\\n</symbol>\"\n});\nvar result = sprite.add(symbol);\nexport default symbol","import SpriteSymbol from \"svg-baker-runtime/browser-symbol\";\nimport sprite from \"svg-sprite-loader/runtime/browser-sprite.build\";\nvar symbol = new SpriteSymbol({\n  \"id\": \"btn-start\",\n  \"use\": \"btn-start-usage\",\n  \"viewBox\": \"0 0 180 50\",\n  \"content\": \"<symbol viewBox=\\\"0 0 180 50\\\" fill=\\\"none\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" id=\\\"btn-start\\\">\\n<g filter=\\\"url(#btn-start_filter0_d)\\\">\\n<path d=\\\"M25.0932 5.79853L9.25831 31.7984C5.19976 38.4623 9.99649 47 17.799 47H146.366C149.855 47 153.092 45.1815 154.907 42.2016L170.742 16.2017C174.8 9.53781 170.004 1.00012 162.201 1.00012H33.6339C30.1448 1.00012 26.908 2.81864 25.0932 5.79853Z\\\" fill=\\\"#FCFCFC\\\" />\\n<path d=\\\"M25.0932 5.79853L9.25831 31.7984C5.19976 38.4623 9.99649 47 17.799 47H146.366C149.855 47 153.092 45.1815 154.907 42.2016L170.742 16.2017C174.8 9.53781 170.004 1.00012 162.201 1.00012H33.6339C30.1448 1.00012 26.908 2.81864 25.0932 5.79853Z\\\" stroke=\\\"#333333\\\" stroke-width=\\\"2\\\" />\\n</g>\\n<circle cx=\\\"124.5\\\" cy=\\\"24.5\\\" r=\\\"8.5\\\" fill=\\\"#6FE35C\\\" />\\n<path d=\\\"M48.5859 29.2617C48.4336 30.2344 48.9023 31.125 48.9961 31.2773L49.0078 31.3008C49.1953 31.6875 49.4766 31.8984 49.6172 32.0273C49.9805 32.3906 50.2969 32.5898 50.3555 32.625L50.4258 32.6602C51.1523 33.0234 51.8906 33.2344 52.6875 33.2344C53.4727 33.2344 54.2109 33.0469 54.9023 32.6836C55.2656 32.4961 56.4961 31.793 56.8711 30.7031C56.918 30.5508 57.0352 30.2578 57.0938 29.8945C57.1641 29.5078 57.1523 29.1445 57.1172 28.9102V28.8633L57.0469 28.5469C57.0586 28.6289 57.0234 28.5 57.0234 28.5117L57.0117 28.4648C56.9062 28.043 56.707 27.6094 56.4492 27.2461C56.1914 26.8828 55.5234 26.2266 55.0664 26.0742L55.043 26.0625C55.0312 26.0625 54.0938 25.7461 53.2266 25.4883L52.6641 25.3242C52.3945 25.2422 52.0547 25.1484 51.9492 25.1016C51.9609 25.1133 51.9727 25.125 51.9727 25.125L51.8203 25.043L51.8555 25.0664C51.8672 25.0781 51.8672 25.0781 51.8789 25.0781C51.8438 25.043 51.6797 24.9492 51.6211 24.6797C51.4922 24.1523 51.6797 23.7539 51.7148 23.6602C51.7969 23.5664 51.7969 23.543 51.8438 23.5078C51.9141 23.4141 52.0078 23.3672 52.0664 23.332C52.6172 23.0625 53.2148 23.0625 53.7656 23.332C53.8008 23.3438 53.9414 23.4727 54.0234 23.6133L54.3164 23.4609L56.2852 22.3711C55.8516 21.5625 55.1367 21.1289 55.0078 21.0703L54.9727 21.0586C54.3398 20.7188 53.6484 20.543 52.9102 20.543C52.1719 20.543 51.4922 20.7422 50.8125 21.082L50.7422 21.1172C50.6836 21.1523 50.3555 21.3516 50.0625 21.6328C49.8398 21.832 49.7227 21.9961 49.5352 22.2773L49.5117 22.3125C49.4414 22.418 49.0664 23.1094 48.9961 24.1289C48.9844 24.1992 48.9844 24.2695 48.9844 24.3398C48.9844 24.6211 49.0312 24.9258 49.1016 25.2422C49.4297 26.6133 50.4141 27.2227 50.7422 27.3867C51.0703 27.5508 51.4453 27.668 51.9727 27.8086C52.1484 27.8555 52.3125 27.9023 52.4883 27.9609C53.1094 28.1484 53.7539 28.3594 54.0469 28.4531C54.1523 28.5352 54.293 28.6758 54.3516 28.7344C54.3867 28.7812 54.4219 28.9102 54.5508 29.2266C54.5508 29.3203 54.5625 29.4375 54.5508 29.4961C54.5391 29.5898 54.4922 29.6953 54.4805 29.7305L54.4336 29.8477C54.3398 29.9766 54 30.2578 53.7188 30.3984C53.0625 30.7383 52.3477 30.7266 51.6914 30.4102C51.6445 30.375 51.5391 30.3047 51.4102 30.1758C51.3516 30.1172 51.2695 30.0469 51.2227 29.9648C51.1875 29.9062 51.1289 29.7422 51.1289 29.6602L48.5859 29.2617ZM61.5352 23.4844V28.8047C61.5352 29.8477 62.0391 30.7734 62.1914 31.0195C62.5078 31.5234 63.1758 32.1094 63.75 32.4258L63.9375 32.5312C64.4414 32.8125 65.0039 32.8828 65.5781 32.8828H66.9375V30.3047H65.5781C65.4141 30.3047 65.25 30.2695 65.0742 30.2109C64.8047 30.0234 64.5117 29.7891 64.3828 29.6602C64.2539 29.4141 64.1133 29.0742 64.1133 28.8047V23.4844H68.2148V20.9062H64.1133V13.6992H61.5352V20.9062H59.543V23.4844H61.5352ZM72.5508 26.8711C72.5508 26.4023 72.9023 25.4648 72.9961 25.1367C73.0078 25.125 73.0078 25.1133 73.0078 25.0898C73.3828 24.6328 74.2383 23.8945 74.8242 23.4258C75.2695 23.2383 75.7383 23.1445 76.2188 23.1445C76.6992 23.1445 77.168 23.2383 77.6133 23.4258C78.3281 23.9062 79.0781 24.5039 79.2188 24.7266C79.5469 25.2305 79.875 26.0156 79.875 26.6719V27.0703C79.875 27.7266 79.5234 28.5117 79.2188 29.0039C79.0664 29.25 78.3281 29.8359 77.6133 30.3164C77.168 30.5039 76.6992 30.5977 76.2188 30.5977C75.7383 30.5977 75.2695 30.5039 74.8242 30.3164C74.2383 29.8477 73.3828 29.1094 73.0078 28.6523C73.0078 28.6289 73.0078 28.6172 72.9961 28.6055C72.9023 28.2773 72.5508 27.3398 72.5508 26.8711ZM69.9609 26.8828C69.9609 27.6797 70.2891 28.6172 70.5703 29.4727C70.582 29.5312 70.6055 29.5781 70.6172 29.6133C70.6172 29.6016 70.5938 29.5547 70.582 29.4961L70.793 29.9883C71.4492 30.9609 73.0312 32.25 73.3594 32.4492L73.6172 32.6016C74.4258 32.9883 75.293 33.1758 76.2188 33.1758C77.1094 33.1758 77.9648 33.0469 78.7617 32.625L78.9375 32.5312C79.1719 32.4023 79.5117 32.1445 79.875 31.875V32.8008H82.4531V27.1758C82.4531 27.082 82.4648 26.9766 82.4648 26.8828V26.8711V26.8594C82.4648 26.7656 82.4531 26.6602 82.4531 26.5664V20.9062H79.875V21.8672C79.5117 21.5977 79.1719 21.3398 78.9375 21.2109L78.7617 21.1172C77.9648 20.6953 77.1094 20.5664 76.2188 20.5664C75.293 20.5664 74.4258 20.7539 73.6172 21.1406L73.3594 21.293C73.0547 21.5391 71.4609 22.7695 70.793 23.7539L70.582 24.2461C70.5938 24.1875 70.6172 24.1406 70.6172 24.1289C70.6055 24.1641 70.582 24.2109 70.5703 24.2695C70.2891 25.125 69.9609 26.0625 69.9609 26.8594V26.8828ZM85.6406 26.8828V32.8359H88.2188V26.6719C88.2188 26.0156 88.5703 25.2305 88.875 24.7383C89.0039 24.5273 89.8125 23.8594 90.5156 23.4023C90.6445 23.3438 90.7266 23.2734 90.8203 23.2148L90.8672 23.25C90.9844 23.3438 91.1016 23.3789 91.2305 23.4609C91.5234 23.707 91.9219 24.0469 92.2031 24.3281L94.5117 23.0391C93.9844 22.3477 92.9414 21.4922 92.7188 21.3516L92.4727 21.1992C92.4375 21.1875 92.332 21.1172 92.25 21.0703C91.8867 20.8477 91.4062 20.5312 90.7852 20.5312C90.1289 20.5312 89.6602 20.8594 89.4141 21.0469L89.3086 21.1289L89.332 21.1172L89.1562 21.2109C88.9219 21.3398 88.582 21.5977 88.2188 21.8672V20.918H85.6406V26.5664C85.6406 26.6719 85.6289 26.7773 85.6289 26.8828H85.6406ZM98.0508 23.4844V28.8047C98.0508 29.8477 98.5547 30.7734 98.707 31.0195C99.0234 31.5234 99.6914 32.1094 100.266 32.4258L100.453 32.5312C100.957 32.8125 101.52 32.8828 102.094 32.8828H103.453V30.3047H102.094C101.93 30.3047 101.766 30.2695 101.59 30.2109C101.32 30.0234 101.027 29.7891 100.898 29.6602C100.77 29.4141 100.629 29.0742 100.629 28.8047V23.4844H104.73V20.9062H100.629V13.6992H98.0508V20.9062H96.0586V23.4844H98.0508Z\\\" fill=\\\"black\\\" />\\n<defs>\\n<filter id=\\\"btn-start_filter0_d\\\" x=\\\"6.7818\\\" y=\\\"0.00012207\\\" width=\\\"168.436\\\" height=\\\"49.9999\\\" filterUnits=\\\"userSpaceOnUse\\\" color-interpolation-filters=\\\"sRGB\\\">\\n<feFlood flood-opacity=\\\"0\\\" result=\\\"BackgroundImageFix\\\"></feFlood>\\n<feColorMatrix in=\\\"SourceAlpha\\\" type=\\\"matrix\\\" values=\\\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\\\"></feColorMatrix>\\n<feOffset dx=\\\"2\\\" dy=\\\"2\\\"></feOffset>\\n<feColorMatrix type=\\\"matrix\\\" values=\\\"0 0 0 0 0.2 0 0 0 0 0.2 0 0 0 0 0.2 0 0 0 1 0\\\"></feColorMatrix>\\n<feBlend mode=\\\"normal\\\" in2=\\\"BackgroundImageFix\\\" result=\\\"effect1_dropShadow\\\"></feBlend>\\n<feBlend mode=\\\"normal\\\" in=\\\"SourceGraphic\\\" in2=\\\"effect1_dropShadow\\\" result=\\\"shape\\\"></feBlend>\\n</filter>\\n</defs>\\n</symbol>\"\n});\nvar result = sprite.add(symbol);\nexport default symbol","var map = {\n\t\"./arrow.svg\": \"d4d9\",\n\t\"./back-icon.svg\": \"b610\",\n\t\"./background-header.svg\": \"8ef9\",\n\t\"./background.svg\": \"9215\",\n\t\"./bar-icon.svg\": \"de35\",\n\t\"./btn-start-active.svg\": \"657a\",\n\t\"./btn-start.svg\": \"c546\",\n\t\"./cereals-icon.svg\": \"1be2\",\n\t\"./chart-color-icon.svg\": \"5cb8\",\n\t\"./chartview-shape-background.svg\": \"5669\",\n\t\"./close-icon.svg\": \"536d\",\n\t\"./coffee-icon.svg\": \"ebb0\",\n\t\"./fish-icon.svg\": \"b68e\",\n\t\"./fruit-icon.svg\": \"313f\",\n\t\"./line-icon.svg\": \"2a46\",\n\t\"./logo-dailybread.svg\": \"7fa6\",\n\t\"./meat-icon.svg\": \"c0a5\",\n\t\"./milk-icon.svg\": \"7170\",\n\t\"./plus-icon.svg\": \"5a0d\",\n\t\"./remove-icon.svg\": \"a9f6\",\n\t\"./select-arrow.svg\": \"af10\",\n\t\"./start-button.svg\": \"550a\",\n\t\"./sugar-icon.svg\": \"8b30\",\n\t\"./vegetable-icon.svg\": \"6c0c\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"cfd9\";","import SpriteSymbol from \"svg-baker-runtime/browser-symbol\";\nimport sprite from \"svg-sprite-loader/runtime/browser-sprite.build\";\nvar symbol = new SpriteSymbol({\n  \"id\": \"arrow\",\n  \"use\": \"arrow-usage\",\n  \"viewBox\": \"0 0 26 8\",\n  \"content\": \"<symbol viewBox=\\\"0 0 26 8\\\" fill=\\\"none\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" id=\\\"arrow\\\">\\n<path d=\\\"M0.646447 3.64645C0.451184 3.84171 0.451184 4.15829 0.646447 4.35356L3.82843 7.53554C4.02369 7.7308 4.34027 7.7308 4.53553 7.53554C4.7308 7.34027 4.7308 7.02369 4.53553 6.82843L1.70711 4L4.53553 1.17157C4.7308 0.976313 4.7308 0.65973 4.53553 0.464468C4.34027 0.269206 4.02369 0.269206 3.82843 0.464468L0.646447 3.64645ZM26 3.5L1 3.5L1 4.5L26 4.5L26 3.5Z\\\" fill=\\\"black\\\" />\\n</symbol>\"\n});\nvar result = sprite.add(symbol);\nexport default symbol","import SpriteSymbol from \"svg-baker-runtime/browser-symbol\";\nimport sprite from \"svg-sprite-loader/runtime/browser-sprite.build\";\nvar symbol = new SpriteSymbol({\n  \"id\": \"bar-icon\",\n  \"use\": \"bar-icon-usage\",\n  \"viewBox\": \"0 0 35 37\",\n  \"content\": \"<symbol viewBox=\\\"0 0 35 37\\\" fill=\\\"none\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" id=\\\"bar-icon\\\">\\n<rect x=\\\"12.6667\\\" y=\\\"1\\\" width=\\\"9.66666\\\" height=\\\"34.1666\\\" rx=\\\"1\\\" fill=\\\"#FCFCFC\\\" stroke=\\\"black\\\" stroke-width=\\\"2\\\" />\\n<rect x=\\\"24.3333\\\" y=\\\"15\\\" width=\\\"9.66666\\\" height=\\\"20.1667\\\" rx=\\\"1\\\" fill=\\\"#FCFCFC\\\" stroke=\\\"black\\\" stroke-width=\\\"2\\\" />\\n<rect x=\\\"1\\\" y=\\\"10.3333\\\" width=\\\"9.66666\\\" height=\\\"24.8333\\\" rx=\\\"1\\\" fill=\\\"#FCFCFC\\\" stroke=\\\"black\\\" stroke-width=\\\"2\\\" />\\n</symbol>\"\n});\nvar result = sprite.add(symbol);\nexport default symbol","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DateSelect.vue?vue&type=style&index=0&id=115e400e&scoped=true&lang=scss&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DateSelect.vue?vue&type=style&index=0&id=115e400e&scoped=true&lang=scss&\"","import SpriteSymbol from \"svg-baker-runtime/browser-symbol\";\nimport sprite from \"svg-sprite-loader/runtime/browser-sprite.build\";\nvar symbol = new SpriteSymbol({\n  \"id\": \"coffee-icon\",\n  \"use\": \"coffee-icon-usage\",\n  \"viewBox\": \"0 0 80 80\",\n  \"content\": \"<symbol viewBox=\\\"0 0 80 80\\\" fill=\\\"none\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" id=\\\"coffee-icon\\\">\\n<mask id=\\\"coffee-icon_mask0\\\" mask-type=\\\"alpha\\\" maskUnits=\\\"userSpaceOnUse\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"80\\\" height=\\\"80\\\">\\n<rect width=\\\"80\\\" height=\\\"80\\\" fill=\\\"#C4C4C4\\\" />\\n</mask>\\n<g mask=\\\"url(#coffee-icon_mask0)\\\">\\n<path d=\\\"M51.5576 40.4935L51.5556 40.4975C45.7925 51.6928 46.5618 58.4022 48.1444 62.0565C57.5997 61.3575 66.0152 52.7971 67.9825 40.7151C69.6081 29.3634 64.8589 18.6012 56.9439 13.9481C57.9497 21.3501 56.7857 30.2252 51.5576 40.4935Z\\\" fill=\\\"black\\\" stroke=\\\"black\\\" stroke-width=\\\"2\\\" />\\n<path d=\\\"M47.3625 33.8686L47.3648 33.8645C53.2374 23.3178 52.5346 16.7662 50.9932 13.1312C41.5604 13.2453 33.098 21.0616 31.0022 32.6567C29.2584 43.5425 33.8277 54.2698 41.6628 59.2791C40.7739 52.0441 42.0528 43.5108 47.3625 33.8686Z\\\" fill=\\\"black\\\" stroke=\\\"black\\\" stroke-width=\\\"2\\\" />\\n<path d=\\\"M31.8008 50.7318L31.8009 50.7363C32.1491 63.3316 36.0703 68.8276 39.2286 71.2558C47.2018 66.0536 50.4584 54.4771 46.3461 42.9514C42.2865 32.2301 32.9086 25.1184 23.7005 24.892C28.1627 30.8794 31.4306 39.2093 31.8008 50.7318Z\\\" fill=\\\"#FCFCFC\\\" stroke=\\\"black\\\" stroke-width=\\\"2\\\" />\\n<path d=\\\"M24.9173 46.9731L24.9173 46.9684C24.979 34.8877 21.1928 29.4972 18.0799 27.0657C9.84384 31.7454 6.1863 42.6937 9.95033 53.8559C13.681 64.2271 22.884 71.3954 32.1937 71.9723C27.9148 66.0743 24.913 57.9875 24.9173 46.9731Z\\\" fill=\\\"#FCFCFC\\\" stroke=\\\"black\\\" stroke-width=\\\"2\\\" />\\n</g>\\n</symbol>\"\n});\nvar result = sprite.add(symbol);\nexport default symbol"],"sourceRoot":""}